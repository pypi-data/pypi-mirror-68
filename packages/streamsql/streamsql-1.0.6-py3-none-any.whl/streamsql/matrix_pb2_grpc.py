# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import matrix_pb2 as matrix__pb2


class MatrixBackendStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVector = channel.unary_unary(
        '/matrices.MatrixBackend/GetVector',
        request_serializer=matrix__pb2.FeatureStore.SerializeToString,
        response_deserializer=matrix__pb2.Vector.FromString,
        )
    self.GetNearestNeighbors = channel.unary_unary(
        '/matrices.MatrixBackend/GetNearestNeighbors',
        request_serializer=matrix__pb2.NNRequest.SerializeToString,
        response_deserializer=matrix__pb2.NeighborList.FromString,
        )
    self.GetFeatures = channel.unary_unary(
        '/matrices.MatrixBackend/GetFeatures',
        request_serializer=matrix__pb2.Matrix.SerializeToString,
        response_deserializer=matrix__pb2.FeatureList.FromString,
        )
    self.GetEntities = channel.unary_unary(
        '/matrices.MatrixBackend/GetEntities',
        request_serializer=matrix__pb2.Matrix.SerializeToString,
        response_deserializer=matrix__pb2.EntityList.FromString,
        )
    self.GetEntityVectors = channel.unary_unary(
        '/matrices.MatrixBackend/GetEntityVectors',
        request_serializer=matrix__pb2.Entities.SerializeToString,
        response_deserializer=matrix__pb2.VectorDict.FromString,
        )
    self.SaveTree = channel.unary_unary(
        '/matrices.MatrixBackend/SaveTree',
        request_serializer=matrix__pb2.Matrix.SerializeToString,
        response_deserializer=matrix__pb2.StringResponse.FromString,
        )


class MatrixBackendServicer(object):
  """Interface exported by the server.
  """

  def GetVector(self, request, context):
    """A simple RPC.

    Obtains the feature at a given position.

    A feature with an empty name is returned if there's no feature at the given
    position.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetNearestNeighbors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeatures(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEntities(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEntityVectors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SaveTree(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MatrixBackendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVector': grpc.unary_unary_rpc_method_handler(
          servicer.GetVector,
          request_deserializer=matrix__pb2.FeatureStore.FromString,
          response_serializer=matrix__pb2.Vector.SerializeToString,
      ),
      'GetNearestNeighbors': grpc.unary_unary_rpc_method_handler(
          servicer.GetNearestNeighbors,
          request_deserializer=matrix__pb2.NNRequest.FromString,
          response_serializer=matrix__pb2.NeighborList.SerializeToString,
      ),
      'GetFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeatures,
          request_deserializer=matrix__pb2.Matrix.FromString,
          response_serializer=matrix__pb2.FeatureList.SerializeToString,
      ),
      'GetEntities': grpc.unary_unary_rpc_method_handler(
          servicer.GetEntities,
          request_deserializer=matrix__pb2.Matrix.FromString,
          response_serializer=matrix__pb2.EntityList.SerializeToString,
      ),
      'GetEntityVectors': grpc.unary_unary_rpc_method_handler(
          servicer.GetEntityVectors,
          request_deserializer=matrix__pb2.Entities.FromString,
          response_serializer=matrix__pb2.VectorDict.SerializeToString,
      ),
      'SaveTree': grpc.unary_unary_rpc_method_handler(
          servicer.SaveTree,
          request_deserializer=matrix__pb2.Matrix.FromString,
          response_serializer=matrix__pb2.StringResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'matrices.MatrixBackend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
