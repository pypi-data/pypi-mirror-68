Metadata-Version: 2.1
Name: plotting-tools
Version: 0.0.1
Summary: Contains various plotting functions.
Home-page: https://github.com/lara-kassab/plotting_tools
Author: Lara Kassab
Author-email: larakassab01@gmail.com
License: MIT
Description: # Python Plotting Tools
        
        [![PyPI Version](https://img.shields.io/pypi/v/plotting_tools.svg)](https://pypi.org/project/plotting_tools/)
        [![Supported Python Versions](https://img.shields.io/pypi/pyversions/plotting_tools.svg)](https://pypi.org/project/plotting_tools/)
        
        Contains various plotting functions.
        
        ---
        
        ## Installation
        
        To install Python Plotting Tools, run this command in your terminal:
        
        ```bash
        $ pip install -U plotting_tools
        ```
        
        This is the preferred method to install Python Plotting Tools, as it will always install the most recent stable release.
        
        If you don't have [pip](https://pip.pypa.io) installed, these [installation instructions](http://docs.python-guide.org/en/latest/starting/installation/) can guide
        you through the process.
        
        ## Quick Start
        ```python
        >>> from plotting_tools import Example
        >>> a = Example()
        >>> a.get_value()
        10
        
        ```
        
        ## Citing
        If you use our work in an academic setting, please cite our paper:
        
        
        
        ## Development
        See [CONTRIBUTING.md](CONTRIBUTING.md) for information related to developing the code.
        
        #### Suggested Git Branch Strategy
        1. `master` is for the most up-to-date development, very rarely should you directly commit to this branch. Your day-to-day work should exist on branches separate from `master`. It is recommended to commit to development branches and make pull requests to master.4. It is recommended to use "Squash and Merge" commits when committing PR's. It makes each set of changes to `master`
        atomic and as a side effect naturally encourages small well defined PR's.
        
        
        #### Additional Optional Setup Steps:
        * Create an initial release to test.PyPI and PyPI.
            * Follow [This PyPA tutorial](https://packaging.python.org/tutorials/packaging-projects/#generating-distribution-archives), starting from the "Generating distribution archives" section.
        
        * Create a blank github repository (without a README or .gitignore) and push the code to it.
        
        * Delete these setup instructions from `README.md` when you are finished with them.
        
Keywords: plotting_tools
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Science/Research 
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Provides-Extra: test
Provides-Extra: docs
Provides-Extra: setup
Provides-Extra: dev
Provides-Extra: all
