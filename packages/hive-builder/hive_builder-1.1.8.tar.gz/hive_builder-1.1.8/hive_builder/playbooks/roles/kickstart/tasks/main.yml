---
- name: create directory
  file:
    path: "{{ hive_context_dir }}/ks"
    state: directory
    mode: 0775
- name: put kickstart files
  template:
    src: kickstart.j2
    dest: "{{ hive_context_dir }}/ks/{{ ks_host.split('.')[0] }}.ks"
  loop: "{{ groups['servers'] | intersect(groups[hive_stage] )}}"
  loop_control:
    loop_var: ks_host
- name: generate usb image
  shell: |
    hdiutil makehybrid -iso -joliet -o {{ hive_context_dir }}/ks.iso {{ hive_context_dir }}/ks
  args:
    creates: "{{ hive_context_dir }}/ks.iso"
  when: ansible_distribution == 'MacOSX'
- name: put ssh_config
  blockinfile:
    dest: "{{ hive_context_dir }}/ssh_config"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ setup_host }}"
    state: present
    create: yes
    mode: 0644
    block: |
      Host {{ setup_host }}
        HostName {{ hostvars[setup_host].hive_private_ip }}
        UserKnownHostsFile /dev/null
        User {{ hostvars[setup_host].hive_safe_admin }}
        StrictHostKeyChecking no
        PasswordAuthentication no
        IdentityFile {{ hive_safe_private_key_path }}
        IdentitiesOnly yes
        LogLevel FATAL
  loop: "{{ groups['servers'] | intersect(groups[hive_stage] )}}"
  loop_control:
    loop_var: setup_host

