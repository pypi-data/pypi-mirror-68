////
/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>
///
/// Permission is hereby granted, free of charge, to any person obtaining a
/// copy of this software and associated documentation files (the "Software"),
/// to deal in the Software without restriction, including without limitation
/// the rights to use, copy, modify, merge, publish, distribute, sublicense,
/// and/or sell copies of the Software, and to permit persons to whom the
/// Software is furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in
/// all copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
/// DEALINGS
////

// ----------------------------------------------------------------------------
// Variables
// ----------------------------------------------------------------------------

///
/// Admonition flavours
///
$admonitions: (
  note: pencil $clr-blue-a200,
  abstract summary tldr: text-subject $clr-light-blue-a400,
  info todo: information $clr-cyan-a700,
  tip hint important: fire $clr-teal-a700,
  success check done: check-circle $clr-green-a700,
  question help faq: help-circle $clr-light-green-a700,
  warning caution attention: alert $clr-orange-a400,
  failure fail missing: close-circle $clr-red-a200,
  danger error: flash-circle $clr-red-a400,
  bug: bug $clr-pink-a400,
  example: format-list-numbered $clr-deep-purple-a400,
  quote cite: format-quote-close $clr-grey) !default;

// ----------------------------------------------------------------------------
// Rules: layout
// ----------------------------------------------------------------------------

// Icon definitions
:root {
  @each $names, $props in $admonitions {
    $name: nth($names, 1);
    $icon: nth($props, 1);
    $fill: nth($props, 2);

    // Inline icon through string-replace-loader in webpack
    --print-md-admonition-icon--#{$name}: svg-load("@mdi/svg/svg/#{$icon}.svg", fill: "#{$fill}");
  }
}

// ----------------------------------------------------------------------------

@media print {
  // Scoped in typesetted content to match specificity of regular content
  .md-typeset {
    // Admonition title
    .admonition-title {
      // Icon
      &::before {
        background-color: transparent;
        background-image: var(--print-md-admonition-icon--note);
      }
    }
  }

  // ----------------------------------------------------------------------------
  // Rules: flavours
  // ----------------------------------------------------------------------------

  @each $names, $props in $admonitions {
    $name: nth($names, 1);
    $tint: nth($props, 2);

    // Define base class
    .md-typeset .#{$name} > .admonition-title,
    .md-typeset .#{$name} > summary {
      &::before {
        background-color: transparent;
        background-image: var(--print-md-admonition-icon--#{$name});
      }
    }

    // Define synonyms for base class
    @if length($names) > 1 {
      @for $n from 2 through length($names) {
        .#{nth($names, $n)} {
          @extend .#{$name};
        }
      }
    }
  }
}
