{"version":3,"sources":["webpack:///./src/components/ha-toast.ts","webpack:///./src/managers/notification-manager.ts"],"names":["PaperToast","customElements","get","HaToast","_PaperToast","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_defineProperty","_assertThisInitialized","call","apply","concat","key","value","_this2","_get","_getPrototypeOf","prototype","_resizeListener","ev","classList","toggle","matches","_mediaq","window","matchMedia","addListener","removeListener","define","NotificationManager","property","query","_callee","_ref","message","action","duration","dismissable","toast","regeneratorRuntime","wrap","_context","prev","next","_toast","updateComplete","setAttribute","computeRTL","hass","_action","undefined","_noCancelOnOutsideClick","hide","show","text","stop","html","_templateObject","_templateObject2","buttonClicked","css","_templateObject3","LitElement"],"mappings":"yuDAIA,IAAMA,EAAaC,eAAeC,IAAI,eAIzBC,EAAb,SAAAC,sOAAAC,CAAAF,EAA6BH,GAA7B,UAAAM,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,IAAAK,+FAAAC,CAAAC,KAAAP,GAAA,QAAAQ,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAC,EAAAC,EAAAV,EAAAF,EAAAa,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,KAAA,0BAAAG,EAAAC,EAAAV,GAAA,kBAAAA,EAAA,SAAAL,KAAA,EAAAmB,IAAA,oBAAAC,MAAA,WAK6B,IAAAC,EAAAd,KACzBe,EAAAC,EAAAvB,EAAAwB,WAAA,oBAAAjB,MAAAS,KAAAT,MAEKA,KAAKkB,kBACRlB,KAAKkB,gBAAkB,SAACC,GAAD,OACrBL,EAAKM,UAAUC,OAAO,aAAcF,EAAGG,UACzCtB,KAAKuB,QAAUC,OAAOC,WAAW,sBAEnCzB,KAAKuB,QAASG,YAAY1B,KAAKkB,iBAC/BlB,KAAKkB,gBAAgBlB,KAAKuB,WAd9B,CAAAX,IAAA,uBAAAC,MAAA,WAkBIE,EAAAC,EAAAvB,EAAAwB,WAAA,uBAAAjB,MAAAS,KAAAT,MACAA,KAAKuB,QAASI,eAAe3B,KAAKkB,iDAnBtCzB,EAAA,4pGA6BAF,eAAeqC,OAAO,WAAYnC,OCV5BoC,iuNACHC,kEAEAA,qEAEAA,qEAA6C,8BAE7CC,YAAM,4HAEP,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACET,EADFD,EACEC,QACAC,EAFFF,EAEEE,OACAC,EAHFH,EAGEG,SACAC,EAJFJ,EAIEI,YAEIC,EAAQtC,KAAK4C,OANnB,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EASU3C,KAAK6C,eATf,OAUIP,EAAQtC,KAAK4C,OAVjB,OAYEN,EAAMQ,aAAa,MAAOC,YAAW/C,KAAKgD,MAAQ,MAAQ,OAC1DhD,KAAKiD,QAAUd,QAAUe,EACzBlD,KAAKmD,6BACaD,IAAhBb,IAAqCA,EACvCC,EAAMc,OACNd,EAAMe,KAAK,CACTC,KAAMpB,EACNE,cAAuBc,IAAbd,EAAyB,IAAOA,IAnB9C,yBAAAK,EAAAc,SAAAvB,EAAAhC,8QAuBA,WACE,OAAOwD,YAAPC,IACsCzD,KAAKmD,wBACrCnD,KAAKiD,QACHO,YADFE,IAGe1D,KAAKiD,QAAQK,KACbtD,KAAK2D,eAGlB,+CAKV,WACE3D,KAAK4C,OAAOQ,OACRpD,KAAKiD,SACPjD,KAAKiD,QAAQd,oDAIjB,WACE,OAAOyB,YAAPC,UAvD8BC,KAqElCvE,eAAeqC,OAAO,uBAAwBC","file":"chunk.ceca9c4125495bdff2c8.js","sourcesContent":["import \"@polymer/paper-toast/paper-toast\";\nimport type { PaperToastElement } from \"@polymer/paper-toast/paper-toast\";\nimport type { Constructor } from \"../types\";\n\nconst PaperToast = customElements.get(\"paper-toast\") as Constructor<\n  PaperToastElement\n>;\n\nexport class HaToast extends PaperToast {\n  private _resizeListener?: (obj: { matches: boolean }) => unknown;\n\n  private _mediaq?: MediaQueryList;\n\n  public connectedCallback() {\n    super.connectedCallback();\n\n    if (!this._resizeListener) {\n      this._resizeListener = (ev) =>\n        this.classList.toggle(\"fit-bottom\", ev.matches);\n      this._mediaq = window.matchMedia(\"(max-width: 599px\");\n    }\n    this._mediaq!.addListener(this._resizeListener);\n    this._resizeListener(this._mediaq!);\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._mediaq!.removeListener(this._resizeListener!);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-toast\": HaToast;\n  }\n}\n\ncustomElements.define(\"ha-toast\", HaToast);\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeRTL } from \"../common/util/compute_rtl\";\nimport \"../components/ha-toast\";\nimport type { HaToast } from \"../components/ha-toast\";\nimport type { HomeAssistant } from \"../types\";\n\nexport interface ShowToastParams {\n  message: string;\n  action?: ToastActionParams;\n  duration?: number;\n  dismissable?: boolean;\n}\n\nexport interface ToastActionParams {\n  action: () => void;\n  text: string;\n}\n\nclass NotificationManager extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _action?: ToastActionParams;\n\n  @property() private _noCancelOnOutsideClick = false;\n\n  @query(\"ha-toast\") private _toast!: HaToast;\n\n  public async showDialog({\n    message,\n    action,\n    duration,\n    dismissable,\n  }: ShowToastParams) {\n    let toast = this._toast;\n    // Can happen on initial load\n    if (!toast) {\n      await this.updateComplete;\n      toast = this._toast;\n    }\n    toast.setAttribute(\"dir\", computeRTL(this.hass) ? \"rtl\" : \"ltr\");\n    this._action = action || undefined;\n    this._noCancelOnOutsideClick =\n      dismissable === undefined ? false : !dismissable;\n    toast.hide();\n    toast.show({\n      text: message,\n      duration: duration === undefined ? 3000 : duration,\n    });\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-toast .noCancelOnOutsideClick=${this._noCancelOnOutsideClick}>\n        ${this._action\n          ? html`\n              <mwc-button\n                .label=${this._action.text}\n                @click=${this.buttonClicked}\n              ></mwc-button>\n            `\n          : \"\"}\n      </ha-toast>\n    `;\n  }\n\n  private buttonClicked() {\n    this._toast.hide();\n    if (this._action) {\n      this._action.action();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-toast {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      mwc-button {\n        color: var(--primary-color);\n        font-weight: bold;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"notification-manager\", NotificationManager);\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"hass-notification\": ShowToastParams;\n  }\n}\n"],"sourceRoot":""}