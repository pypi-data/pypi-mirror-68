{"version":3,"sources":["webpack:///./src/components/ha-switch.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/panels/config/zone/dialog-zone-detail.ts","webpack:///./src/common/location/add_distance_to_coord.ts"],"names":["MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","_MwcSwitch2","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","F","d","kind","decorators","property","type","Boolean","key","value","query","_this2","_get","_getPrototypeOf","prototype","style","setProperty","classList","toggle","_slot","assignedNodes","addEventListener","haptic","forwardHaptic","html","_templateObject","ripple","interactionNode","_haChangeHandler","static","css","_templateObject2","e","mdcFoundation","handleChange","checked","formElement","__webpack_require__","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","MwcDialog","createCloseHeading","hass","title","localize","mdiClose","_MwcDialog","_MwcDialog2","HaDialog","LocationEditor","_leafletMap","location","_locationMarker","getBounds","fitBounds","setView","fitZoom","_ignoreFitToMap","changedProps","_initMap","Leaflet","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_callee","_yield$setupLeafletMa","_yield$setupLeafletMa2","regeneratorRuntime","wrap","_context","prev","next","setupLeafletMap","_mapEl","radius","sent","_slicedToArray","ev","_locationUpdated","latlng","invalidateSize","stop","longitude","lng","Math","abs","lat","fireEvent","undefined","bubbles","getRadius","icon","iconHTML","el","document","createElement","setAttribute","outerHTML","_iconEl","divIcon","iconSize","className","_setIcon","editing","_moveMarker","setIcon","_this3","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","_callee2","_this4","_context2","remove","abrupt","setLatLng","disable","_setupEdit","circle","color","radiusColor","defaultRadiusColor","addLayer","marker","draggable","setRadius","setStyle","LitElement","DialogZoneDetail","params","initConfig","movedHomeLocation","_params","_error","entry","_name","name","_icon","_latitude","latitude","config","_longitude","_passive","passive","_radius","getZoneEditorInitData","dx","random","dy","PI","cos","updateComplete","nameValid","trim","iconValid","includes","latValid","String","lngValid","radiusValid","valid","_close","_templateObject3","_valueChanged","_locationValue","passiveRadiusColor","_locationChanged","_passiveChanged","_templateObject4","_deleteEntry","_submitting","_templateObject5","_updateEntry","Number","_ev$currentTarget$loc","currentTarget","configValue","detail","values","updateEntry","createEntry","t0","message","finish","_callee3","_context3","removeEntry","haStyleDialog","_templateObject6","define"],"mappings":"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","file":"chunk.e3e1f1d0d03d1b25eae8.js","sourcesContent":["import { ripple } from \"@material/mwc-ripple/ripple-directive\";\nimport \"@material/mwc-switch\";\nimport type { Switch } from \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  property,\n  query,\n} from \"lit-element\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { Constructor } from \"../types\";\n\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"./ha-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\nimport { mdiClose } from \"@mdi/js\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <mwc-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    dialogAction=\"close\"\n    class=\"close_button\"\n  >\n    <ha-svg-icon path=${mdiClose}></ha-svg-icon>\n  </mwc-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  Circle,\n  DivIcon,\n  DragEndEvent,\n  LatLng,\n  LeafletMouseEvent,\n  Map,\n  Marker,\n} from \"leaflet\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport {\n  LeafletModuleType,\n  setupLeafletMap,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n\n  @property() public radius?: number;\n\n  @property() public radiusColor?: string;\n\n  @property() public icon?: string;\n\n  public fitZoom = 16;\n\n  private _iconEl?: DivIcon;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // eslint-disable-next-line\n  private Leaflet?: LeafletModuleType;\n\n  private _leafletMap?: Map;\n\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html` <div id=\"map\"></div> `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { addDistanceToCoord } from \"../../../common/location/add_distance_to_coord\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-switch\";\nimport \"../../../components/map/ha-location-editor\";\nimport {\n  defaultRadiusColor,\n  getZoneEditorInitData,\n  passiveRadiusColor,\n  ZoneMutableParams,\n} from \"../../../data/zone\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ZoneDetailDialogParams } from \"./show-dialog-zone-detail\";\n\nclass DialogZoneDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _name!: string;\n\n  @property() private _icon!: string;\n\n  @property() private _latitude!: number;\n\n  @property() private _longitude!: number;\n\n  @property() private _passive!: boolean;\n\n  @property() private _radius!: number;\n\n  @property() private _error?: string;\n\n  @property() private _params?: ZoneDetailDialogParams;\n\n  @property() private _submitting = false;\n\n  public async showDialog(params: ZoneDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._name = this._params.entry.name || \"\";\n      this._icon = this._params.entry.icon || \"\";\n      this._latitude = this._params.entry.latitude || this.hass.config.latitude;\n      this._longitude =\n        this._params.entry.longitude || this.hass.config.longitude;\n      this._passive = this._params.entry.passive || false;\n      this._radius = this._params.entry.radius || 100;\n    } else {\n      const initConfig = getZoneEditorInitData();\n      let movedHomeLocation;\n      if (!initConfig?.latitude || !initConfig?.longitude) {\n        movedHomeLocation = addDistanceToCoord(\n          [this.hass.config.latitude, this.hass.config.longitude],\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1),\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1)\n        );\n      }\n      this._latitude = initConfig?.latitude || movedHomeLocation[0];\n      this._longitude = initConfig?.longitude || movedHomeLocation[1];\n      this._name = initConfig?.name || \"\";\n      this._icon = initConfig?.icon || \"mdi:map-marker\";\n\n      this._passive = false;\n      this._radius = 100;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const nameValid = this._name.trim() === \"\";\n    const iconValid = !this._icon.trim().includes(\":\");\n    const latValid = String(this._latitude) === \"\";\n    const lngValid = String(this._longitude) === \"\";\n    const radiusValid = String(this._radius) === \"\";\n\n    const valid =\n      !nameValid && !iconValid && !latValid && !lngValid && !radiusValid;\n\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction=\"\"\n        escapeKeyAction=\"\"\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.entry\n            ? this._params.entry.name\n            : this.hass!.localize(\"ui.panel.config.zone.detail.new_zone\")\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <paper-input\n              dialogInitialFocus\n              .value=${this._name}\n              .configValue=${\"name\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.name\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              required\n              auto-validate\n            ></paper-input>\n            <paper-input\n              .value=${this._icon}\n              .configValue=${\"icon\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon_error_msg\"\n              )}\"\n              .invalid=${iconValid}\n            ></paper-input>\n            <ha-location-editor\n              class=\"flex\"\n              .location=${this._locationValue}\n              .radius=${this._radius}\n              .radiusColor=${this._passive\n                ? passiveRadiusColor\n                : defaultRadiusColor}\n              .icon=${this._icon}\n              @change=${this._locationChanged}\n            ></ha-location-editor>\n            <div class=\"location\">\n              <paper-input\n                .value=${this._latitude}\n                .configValue=${\"latitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.latitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${latValid}\n              ></paper-input>\n              <paper-input\n                .value=${this._longitude}\n                .configValue=${\"longitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.longitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${lngValid}\n              ></paper-input>\n            </div>\n            <paper-input\n              .value=${this._radius}\n              .configValue=${\"radius\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.radius\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${radiusValid}\n            ></paper-input>\n            <p>\n              ${this.hass!.localize(\"ui.panel.config.zone.detail.passive_note\")}\n            </p>\n            <ha-switch .checked=${this._passive} @change=${this._passiveChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.zone.detail.passive\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteEntry}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.zone.detail.delete\")}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateEntry}\"\n          .disabled=${!valid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.zone.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.zone.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private get _locationValue() {\n    return [Number(this._latitude), Number(this._longitude)];\n  }\n\n  private _locationChanged(ev) {\n    [this._latitude, this._longitude] = ev.currentTarget.location;\n    this._radius = ev.currentTarget.radius;\n  }\n\n  private _passiveChanged(ev) {\n    this._passive = ev.target.checked;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const configValue = (ev.target as any).configValue;\n\n    this._error = undefined;\n    this[`_${configValue}`] = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: ZoneMutableParams = {\n        name: this._name.trim(),\n        icon: this._icon.trim(),\n        latitude: this._latitude,\n        longitude: this._longitude,\n        passive: this._passive,\n        radius: this._radius,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .location {\n          display: flex;\n        }\n        .location > * {\n          flex-grow: 1;\n          min-width: 0;\n        }\n        .location > *:first-child {\n          margin-right: 4px;\n        }\n        .location > *:last-child {\n          margin-left: 4px;\n        }\n        ha-location-editor {\n          margin-top: 16px;\n        }\n        ha-user-picker {\n          margin-top: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zone-detail\": DialogZoneDetail;\n  }\n}\n\ncustomElements.define(\"dialog-zone-detail\", DialogZoneDetail);\n","export const addDistanceToCoord = (\n  location: [number, number],\n  dx: number,\n  dy: number\n): [number, number] => {\n  const rEarth = 6378000;\n  const newLatitude = location[0] + (dy / rEarth) * (180 / Math.PI);\n  const newLongitude =\n    location[1] +\n    ((dx / rEarth) * (180 / Math.PI)) / Math.cos((location[0] * Math.PI) / 180);\n  return [newLatitude, newLongitude];\n};\n"],"sourceRoot":""}