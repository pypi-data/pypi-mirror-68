{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu.js","webpack:///./node_modules/@polymer/neon-animation/neon-animatable-behavior.js","webpack:///./node_modules/@polymer/neon-animation/neon-animation-runner-behavior.js","webpack:///./node_modules/@polymer/iron-iconset-svg/iron-iconset-svg.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-icons.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-shared-styles.js"],"names":["Polymer","_template","html","_templateObject","is","behaviors","IronButtonState","IronControlState","IronFormElementBehavior","IronValidatableBehavior","properties","selectedItemLabel","type","String","notify","readOnly","selectedItem","Object","value","label","placeholder","errorMessage","opened","Boolean","observer","allowOutsideScroll","noLabelFloat","reflectToAttribute","alwaysFloatLabel","noAnimations","horizontalAlign","verticalAlign","verticalOffset","Number","dynamicAlign","restoreFocusOnClose","listeners","tap","keyBindings","up down","esc","hostAttributes","role","aria-autocomplete","aria-haspopup","observers","attached","contentElement","this","_setSelectedItem","nodes","dom","$","content","getDistributedNodes","i","l","length","nodeType","Node","ELEMENT_NODE","open","menuButton","close","_onIronSelect","event","detail","item","_onIronDeselect","_onTap","gestures","_selectedItemChanged","getAttribute","textContent","trim","_setSelectedItemLabel","_computeMenuVerticalOffset","opt_verticalOffset","_getValidity","_value","disabled","required","_openedChanged","openState","e","setAttribute","NeonAnimatableBehavior","animationConfig","entryAnimation","exitAnimation","_entryAnimationChanged","name","node","_exitAnimationChanged","_copyProperties","config1","config2","property","_cloneConfig","config","clone","isClone","_getAnimationConfigRecursive","map","allConfigs","thisConfig","_warn","_logf","Array","isArray","index","animatable","id","cachedConfig","push","getAnimationConfig","key","__webpack_require__","d","__webpack_exports__","NeonAnimationRunnerBehavior","_configureAnimations","configs","results","resultsToPlay","neonAnimation","document","createElement","isNeonAnimation","result","configure","console","warn","cancel","timeline","play","animation","_shouldComplete","activeEntries","finished","playState","_complete","complete","playAnimation","cookie","_active","onfinish","fire","bubbles","bind","cancelAnimation","k","entries","j","_polymer_iron_meta_iron_meta_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__","size","rtlMirroring","useGlobalRtlAttribute","created","_meta","IronMeta","style","display","getIconNames","_icons","_createIconMap","keys","n","applyIcon","element","iconName","removeIcon","svg","_cloneIcon","_targetIsRTL","pde","root","insertBefore","childNodes","_svgIcon","removeChild","target","__targetIsRTL","globalElement","body","hasAttribute","documentElement","host","window","getComputedStyle","_nameChanged","async","icons","create","querySelectorAll","forEach","icon","mirrorAllowed","_prepareSvgClone","sourceSvg","cloneNode","createElementNS","viewBox","cssText","appendChild","removeAttribute","$_documentContainer","innerHTML","head"],"mappings":"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","file":"chunk.1e7ac7190c13e3e47a8e.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport './paper-dropdown-menu-icons.js';\nimport './paper-dropdown-menu-shared-styles.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Dropdown\nmenus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-listbox slot=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-listbox>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an\n[`iron-deselect`](iron-selector#event-iron-deselect) event when a child is\ndeselected. The selected or deselected item must be passed as the event's\n`detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n@group Paper Elements\n@element paper-dropdown-menu\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dropdown-menu-shared-styles\"></style>\n\n    <!-- this div fulfills an a11y requirement for combobox, do not remove -->\n    <span role=\"button\"></span>\n    <paper-menu-button id=\"menuButton\" vertical-align=\"[[verticalAlign]]\" horizontal-align=\"[[horizontalAlign]]\" dynamic-align=\"[[dynamicAlign]]\" vertical-offset=\"[[_computeMenuVerticalOffset(noLabelFloat, verticalOffset)]]\" disabled=\"[[disabled]]\" no-animations=\"[[noAnimations]]\" on-iron-select=\"_onIronSelect\" on-iron-deselect=\"_onIronDeselect\" opened=\"{{opened}}\" close-on-activate allow-outside-scroll=\"[[allowOutsideScroll]]\" restore-focus-on-close=\"[[restoreFocusOnClose]]\">\n      <!-- support hybrid mode: user might be using paper-menu-button 1.x which distributes via <content> -->\n      <div class=\"dropdown-trigger\" slot=\"dropdown-trigger\">\n        <paper-ripple></paper-ripple>\n        <!-- paper-input has type=\"text\" for a11y, do not remove -->\n        <paper-input type=\"text\" invalid=\"[[invalid]]\" readonly disabled=\"[[disabled]]\" value=\"[[value]]\" placeholder=\"[[placeholder]]\" error-message=\"[[errorMessage]]\" always-float-label=\"[[alwaysFloatLabel]]\" no-label-float=\"[[noLabelFloat]]\" label=\"[[label]]\">\n          <!-- support hybrid mode: user might be using paper-input 1.x which distributes via <content> -->\n          <iron-icon icon=\"paper-dropdown-menu:arrow-drop-down\" suffix slot=\"suffix\"></iron-icon>\n        </paper-input>\n      </div>\n      <slot id=\"content\" name=\"dropdown-content\" slot=\"dropdown-content\"></slot>\n    </paper-menu-button>\n`,\n\n  is: 'paper-dropdown-menu',\n\n  behaviors: [\n    IronButtonState,\n    IronControlState,\n    IronFormElementBehavior,\n    IronValidatableBehavior\n  ],\n\n  properties: {\n    /**\n     * The derived \"label\" of the currently selected item. This value\n     * is the `label` property on the selected item if set, or else the\n     * trimmed text content of the selected item.\n     */\n    selectedItemLabel: {type: String, notify: true, readOnly: true},\n\n    /**\n     * The last selected item. An item is selected if the dropdown menu has\n     * a child with slot `dropdown-content`, and that child triggers an\n     * `iron-select` event with the selected `item` in the `detail`.\n     *\n     * @type {?Object}\n     */\n    selectedItem: {type: Object, notify: true, readOnly: true},\n\n    /**\n     * The value for this element that will be used when submitting in\n     * a form. It reflects the value of `selectedItemLabel`. If set directly,\n     * it will not update the `selectedItemLabel` value.\n     */\n    value: {\n      type: String,\n      notify: true,\n    },\n\n    /**\n     * The label for the dropdown.\n     */\n    label: {type: String},\n\n    /**\n     * The placeholder for the dropdown.\n     */\n    placeholder: {type: String},\n\n    /**\n     * The error message to display when invalid.\n     */\n    errorMessage: {type: String},\n\n    /**\n     * True if the dropdown is open. Otherwise, false.\n     */\n    opened:\n        {type: Boolean, notify: true, value: false, observer: '_openedChanged'},\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable the floating label. Bind this to the\n     * `<paper-input-container>`'s `noLabelFloat` property.\n     */\n    noLabelFloat: {type: Boolean, value: false, reflectToAttribute: true},\n\n    /**\n     * Set to true to always float the label. Bind this to the\n     * `<paper-input-container>`'s `alwaysFloatLabel` property.\n     */\n    alwaysFloatLabel: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {type: String, value: 'right'},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {type: String, value: 'top'},\n\n    /**\n     * Overrides the vertical offset computed in\n     * _computeMenuVerticalOffset.\n     */\n    verticalOffset: Number,\n\n    /**\n     * If true, the `horizontalAlign` and `verticalAlign` properties will\n     * be considered preferences instead of strict requirements when\n     * positioning the dropdown and may be changed if doing so reduces\n     * the area of the dropdown falling outside of `fitInto`.\n     */\n    dynamicAlign: {type: Boolean},\n\n    /**\n     * Whether focus should be restored to the dropdown when the menu closes.\n     */\n    restoreFocusOnClose: {type: Boolean, value: true},\n  },\n\n  listeners: {'tap': '_onTap'},\n\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {'up down': 'open', 'esc': 'close'},\n\n  hostAttributes:\n      {role: 'combobox', 'aria-autocomplete': 'none', 'aria-haspopup': 'true'},\n\n  observers: ['_selectedItemChanged(selectedItem)'],\n\n  attached: function() {\n    // NOTE(cdata): Due to timing, a preselected value in a `IronSelectable`\n    // child will cause an `iron-select` event to fire while the element is\n    // still in a `DocumentFragment`. This has the effect of causing\n    // handlers not to fire. So, we double check this value on attached:\n    var contentElement = this.contentElement;\n    if (contentElement && contentElement.selectedItem) {\n      this._setSelectedItem(contentElement.selectedItem);\n    }\n  },\n\n  /**\n   * The content element that is contained by the dropdown menu, if any.\n   */\n  get contentElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  /**\n   * Show the dropdown content.\n   */\n  open: function() {\n    this.$.menuButton.open();\n  },\n\n  /**\n   * Hide the dropdown content.\n   */\n  close: function() {\n    this.$.menuButton.close();\n  },\n\n  /**\n   * A handler that is called when `iron-select` is fired.\n   *\n   * @param {CustomEvent} event An `iron-select` event.\n   */\n  _onIronSelect: function(event) {\n    this._setSelectedItem(event.detail.item);\n  },\n\n  /**\n   * A handler that is called when `iron-deselect` is fired.\n   *\n   * @param {CustomEvent} event An `iron-deselect` event.\n   */\n  _onIronDeselect: function(event) {\n    this._setSelectedItem(null);\n  },\n\n  /**\n   * A handler that is called when the dropdown is tapped.\n   *\n   * @param {CustomEvent} event A tap event.\n   */\n  _onTap: function(event) {\n    if (gestures.findOriginalTarget(event) === this) {\n      this.open();\n    }\n  },\n\n  /**\n   * Compute the label for the dropdown given a selected item.\n   *\n   * @param {Element} selectedItem A selected Element item, with an\n   * optional `label` property.\n   */\n  _selectedItemChanged: function(selectedItem) {\n    var value = '';\n    if (!selectedItem) {\n      value = '';\n    } else {\n      value = selectedItem.label || selectedItem.getAttribute('label') ||\n          selectedItem.textContent.trim();\n    }\n\n    this.value = value;\n    this._setSelectedItemLabel(value);\n  },\n\n  /**\n   * Compute the vertical offset of the menu based on the value of\n   * `noLabelFloat`.\n   *\n   * @param {boolean} noLabelFloat True if the label should not float\n   * @param {number=} opt_verticalOffset Optional offset from the user\n   * above the input, otherwise false.\n   */\n  _computeMenuVerticalOffset: function(noLabelFloat, opt_verticalOffset) {\n    // Override offset if it's passed from the user.\n    if (opt_verticalOffset) {\n      return opt_verticalOffset;\n    }\n\n    // NOTE(cdata): These numbers are somewhat magical because they are\n    // derived from the metrics of elements internal to `paper-input`'s\n    // template. The metrics will change depending on whether or not the\n    // input has a floating label.\n    return noLabelFloat ? -4 : 8;\n  },\n\n  /**\n   * Returns false if the element is required and does not have a selection,\n   * and true otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false, or if `required` is true\n   * and the element has a valid selection.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || (this.required && !!this.value);\n  },\n\n  _openedChanged: function() {\n    var openState = this.opened ? 'true' : 'false';\n    var e = this.contentElement;\n    if (e) {\n      e.setAttribute('aria-expanded', openState);\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * `NeonAnimatableBehavior` is implemented by elements containing\n * animations for use with elements implementing\n * `NeonAnimationRunnerBehavior`.\n * @polymerBehavior\n */\nexport const NeonAnimatableBehavior = {\n\n  properties: {\n\n    /**\n     * Animation configuration. See README for more info.\n     */\n    animationConfig: {type: Object},\n\n    /**\n     * Convenience property for setting an 'entry' animation. Do not set\n     * `animationConfig.entry` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    entryAnimation: {\n      observer: '_entryAnimationChanged',\n      type: String,\n    },\n\n    /**\n     * Convenience property for setting an 'exit' animation. Do not set\n     * `animationConfig.exit` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    exitAnimation: {\n      observer: '_exitAnimationChanged',\n      type: String,\n    },\n\n  },\n\n  _entryAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['entry'] = [{name: this.entryAnimation, node: this}];\n  },\n\n  _exitAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['exit'] = [{name: this.exitAnimation, node: this}];\n  },\n\n  _copyProperties: function(config1, config2) {\n    // shallowly copy properties from config2 to config1\n    for (var property in config2) {\n      config1[property] = config2[property];\n    }\n  },\n\n  _cloneConfig: function(config) {\n    var clone = {isClone: true};\n    this._copyProperties(clone, config);\n    return clone;\n  },\n\n  _getAnimationConfigRecursive: function(type, map, allConfigs) {\n    if (!this.animationConfig) {\n      return;\n    }\n\n    if (this.animationConfig.value &&\n        typeof this.animationConfig.value === 'function') {\n      this._warn(this._logf(\n          'playAnimation',\n          'Please put \\'animationConfig\\' inside of your components \\'properties\\' object instead of outside of it.'));\n      return;\n    }\n\n    // type is optional\n    var thisConfig;\n    if (type) {\n      thisConfig = this.animationConfig[type];\n    } else {\n      thisConfig = this.animationConfig;\n    }\n\n    if (!Array.isArray(thisConfig)) {\n      thisConfig = [thisConfig];\n    }\n\n    // iterate animations and recurse to process configurations from child nodes\n    if (thisConfig) {\n      for (var config, index = 0; config = thisConfig[index]; index++) {\n        if (config.animatable) {\n          config.animatable._getAnimationConfigRecursive(\n              config.type || type, map, allConfigs);\n        } else {\n          if (config.id) {\n            var cachedConfig = map[config.id];\n            if (cachedConfig) {\n              // merge configurations with the same id, making a clone lazily\n              if (!cachedConfig.isClone) {\n                map[config.id] = this._cloneConfig(cachedConfig);\n                cachedConfig = map[config.id];\n              }\n              this._copyProperties(cachedConfig, config);\n            } else {\n              // put any configs with an id into a map\n              map[config.id] = config;\n            }\n          } else {\n            allConfigs.push(config);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * An element implementing `NeonAnimationRunnerBehavior` calls this\n   * method to configure an animation with an optional type. Elements\n   * implementing `NeonAnimatableBehavior` should define the property\n   * `animationConfig`, which is either a configuration object or a map of\n   * animation type to array of configuration objects.\n   */\n  getAnimationConfig: function(type) {\n    var map = {};\n    var allConfigs = [];\n    this._getAnimationConfigRecursive(type, map, allConfigs);\n    // append the configurations saved in the map to the array\n    for (var key in map) {\n      allConfigs.push(map[key]);\n    }\n    return allConfigs;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {NeonAnimatableBehavior} from './neon-animatable-behavior.js';\n\n/**\n * `NeonAnimationRunnerBehavior` adds a method to run animations.\n *\n * @polymerBehavior NeonAnimationRunnerBehavior\n */\nexport const NeonAnimationRunnerBehaviorImpl = {\n\n  _configureAnimations: function(configs) {\n    var results = [];\n    var resultsToPlay = [];\n\n    if (configs.length > 0) {\n      for (let config, index = 0; config = configs[index]; index++) {\n        let neonAnimation = document.createElement(config.name);\n        // is this element actually a neon animation?\n        if (neonAnimation.isNeonAnimation) {\n          let result = null;\n          // Closure compiler does not work well with a try / catch here.\n          // .configure needs to be explicitly defined\n          if (!neonAnimation.configure) {\n            /**\n             * @param {Object} config\n             * @return {AnimationEffectReadOnly}\n             */\n            neonAnimation.configure = function(config) {\n              return null;\n            }\n          }\n\n          result = neonAnimation.configure(config);\n          resultsToPlay.push({\n            result: result,\n            config: config,\n            neonAnimation: neonAnimation,\n          });\n        } else {\n          console.warn(this.is + ':', config.name, 'not found!');\n        }\n      }\n    }\n\n    for (var i = 0; i < resultsToPlay.length; i++) {\n      let result = resultsToPlay[i].result;\n      let config = resultsToPlay[i].config;\n      let neonAnimation = resultsToPlay[i].neonAnimation;\n      // configuration or play could fail if polyfills aren't loaded\n      try {\n        // Check if we have an Effect rather than an Animation\n        if (typeof result.cancel != 'function') {\n          result = document.timeline.play(result);\n        }\n      } catch (e) {\n        result = null;\n        console.warn('Couldnt play', '(', config.name, ').', e);\n      }\n\n      if (result) {\n        results.push({\n          neonAnimation: neonAnimation,\n          config: config,\n          animation: result,\n        });\n      }\n    }\n\n    return results;\n  },\n\n  _shouldComplete: function(activeEntries) {\n    var finished = true;\n    for (var i = 0; i < activeEntries.length; i++) {\n      if (activeEntries[i].animation.playState != 'finished') {\n        finished = false;\n        break;\n      }\n    }\n    return finished;\n  },\n\n  _complete: function(activeEntries) {\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].neonAnimation.complete(activeEntries[i].config);\n    }\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.cancel();\n    }\n  },\n\n  /**\n   * Plays an animation with an optional `type`.\n   * @param {string=} type\n   * @param {!Object=} cookie\n   */\n  playAnimation: function(type, cookie) {\n    var configs = this.getAnimationConfig(type);\n    if (!configs) {\n      return;\n    }\n    this._active = this._active || {};\n    if (this._active[type]) {\n      this._complete(this._active[type]);\n      delete this._active[type];\n    }\n\n    var activeEntries = this._configureAnimations(configs);\n\n    if (activeEntries.length == 0) {\n      this.fire('neon-animation-finish', cookie, {bubbles: false});\n      return;\n    }\n\n    this._active[type] = activeEntries;\n\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.onfinish = function() {\n        if (this._shouldComplete(activeEntries)) {\n          this._complete(activeEntries);\n          delete this._active[type];\n          this.fire('neon-animation-finish', cookie, {bubbles: false});\n        }\n      }.bind(this);\n    }\n  },\n\n  /**\n   * Cancels the currently running animations.\n   */\n  cancelAnimation: function() {\n    for (var k in this._active) {\n      var entries = this._active[k]\n\n                    for (var j in entries) {\n        entries[j].animation.cancel();\n      }\n    }\n\n    this._active = {};\n  }\n};\n\n/** @polymerBehavior */\nexport const NeonAnimationRunnerBehavior =\n    [NeonAnimatableBehavior, NeonAnimationRunnerBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n/**\n * The `iron-iconset-svg` element allows users to define their own icon sets\n * that contain svg icons. The svg icon elements should be children of the\n * `iron-iconset-svg` element. Multiple icons should be given distinct id's.\n *\n * Using svg elements to create icons has a few advantages over traditional\n * bitmap graphics like jpg or png. Icons that use svg are vector based so\n * they are resolution independent and should look good on any device. They\n * are stylable via css. Icons can be themed, colorized, and even animated.\n *\n * Example:\n *\n *     <iron-iconset-svg name=\"my-svg-icons\" size=\"24\">\n *       <svg>\n *         <defs>\n *           <g id=\"shape\">\n *             <rect x=\"12\" y=\"0\" width=\"12\" height=\"24\" />\n *             <circle cx=\"12\" cy=\"12\" r=\"12\" />\n *           </g>\n *         </defs>\n *       </svg>\n *     </iron-iconset-svg>\n *\n * This will automatically register the icon set \"my-svg-icons\" to the iconset\n * database.  To use these icons from within another element, make a\n * `iron-iconset` element and call the `byId` method\n * to retrieve a given iconset. To apply a particular icon inside an\n * element use the `applyIcon` method. For example:\n *\n *     iconset.applyIcon(iconNode, 'car');\n *\n * @element iron-iconset-svg\n * @demo demo/index.html\n * @implements {Polymer.Iconset}\n */\nPolymer({\n  is: 'iron-iconset-svg',\n\n  properties: {\n\n    /**\n     * The name of the iconset.\n     */\n    name: {type: String, observer: '_nameChanged'},\n\n    /**\n     * The size of an individual icon. Note that icons must be square.\n     */\n    size: {type: Number, value: 24},\n\n    /**\n     * Set to true to enable mirroring of icons where specified when they are\n     * stamped. Icons that should be mirrored should be decorated with a\n     * `mirror-in-rtl` attribute.\n     *\n     * NOTE: For performance reasons, direction will be resolved once per\n     * document per iconset, so moving icons in and out of RTL subtrees will\n     * not cause their mirrored state to change.\n     */\n    rtlMirroring: {type: Boolean, value: false},\n\n    /**\n     * Set to true to measure RTL based on the dir attribute on the body or\n     * html elements (measured on document.body or document.documentElement as\n     * available).\n     */\n    useGlobalRtlAttribute: {type: Boolean, value: false}\n  },\n\n  created: function() {\n    this._meta = new IronMeta({type: 'iconset', key: null, value: null});\n  },\n\n  attached: function() {\n    this.style.display = 'none';\n  },\n\n  /**\n   * Construct an array of all icon names in this iconset.\n   *\n   * @return {!Array} Array of icon names.\n   */\n  getIconNames: function() {\n    this._icons = this._createIconMap();\n    return Object.keys(this._icons).map(function(n) {\n      return this.name + ':' + n;\n    }, this);\n  },\n\n  /**\n   * Applies an icon to the given element.\n   *\n   * An svg icon is prepended to the element's shadowRoot if it exists,\n   * otherwise to the element itself.\n   *\n   * If RTL mirroring is enabled, and the icon is marked to be mirrored in\n   * RTL, the element will be tested (once and only once ever for each\n   * iconset) to determine the direction of the subtree the element is in.\n   * This direction will apply to all future icon applications, although only\n   * icons marked to be mirrored will be affected.\n   *\n   * @method applyIcon\n   * @param {Element} element Element to which the icon is applied.\n   * @param {string} iconName Name of the icon to apply.\n   * @return {?Element} The svg element which renders the icon.\n   */\n  applyIcon: function(element, iconName) {\n    // Remove old svg element\n    this.removeIcon(element);\n    // install new svg element\n    var svg = this._cloneIcon(\n        iconName, this.rtlMirroring && this._targetIsRTL(element));\n    if (svg) {\n      // insert svg element into shadow root, if it exists\n      var pde = dom(element.root || element);\n      pde.insertBefore(svg, pde.childNodes[0]);\n      return element._svgIcon = svg;\n    }\n    return null;\n  },\n\n  /**\n   * Remove an icon from the given element by undoing the changes effected\n   * by `applyIcon`.\n   *\n   * @param {Element} element The element from which the icon is removed.\n   */\n  removeIcon: function(element) {\n    // Remove old svg element\n    if (element._svgIcon) {\n      dom(element.root || element).removeChild(element._svgIcon);\n      element._svgIcon = null;\n    }\n  },\n\n  /**\n   * Measures and memoizes the direction of the element. Note that this\n   * measurement is only done once and the result is memoized for future\n   * invocations.\n   */\n  _targetIsRTL: function(target) {\n    if (this.__targetIsRTL == null) {\n      if (this.useGlobalRtlAttribute) {\n        var globalElement =\n            (document.body && document.body.hasAttribute('dir')) ?\n            document.body :\n            document.documentElement;\n\n        this.__targetIsRTL = globalElement.getAttribute('dir') === 'rtl';\n      } else {\n        if (target && target.nodeType !== Node.ELEMENT_NODE) {\n          target = target.host;\n        }\n\n        this.__targetIsRTL =\n            target && window.getComputedStyle(target)['direction'] === 'rtl';\n      }\n    }\n\n    return this.__targetIsRTL;\n  },\n\n  /**\n   *\n   * When name is changed, register iconset metadata\n   *\n   */\n  _nameChanged: function() {\n    this._meta.value = null;\n    this._meta.key = this.name;\n    this._meta.value = this;\n\n    this.async(function() {\n      this.fire('iron-iconset-added', this, {node: window});\n    });\n  },\n\n  /**\n   * Create a map of child SVG elements by id.\n   *\n   * @return {!Object} Map of id's to SVG elements.\n   */\n  _createIconMap: function() {\n    // Objects chained to Object.prototype (`{}`) have members. Specifically,\n    // on FF there is a `watch` method that confuses the icon map, so we\n    // need to use a null-based object here.\n    var icons = Object.create(null);\n    dom(this).querySelectorAll('[id]').forEach(function(icon) {\n      icons[icon.id] = icon;\n    });\n    return icons;\n  },\n\n  /**\n   * Produce installable clone of the SVG element matching `id` in this\n   * iconset, or `undefined` if there is no matching element.\n   *\n   * @return {Element} Returns an installable clone of the SVG element\n   * matching `id`.\n   */\n  _cloneIcon: function(id, mirrorAllowed) {\n    // create the icon map on-demand, since the iconset itself has no discrete\n    // signal to know when it's children are fully parsed\n    this._icons = this._icons || this._createIconMap();\n    return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);\n  },\n\n  /**\n   * @param {Element} sourceSvg\n   * @param {number} size\n   * @param {Boolean} mirrorAllowed\n   * @return {Element}\n   */\n  _prepareSvgClone: function(sourceSvg, size, mirrorAllowed) {\n    if (sourceSvg) {\n      var content = sourceSvg.cloneNode(true),\n          svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n          viewBox =\n              content.getAttribute('viewBox') || '0 0 ' + size + ' ' + size,\n          cssText =\n              'pointer-events: none; display: block; width: 100%; height: 100%;';\n\n      if (mirrorAllowed && content.hasAttribute('mirror-in-rtl')) {\n        cssText +=\n            '-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;';\n      }\n\n      svg.setAttribute('viewBox', viewBox);\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n      // TODO(dfreedm): `pointer-events: none` works around\n      // https://crbug.com/370136\n      // TODO(sjmiles): inline style may not be ideal, but avoids requiring a\n      // shadow-root\n      svg.style.cssText = cssText;\n      svg.appendChild(content).removeAttribute('id');\n      return svg;\n    }\n    return null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<iron-iconset-svg name=\"paper-dropdown-menu\" size=\"24\">\n<svg><defs>\n<g id=\"arrow-drop-down\"><path d=\"M7 10l5 5 5-5z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/paper-styles/default-theme.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<dom-module id=\"paper-dropdown-menu-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        text-align: left;\n\n        /* NOTE(cdata): Both values are needed, since some phones require the\n         * value to be \\`transparent\\`.\n         */\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        -webkit-tap-highlight-color: transparent;\n\n        --paper-input-container-input: {\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          max-width: 100%;\n          box-sizing: border-box;\n          cursor: pointer;\n        };\n\n        @apply --paper-dropdown-menu;\n      }\n\n      :host([disabled]) {\n        @apply --paper-dropdown-menu-disabled;\n      }\n\n      :host([noink]) paper-ripple {\n        display: none;\n      }\n\n      :host([no-label-float]) paper-ripple {\n        top: 8px;\n      }\n\n      paper-ripple {\n        top: 12px;\n        left: 0px;\n        bottom: 8px;\n        right: 0px;\n\n        @apply --paper-dropdown-menu-ripple;\n      }\n\n      paper-menu-button {\n        display: block;\n        padding: 0;\n\n        @apply --paper-dropdown-menu-button;\n      }\n\n      paper-input {\n        @apply --paper-dropdown-menu-input;\n      }\n\n      iron-icon {\n        color: var(--disabled-text-color);\n\n        @apply --paper-dropdown-menu-icon;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"],"sourceRoot":""}