{"version":3,"sources":["webpack:///src/observer.ts","webpack:///./src/components/ha-paper-dropdown-menu.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/resources/dialog-lovelace-resource-detail.ts"],"names":["__webpack_require__","d","__webpack_exports__","observer","proto","propName","constructor","_observers","hasOwnProperty","observers","Map","forEach","v","k","set","userUpdated","updated","changedProperties","call","this","get","undefined","paperDropdownClass","customElements","define","ready","super","setTimeout","window","getComputedStyle","direction","style","textAlign","MwcDialog","createCloseHeading","hass","title","html","localize","mdiClose","_decorate","customElement","_initialize","_MwcDialog","F","[object Object]","args","kind","static","key","value","css","DialogLovelaceResourceDetail","_LitElement","decorators","property","async","params","_params","_error","resource","_url","url","_type","type","updateComplete","urlInvalid","trim","_close","_urlChanged","_typeChanged","_deleteResource","_submitting","_updateResource","ev","detail","item","getAttribute","values","res_type","updateResource","createResource","err","message","removeResource","haStyleDialog","LitElement"],"mappings":"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","file":"chunk.54b10e484326566fedf1.js","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {PropertyValues} from 'lit-element/lib/updating-element';\n\nexport interface Observer {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (value: any, old: any): void;\n}\n\nexport const observer = (observer: Observer) =>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (proto: any, propName: PropertyKey) => {\n      // if we haven't wrapped `updated` in this class, do so\n      if (!proto.constructor._observers) {\n        proto.constructor._observers = new Map<PropertyKey, Observer>();\n        const userUpdated = proto.updated;\n        proto.updated = function(changedProperties: PropertyValues) {\n          userUpdated.call(this, changedProperties);\n          changedProperties.forEach((v, k) => {\n            const observer = this.constructor._observers.get(k);\n            if (observer !== undefined) {\n              observer.call(this, this[k], v);\n            }\n          });\n        };\n        // clone any existing observers (superclasses)\n      } else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (v: any, k: PropertyKey) => proto.constructor._observers.set(k, v));\n      }\n      // set this method\n      proto.constructor._observers.set(propName, observer);\n    };\n","import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport { PolymerElement } from \"@polymer/polymer\";\nimport { Constructor } from \"../types\";\n\nconst paperDropdownClass = customElements.get(\n  \"paper-dropdown-menu\"\n) as Constructor<PolymerElement>;\n\n// patches paper drop down to properly support RTL - https://github.com/PolymerElements/paper-dropdown-menu/issues/183\nexport class HaPaperDropdownClass extends paperDropdownClass {\n  public ready() {\n    super.ready();\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      if (window.getComputedStyle(this).direction === \"rtl\") {\n        this.style.textAlign = \"right\";\n      }\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dropdown-menu\": HaPaperDropdownClass;\n  }\n}\n\ncustomElements.define(\"ha-paper-dropdown-menu\", HaPaperDropdownClass);\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"./ha-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\nimport { mdiClose } from \"@mdi/js\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <mwc-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    dialogAction=\"close\"\n    class=\"close_button\"\n  >\n    <ha-svg-icon path=${mdiClose}></ha-svg-icon>\n  </mwc-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-paper-dropdown-menu\";\nimport {\n  LovelaceResource,\n  LovelaceResourcesMutableParams,\n} from \"../../../../data/lovelace\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceResourceDetailsDialogParams } from \"./show-dialog-lovelace-resource-detail\";\n\n@customElement(\"dialog-lovelace-resource-detail\")\nexport class DialogLovelaceResourceDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceResourceDetailsDialogParams;\n\n  @property() private _url!: LovelaceResource[\"url\"];\n\n  @property() private _type!: LovelaceResource[\"type\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceResourceDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.resource) {\n      this._url = this._params.resource.url || \"\";\n      this._type = this._params.resource.type || \"module\";\n    } else {\n      this._url = \"\";\n      this._type = \"module\";\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid = this._url.trim() === \"\";\n    return html`\n      <ha-dialog\n        open\n        @closing=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.resource\n            ? this._params.resource.url\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.new_resource\"\n              )\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <h3 class=\"warning\">\n              ${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.warning_header\"\n              )}\n            </h3>\n            ${this.hass!.localize(\n              \"ui.panel.config.lovelace.resources.detail.warning_text\"\n            )}\n            <paper-input\n              .value=${this._url}\n              @value-changed=${this._urlChanged}\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url\"\n              )}\n              .errorMessage=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url_error_msg\"\n              )}\n              .invalid=${urlInvalid}\n              dialogInitialFocus\n            ></paper-input>\n            <br />\n            <ha-paper-dropdown-menu\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.type\"\n              )}\n            >\n              <paper-listbox\n                slot=\"dropdown-content\"\n                .selected=${this._type}\n                @iron-select=${this._typeChanged}\n                attr-for-selected=\"type\"\n              >\n                <paper-item type=\"module\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.module\"\n                  )}\n                </paper-item>\n                ${this._type === \"js\"\n                  ? html`\n                      <paper-item type=\"js\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.js\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n                <paper-item type=\"css\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.css\"\n                  )}\n                </paper-item>\n                ${this._type === \"html\"\n                  ? html`\n                      <paper-item type=\"html\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.html\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n              </paper-listbox>\n            </ha-paper-dropdown-menu>\n          </div>\n        </div>\n        ${this._params.resource\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteResource}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.lovelace.resources.detail.delete\"\n                )}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateResource}\"\n          .disabled=${urlInvalid || this._submitting}\n        >\n          ${this._params.resource\n            ? this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.update\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._url = ev.detail.value;\n  }\n\n  private _typeChanged(ev: CustomEvent) {\n    this._type = ev.detail.item.getAttribute(\"type\");\n  }\n\n  private async _updateResource() {\n    this._submitting = true;\n    try {\n      const values: LovelaceResourcesMutableParams = {\n        url: this._url.trim(),\n        res_type: this._type,\n      };\n      if (this._params!.resource) {\n        await this._params!.updateResource(values);\n      } else {\n        await this._params!.createResource(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteResource() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeResource()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .warning {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-resource-detail\": DialogLovelaceResourceDetail;\n  }\n}\n"],"sourceRoot":""}