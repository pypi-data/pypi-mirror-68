{"version":3,"sources":["webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/components/ha-card.ts","webpack:///./src/common/const.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/components/ha-button-toggle-group.ts","webpack:///./src/panels/calendar/ha-full-calendar.ts","webpack:///./src/data/calendar.ts","webpack:///./src/panels/calendar/ha-panel-calendar.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","customElement","property","css","_templateObject","html","_templateObject2","this","header","_templateObject3","_templateObject4","LitElement","DEFAULT_DOMAIN_ICON","DOMAINS_WITH_CARD","DOMAINS_WITH_MORE_INFO","DOMAINS_HIDE_MORE_INFO","DOMAINS_MORE_INFO_NO_HISTORY","STATES_OFF","DOMAINS_TOGGLE","UNIT_C","UNIT_F","DEFAULT_VIEW_ENTITY_ID","HA_COLOR_PALETTE","Set","entityId","substr","indexOf","_decorate","_initialize","_LitElement","F","_LitElement2","_inherits","HaButtonToggleGroup","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","key","value","_this2","buttons","map","button","label","icon","active","_handleClick","ev","target","fireEvent","static","fullCalendarConfig","headerToolbar","plugins","dayGridPlugin","initialView","dayMaxEventRows","height","viewButtons","HAFullCalendar","type","Boolean","reflect","ha_full_calendar_templateObject","calendar","ha_full_calendar_templateObject2","narrow","_handleToday","hass","localize","_activeView","_handleView","view","title","_handlePrev","_handleNext","ha_full_calendar_templateObject3","changedProps","_get","ha_full_calendar_getPrototypeOf","prototype","has","removeAllEventSources","addEventSource","events","config","Object","assign","locale","language","Calendar","shadowRoot","getElementById","render","_fireViewChanged","next","prev","today","detail","changeView","start","activeStart","end","activeEnd","haStyle","_templateObject5","unsafeCSS","fullcalendarStyle","daygridStyle","window","customElements","define","fetchCalendarEvents","_ref","regeneratorRuntime","mark","_callee","calendars","params","calEvents","promises","wrap","_context","encodeURI","toISOString","forEach","cal","push","callApi","Promise","all","sent","result","idx","eventStart","getCalendarDate","event","summary","backgroundColor","borderColor","abrupt","stop","_x","_x2","_x3","_x4","dateObj","dateTime","date","PanelCalendar","ha_panel_calendar_get","ha_panel_calendar_getPrototypeOf","_calendars","keys","states","filter","eid","computeDomain","sort","name","selected","_start","_end","_fetchEvents","_selectedCalendars","ha_panel_calendar_templateObject","_handleRefresh","selCal","ha_panel_calendar_templateObject2","styleMap","--mdc-theme-secondary","_handleToggle","_events","_handleViewChanged","_callee3","results","_this3","_context3","ha_panel_calendar_asyncToGenerator","_callee2","checked","_context2","_toConsumableArray","_x5","_callee4","_context4","_callee5","_context5","ha_panel_calendar_templateObject3"],"mappings":"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","file":"chunk.7dfecb468f8dd2836cbc.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html` <div class=\"card-header\">${this.header}</div> `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\",\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"counter\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"person\",\n  \"script\",\n  \"sun\",\n  \"timer\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\",\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\",\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\",\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\",\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n\n/** HA Color Pallete. */\nexport const HA_COLOR_PALETTE = [\n  \"ff0029\",\n  \"66a61e\",\n  \"377eb8\",\n  \"984ea3\",\n  \"00d2d5\",\n  \"ff7f00\",\n  \"af8d00\",\n  \"7f80cd\",\n  \"b3e900\",\n  \"c42e60\",\n  \"a65628\",\n  \"f781bf\",\n  \"8dd3c7\",\n  \"bebada\",\n  \"fb8072\",\n  \"80b1d3\",\n  \"fdb462\",\n  \"fccde5\",\n  \"bc80bd\",\n  \"ffed6f\",\n  \"c4eaff\",\n  \"cf8c00\",\n  \"1b9e77\",\n  \"d95f02\",\n  \"e7298a\",\n  \"e6ab02\",\n  \"a6761d\",\n  \"0097ff\",\n  \"00d067\",\n  \"f43600\",\n  \"4ba93b\",\n  \"5779bb\",\n  \"927acc\",\n  \"97ee3f\",\n  \"bf3947\",\n  \"9f5b00\",\n  \"f48758\",\n  \"8caed6\",\n  \"f2b94f\",\n  \"eff26e\",\n  \"e43872\",\n  \"d9b100\",\n  \"9d7a00\",\n  \"698cff\",\n  \"d9d9d9\",\n  \"00d27e\",\n  \"d06800\",\n  \"009f82\",\n  \"c49200\",\n  \"cbe8ff\",\n  \"fecddf\",\n  \"c27eb6\",\n  \"8cd2ce\",\n  \"c4b8d9\",\n  \"f883b0\",\n  \"a49100\",\n  \"f48800\",\n  \"27d0df\",\n  \"a04a9b\",\n];\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","import {\n  customElement,\n  html,\n  TemplateResult,\n  property,\n  LitElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\n\nimport \"./ha-icon-button\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { ToggleButton } from \"../types\";\n\n@customElement(\"ha-button-toggle-group\")\nexport class HaButtonToggleGroup extends LitElement {\n  @property() public buttons!: ToggleButton[];\n\n  @property() public active?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div>\n        ${this.buttons.map(\n          (button) => html` <ha-icon-button\n            .label=${button.label}\n            .icon=${button.icon}\n            .value=${button.value}\n            ?active=${this.active === button.value}\n            @click=${this._handleClick}\n          >\n          </ha-icon-button>`\n        )}\n      </div>\n    `;\n  }\n\n  private _handleClick(ev): void {\n    this.active = ev.target.value;\n    fireEvent(this, \"value-changed\", { value: this.active });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      div {\n        display: flex;\n        --mdc-icon-button-size: var(--button-toggle-size, 36px);\n        --mdc-icon-size: var(--button-toggle-icon-size, 20px);\n      }\n      ha-icon-button {\n        border: 1px solid var(--primary-color);\n        border-right-width: 0px;\n        position: relative;\n      }\n      ha-icon-button::before {\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        background-color: currentColor;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\";\n        transition: opacity 15ms linear, background-color 15ms linear;\n      }\n      ha-icon-button[active]::before {\n        opacity: var(--mdc-icon-button-ripple-opacity, 0.12);\n      }\n      ha-icon-button:first-child {\n        border-radius: 4px 0 0 4px;\n      }\n      ha-icon-button:last-child {\n        border-radius: 0 4px 4px 0;\n        border-right-width: 1px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-toggle-button\": HaButtonToggleGroup;\n  }\n}\n","import {\n  property,\n  PropertyValues,\n  LitElement,\n  CSSResult,\n  html,\n  css,\n  unsafeCSS,\n  TemplateResult,\n} from \"lit-element\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n// @ts-ignore\nimport fullcalendarStyle from \"@fullcalendar/core/main.css\";\n// @ts-ignore\nimport daygridStyle from \"@fullcalendar/daygrid/main.css\";\nimport \"@material/mwc-button\";\n\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-button-toggle-group\";\n\nimport type {\n  CalendarViewChanged,\n  CalendarEvent,\n  ToggleButton,\n  HomeAssistant,\n} from \"../../types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { haStyle } from \"../../resources/styles\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"view-changed\": CalendarViewChanged;\n  }\n}\n\nconst fullCalendarConfig = {\n  headerToolbar: false,\n  plugins: [dayGridPlugin],\n  initialView: \"dayGridMonth\",\n  dayMaxEventRows: true,\n  height: \"parent\",\n};\n\nconst viewButtons: ToggleButton[] = [\n  { label: \"Month View\", value: \"dayGridMonth\", icon: \"hass:view-module\" },\n  { label: \"Week View\", value: \"dayGridWeek\", icon: \"hass:view-week\" },\n  { label: \"Day View\", value: \"dayGridDay\", icon: \"hass:view-day\" },\n];\n\nclass HAFullCalendar extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public events: CalendarEvent[] = [];\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  @property() private calendar?: Calendar;\n\n  @property() private _activeView = \"dayGridMonth\";\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.calendar\n        ? html`\n            <div class=\"header\">\n              ${!this.narrow\n                ? html`\n                    <div class=\"navigation\">\n                      <mwc-button\n                        outlined\n                        class=\"today\"\n                        @click=${this._handleToday}\n                        >${this.hass.localize(\n                          \"ui.panel.calendar.today\"\n                        )}</mwc-button\n                      >\n                      <ha-icon-button\n                        label=${this.hass.localize(\"ui.common.previous\")}\n                        icon=\"hass:chevron-left\"\n                        class=\"prev\"\n                        @click=${this._handlePrev}\n                      >\n                      </ha-icon-button>\n                      <ha-icon-button\n                        label=${this.hass.localize(\"ui.common.next\")}\n                        icon=\"hass:chevron-right\"\n                        class=\"next\"\n                        @click=${this._handleNext}\n                      >\n                      </ha-icon-button>\n                    </div>\n                    <h1>\n                      ${this.calendar.view.title}\n                    </h1>\n                    <ha-button-toggle-group\n                      .buttons=${viewButtons}\n                      .active=${this._activeView}\n                      @value-changed=${this._handleView}\n                    ></ha-button-toggle-group>\n                  `\n                : html`\n                    <div class=\"controls\">\n                      <mwc-button\n                        outlined\n                        class=\"today\"\n                        @click=${this._handleToday}\n                        >${this.hass.localize(\n                          \"ui.panel.calendar.today\"\n                        )}</mwc-button\n                      >\n                      <ha-button-toggle-group\n                        .buttons=${viewButtons}\n                        .active=${this._activeView}\n                        @value-changed=${this._handleView}\n                      ></ha-button-toggle-group>\n                    </div>\n                    <div class=\"controls\">\n                      <h1>\n                        ${this.calendar.view.title}\n                      </h1>\n                      <div>\n                        <ha-icon-button\n                          label=${this.hass.localize(\"ui.common.previous\")}\n                          icon=\"hass:chevron-left\"\n                          class=\"prev\"\n                          @click=${this._handlePrev}\n                        >\n                        </ha-icon-button>\n                        <ha-icon-button\n                          label=${this.hass.localize(\"ui.common.next\")}\n                          icon=\"hass:chevron-right\"\n                          class=\"next\"\n                          @click=${this._handleNext}\n                        >\n                        </ha-icon-button>\n                      </div>\n                    </div>\n                  `}\n            </div>\n          `\n        : \"\"}\n      <div id=\"calendar\"></div>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (!this.calendar) {\n      return;\n    }\n\n    if (changedProps.has(\"events\")) {\n      this.calendar.removeAllEventSources();\n      this.calendar.addEventSource(this.events);\n    }\n  }\n\n  protected firstUpdated(): void {\n    const config = { ...fullCalendarConfig, locale: this.hass.language };\n\n    this.calendar = new Calendar(\n      this.shadowRoot!.getElementById(\"calendar\")!,\n      // @ts-ignore\n      config\n    );\n\n    this.calendar!.render();\n    this._fireViewChanged();\n  }\n\n  private _handleNext(): void {\n    this.calendar!.next();\n    this._fireViewChanged();\n  }\n\n  private _handlePrev(): void {\n    this.calendar!.prev();\n    this._fireViewChanged();\n  }\n\n  private _handleToday(): void {\n    this.calendar!.today();\n    this._fireViewChanged();\n  }\n\n  private _handleView(ev): void {\n    this._activeView = ev.detail.value;\n    this.calendar!.changeView(this._activeView);\n    this._fireViewChanged();\n  }\n\n  private _fireViewChanged(): void {\n    fireEvent(this, \"view-changed\", {\n      start: this.calendar!.view.activeStart,\n      end: this.calendar!.view.activeEnd,\n      view: this.calendar!.view.type,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        ${unsafeCSS(fullcalendarStyle)}\n        ${unsafeCSS(daygridStyle)}\n\n      :host {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding-bottom: 8px;\n        }\n\n        :host([narrow]) .header {\n          padding-right: 8px;\n          padding-left: 8px;\n          flex-direction: column;\n          align-items: flex-start;\n          justify-content: initial;\n        }\n\n        .navigation {\n          display: flex;\n          align-items: center;\n          flex-grow: 0;\n        }\n\n        .controls {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n\n        .today {\n          margin-right: 20px;\n        }\n\n        .prev,\n        .next {\n          --mdc-icon-button-size: 32px;\n        }\n\n        ha-button-toggle-group {\n          color: var(--primary-color);\n        }\n\n        #calendar {\n          flex-grow: 1;\n          background-color: var(--card-background-color);\n        }\n\n        .fc-scrollgrid-section-header td {\n          border: none;\n        }\n\n        th.fc-col-header-cell.fc-day {\n          color: #70757a;\n          font-size: 11px;\n          font-weight: 400;\n          text-transform: uppercase;\n        }\n\n        .fc-daygrid-day-top {\n          text-align: center;\n          padding-top: 8px;\n        }\n\n        table.fc-scrollgrid-sync-table\n          tbody\n          tr:first-child\n          .fc-daygrid-day-top {\n          padding-top: 0;\n        }\n\n        a.fc-daygrid-day-number {\n          float: none !important;\n          font-size: 12px;\n        }\n\n        td.fc-day-today {\n          background: inherit;\n        }\n\n        td.fc-day-today .fc-daygrid-day-number {\n          height: 24px;\n          color: #fff;\n          background-color: #1a73e8;\n          border-radius: 50%;\n          display: inline-block;\n          text-align: center;\n          white-space: nowrap;\n          width: max-content;\n          min-width: 24px;\n        }\n\n        .fc-daygrid-day-events {\n          margin-top: 4px;\n        }\n\n        .fc-event {\n          border-radius: 4px;\n          line-height: 1.7;\n        }\n\n        .fc-daygrid-block-event .fc-event-main {\n          padding: 0 1px;\n        }\n\n        .fc-day-past .fc-daygrid-day-events {\n          opacity: 0.5;\n        }\n\n        .fc-icon-x:before {\n          font-family: var(--material-font-family);\n          content: \"X\";\n        }\n      `,\n    ];\n  }\n}\n\nwindow.customElements.define(\"ha-full-calendar\", HAFullCalendar);\n","import type { HomeAssistant, Calendar, CalendarEvent } from \"../types\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\nimport { HA_COLOR_PALETTE } from \"../common/const\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\n\nexport const fetchCalendarEvents = async (\n  hass: HomeAssistant,\n  start: Date,\n  end: Date,\n  calendars: Calendar[]\n): Promise<CalendarEvent[]> => {\n  const params = encodeURI(\n    `?start=${start.toISOString()}&end=${end.toISOString()}`\n  );\n\n  const calEvents: CalendarEvent[] = [];\n  const promises: Promise<any>[] = [];\n\n  calendars.forEach((cal) => {\n    promises.push(\n      hass.callApi<CalendarEvent[]>(\n        \"GET\",\n        `calendars/${cal.entity_id}${params}`\n      )\n    );\n  });\n\n  const results = await Promise.all(promises);\n\n  results.forEach((result, idx) => {\n    const cal = calendars[idx];\n    result.forEach((ev) => {\n      const eventStart = getCalendarDate(ev.start);\n      if (!eventStart) {\n        return;\n      }\n      const eventEnd = getCalendarDate(ev.end);\n      const event: CalendarEvent = {\n        start: eventStart,\n        end: eventEnd,\n        title: ev.summary,\n        summary: ev.summary,\n        backgroundColor: cal.backgroundColor,\n        borderColor: cal.backgroundColor,\n        calendar: cal.entity_id,\n      };\n\n      calEvents.push(event);\n    });\n  });\n\n  return calEvents;\n};\n\nconst getCalendarDate = (dateObj: any): string | undefined => {\n  if (typeof dateObj === \"string\") {\n    return dateObj;\n  }\n\n  if (dateObj.dateTime) {\n    return dateObj.dateTime;\n  }\n\n  if (dateObj.date) {\n    return dateObj.date;\n  }\n\n  return undefined;\n};\n\nexport const getCalendars = (hass: HomeAssistant): Calendar[] => {\n  return Object.keys(hass.states)\n    .filter((eid) => computeDomain(eid) === \"calendar\")\n    .sort()\n    .map((eid, idx) => ({\n      entity_id: eid,\n      name: computeStateName(hass.states[eid]),\n      backgroundColor: `#${HA_COLOR_PALETTE[idx % HA_COLOR_PALETTE.length]}`,\n    }));\n};\n","import {\n  customElement,\n  LitElement,\n  property,\n  CSSResultArray,\n  css,\n  TemplateResult,\n  html,\n  PropertyValues,\n} from \"lit-element\";\nimport { styleMap } from \"lit-html/directives/style-map\";\n\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-checkbox\";\nimport \"@material/mwc-formfield\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport \"./ha-full-calendar\";\n\nimport type {\n  HomeAssistant,\n  SelectedCalendar,\n  CalendarEvent,\n  CalendarViewChanged,\n  Calendar,\n} from \"../../types\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HASSDomEvent } from \"../../common/dom/fire_event\";\nimport { getCalendars, fetchCalendarEvents } from \"../../data/calendar\";\n\n@customElement(\"ha-panel-calendar\")\nclass PanelCalendar extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  @property() private _calendars: SelectedCalendar[] = [];\n\n  @property() private _events: CalendarEvent[] = [];\n\n  private _start?: Date;\n\n  private _end?: Date;\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._calendars = getCalendars(this.hass).map((calendar) => ({\n      selected: true,\n      calendar,\n    }));\n\n    if (!this._start || !this._end) {\n      return;\n    }\n\n    this._fetchEvents(this._start, this._end, this._selectedCalendars);\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>${this.hass.localize(\"panel.calendar\")}</div>\n            <ha-icon-button\n              icon=\"hass:refresh\"\n              @click=${this._handleRefresh}\n            ></ha-icon-button>\n          </app-toolbar>\n        </app-header>\n        <div class=\"content\">\n          <div class=\"calendar-list\">\n            <div class=\"calendar-list-header\">\n              ${this.hass.localize(\"ui.panel.calendar.my_calendars\")}\n            </div>\n            ${this._calendars.map(\n              (selCal) =>\n                html`<div>\n                  <mwc-formfield .label=${selCal.calendar.name}>\n                    <mwc-checkbox\n                      style=${styleMap({\n                        \"--mdc-theme-secondary\":\n                          selCal.calendar.backgroundColor,\n                      })}\n                      .value=${selCal.calendar.entity_id}\n                      .checked=${selCal.selected}\n                      @change=${this._handleToggle}\n                    ></mwc-checkbox>\n                  </mwc-formfield>\n                </div>`\n            )}\n          </div>\n          <ha-full-calendar\n            .events=${this._events}\n            .narrow=${this.narrow}\n            .hass=${this.hass}\n            @view-changed=${this._handleViewChanged}\n          ></ha-full-calendar>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  private get _selectedCalendars(): Calendar[] {\n    return this._calendars\n      .filter((selCal) => selCal.selected)\n      .map((cal) => cal.calendar);\n  }\n\n  private async _fetchEvents(\n    start: Date,\n    end: Date,\n    calendars: Calendar[]\n  ): Promise<CalendarEvent[]> {\n    if (!calendars.length) {\n      return [];\n    }\n\n    return fetchCalendarEvents(this.hass, start, end, calendars);\n  }\n\n  private async _handleToggle(ev): Promise<void> {\n    const results = this._calendars.map(async (cal) => {\n      if (ev.target.value !== cal.calendar.entity_id) {\n        return cal;\n      }\n\n      const checked = ev.target.checked;\n\n      if (checked) {\n        const events = await this._fetchEvents(this._start!, this._end!, [\n          cal.calendar,\n        ]);\n        this._events = [...this._events, ...events];\n      } else {\n        this._events = this._events.filter(\n          (event) => event.calendar !== cal.calendar.entity_id\n        );\n      }\n\n      cal.selected = checked;\n      return cal;\n    });\n\n    this._calendars = await Promise.all(results);\n  }\n\n  private async _handleViewChanged(\n    ev: HASSDomEvent<CalendarViewChanged>\n  ): Promise<void> {\n    this._start = ev.detail.start;\n    this._end = ev.detail.end;\n    this._events = await this._fetchEvents(\n      this._start,\n      this._end,\n      this._selectedCalendars\n    );\n  }\n\n  private async _handleRefresh(): Promise<void> {\n    this._events = await this._fetchEvents(\n      this._start!,\n      this._end!,\n      this._selectedCalendars\n    );\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding: 16px;\n          display: flex;\n          box-sizing: border-box;\n        }\n\n        :host(:not([narrow])) .content {\n          height: calc(100vh - 64px);\n        }\n\n        .calendar-list {\n          padding-right: 16px;\n          min-width: 170px;\n          flex: 0 0 15%;\n          overflow: hidden;\n          --mdc-theme-text-primary-on-background: var(--primary-text-color);\n        }\n\n        .calendar-list > div {\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        .calendar-list-header {\n          font-size: 16px;\n          padding: 16px 16px 8px 8px;\n        }\n\n        ha-full-calendar {\n          flex-grow: 1;\n        }\n\n        :host([narrow]) ha-full-calendar {\n          height: calc(100vh - 72px);\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column-reverse;\n          padding: 8px 0 0 0;\n        }\n\n        :host([narrow]) .calendar-list {\n          margin-bottom: 24px;\n          width: 100%;\n          padding-right: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-calendar\": PanelCalendar;\n  }\n}\n"],"sourceRoot":""}