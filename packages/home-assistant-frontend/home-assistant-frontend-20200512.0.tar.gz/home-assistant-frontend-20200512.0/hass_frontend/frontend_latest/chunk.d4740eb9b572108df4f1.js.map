{"version":3,"sources":["webpack:///./src/components/ha-tab.ts","webpack:///./src/layouts/hass-tabs-subpage.ts"],"names":["_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","d","kind","decorators","property","type","Boolean","reflect","key","value","queryAsync","internalProperty","html","active","ifDefined","name","handleRippleFocus","handleRippleBlur","handleRippleActivate","handleRippleDeactivate","handleRippleMouseEnter","handleRippleMouseLeave","_handleKeyDown","narrow","_shouldRenderRipple","RippleHandlers","_ripple","ev","keyCode","target","click","eventOptions","passive","evt","_rippleHandlers","startPress","endPress","startHover","endHover","startFocus","endFocus","static","css","LitElement","HassTabsSubpage","String","attribute","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","_narrow","filter","page","component","core","isComponentLoaded","hass","advancedOnly","map","_tabTapped","path","translationKey","localize","iconPath","icon","changedProperties","_get","_getPrototypeOf","prototype","call","has","_activeTab","find","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","config","components","language","mainPage","hassio","_backTapped","length","classMap","bottom-bar","navigate","currentTarget","backPath","backCallback","history","back"],"mappings":"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","file":"chunk.d4740eb9b572108df4f1.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  queryAsync,\n  internalProperty,\n  eventOptions,\n} from \"lit-element\";\nimport \"@material/mwc-ripple/mwc-ripple\";\nimport type { Ripple } from \"@material/mwc-ripple\";\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\nimport { ifDefined } from \"lit-html/directives/if-defined\";\n\n@customElement(\"ha-tab\")\nexport class HaTab extends LitElement {\n  @property({ type: Boolean, reflect: true }) public active = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() public name?: string;\n\n  @queryAsync(\"mwc-ripple\") private _ripple!: Promise<Ripple | null>;\n\n  @internalProperty() private _shouldRenderRipple = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div\n        tabindex=\"0\"\n        role=\"tab\"\n        aria-selected=${this.active}\n        aria-label=${ifDefined(this.name)}\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @mouseenter=${this.handleRippleMouseEnter}\n        @mouseleave=${this.handleRippleMouseLeave}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n        @keydown=${this._handleKeyDown}\n      >\n        ${this.narrow ? html`<slot name=\"icon\"></slot>` : \"\"}\n        ${!this.narrow || this.active\n          ? html`<span class=\"name\">${this.name}</span>`\n          : \"\"}\n        ${this._shouldRenderRipple ? html`<mwc-ripple></mwc-ripple>` : \"\"}\n      </div>\n    `;\n  }\n\n  private _rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this._shouldRenderRipple = true;\n    return this._ripple;\n  });\n\n  private _handleKeyDown(ev: KeyboardEvent): void {\n    if (ev.keyCode === 13) {\n      (ev.target as HTMLElement).click();\n    }\n  }\n\n  @eventOptions({ passive: true })\n  private handleRippleActivate(evt?: Event) {\n    this._rippleHandlers.startPress(evt);\n  }\n\n  private handleRippleDeactivate() {\n    this._rippleHandlers.endPress();\n  }\n\n  private handleRippleMouseEnter() {\n    this._rippleHandlers.startHover();\n  }\n\n  private handleRippleMouseLeave() {\n    this._rippleHandlers.endHover();\n  }\n\n  private handleRippleFocus() {\n    this._rippleHandlers.startFocus();\n  }\n\n  private handleRippleBlur() {\n    this._rippleHandlers.endFocus();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      div {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        box-sizing: border-box;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      :host([active]) {\n        color: var(--primary-color);\n      }\n\n      :host(:not([narrow])[active]) div {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      :host([narrow]) {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n    `;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tab\": HaTab;\n  }\n}\n","import \"@material/mwc-ripple\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { navigate } from \"../common/navigate\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport { HomeAssistant, Route } from \"../types\";\nimport \"../components/ha-svg-icon\";\nimport \"../components/ha-icon\";\nimport \"../components/ha-tab\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  iconPath?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property() public backCallback?: () => void;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property() public route!: Route;\n\n  @property() public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() private _activeTab?: PageNavigation;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language,\n      _narrow\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page) =>\n          html`\n            <ha-tab\n              .hass=${this.hass}\n              @click=${this._tabTapped}\n              .path=${page.path}\n              .active=${page === activeTab}\n              .narrow=${this.narrow}\n              .name=${page.translationKey\n                ? this.hass.localize(page.translationKey)\n                : page.name}\n            >\n              ${page.iconPath\n                ? html`<ha-svg-icon\n                    slot=\"icon\"\n                    .path=${page.iconPath}\n                  ></ha-svg-icon>`\n                : html`<ha-icon slot=\"icon\" .icon=${page.icon}></ha-icon>`}\n            </ha-tab>\n          `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        `${this.route.prefix}${this.route.path}`.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language,\n      this.narrow\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        ${this.mainPage\n          ? html`\n              <ha-menu-button\n                .hassio=${this.hassio}\n                .hass=${this.hass}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `\n          : html`\n              <ha-icon-button-arrow-prev\n                aria-label=\"Back\"\n                @click=${this._backTapped}\n              ></ha-icon-button-arrow-prev>\n            `}\n        ${this.narrow\n          ? html` <div class=\"main-title\"><slot name=\"header\"></slot></div> `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: Event): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      ha-menu-button {\n        margin-right: 24px;\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        flex: 1;\n        justify-content: center;\n      }\n\n      :host(:not([narrow])) #toolbar-icon {\n        min-width: 40px;\n      }\n\n      ha-menu-button,\n      ha-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        flex-shrink: 0;\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      .main-title {\n        flex: 1;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-height: 40px;\n        line-height: 20px;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n"],"sourceRoot":""}