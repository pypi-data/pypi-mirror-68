# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython
            return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itkQuadEdgeMeshBasePython
import itkImagePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkRGBPixelPython
import itkQuadEdgeMeshPointPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import itkQuadEdgeMeshLineCellPython
import itkArrayPython
import itkQuadEdgeCellTraitsInfoPython
import itkMapContainerPython

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
  return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
        """__New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
        """Clone(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone(self)

    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck

    def SetResolutionLevels(self, _arg: 'unsigned int const') -> "void":
        """SetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self, unsigned int const _arg)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetResolutionLevels(self, _arg)


    def GetResolutionLevels(self) -> "unsigned int":
        """GetResolutionLevels(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self) -> unsigned int"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetResolutionLevels(self)


    def GetCellsToBeSubdivided(self) -> "std::list< unsigned long,std::allocator< unsigned long > > const &":
        """GetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self) -> listUL"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetCellsToBeSubdivided(self)


    def SetCellsToBeSubdivided(self, cellIdList: 'listUL') -> "void":
        """SetCellsToBeSubdivided(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self, listUL cellIdList)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetCellsToBeSubdivided(self, cellIdList)


    def AddSubdividedCellId(self, cellId: 'unsigned long') -> "void":
        """AddSubdividedCellId(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self, unsigned long cellId)"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_AddSubdividedCellId(self, cellId)

    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

    def cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 *":
        """cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3"""
        return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.Clone = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.SetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.GetResolutionLevels = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetResolutionLevels, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.GetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.SetCellsToBeSubdivided = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetCellsToBeSubdivided, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.AddSubdividedCellId = new_instancemethod(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_AddSubdividedCellId, None, itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__() -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj: 'itkLightObject') -> "itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 *":
    """itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(itkLightObject obj) -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3"""
    return _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iterative_triangle_cell_subdivision_quad_edge_mesh_filter(*args, **kwargs):
    """Procedural interface for IterativeTriangleCellSubdivisionQuadEdgeMeshFilter"""
    import itk
    instance = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iterative_triangle_cell_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter.values()[0]
    else:
        filter_object = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter

    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



