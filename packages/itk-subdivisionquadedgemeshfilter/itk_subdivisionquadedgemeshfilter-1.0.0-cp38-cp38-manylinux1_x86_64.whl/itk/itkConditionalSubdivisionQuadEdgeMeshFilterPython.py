# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkConditionalSubdivisionQuadEdgeMeshFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkConditionalSubdivisionQuadEdgeMeshFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkConditionalSubdivisionQuadEdgeMeshFilterPython
            return _itkConditionalSubdivisionQuadEdgeMeshFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkConditionalSubdivisionQuadEdgeMeshFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkConditionalSubdivisionQuadEdgeMeshFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkConditionalSubdivisionQuadEdgeMeshFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itkQuadEdgeMeshBasePython
import itkQuadEdgeCellTraitsInfoPython
import ITKCommonBasePython
import pyBasePython
import itkQuadEdgeMeshPointPython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import itkImagePython
import itkCovariantVectorPython
import itkOffsetPython
import itkSizePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkIndexPython
import itkQuadEdgeMeshLineCellPython
import itkArrayPython
import itkMapContainerPython
import itkQuadEdgeMeshSubdivisionCriterionPython

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
  return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 self, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 self, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 self, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 self, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 self, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 self, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 self, itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 self, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 self, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 self, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 self, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 self, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 self, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast(obj)

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    """Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
        """__New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
        """Clone(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone(self)

    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckMesh
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckContainer

    def SetSubdivisionCriterion(self, criterion: 'itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3') -> "void":
        """SetSubdivisionCriterion(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 self, itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 criterion)"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetSubdivisionCriterion(self, criterion)

    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

    def cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 *":
        """cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3"""
        return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.Clone = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.SetSubdivisionCriterion = new_instancemethod(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetSubdivisionCriterion, None, itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__() -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Pointer"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__()

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj: 'itkLightObject') -> "itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 *":
    """itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(itkLightObject obj) -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3"""
    return _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def conditional_subdivision_quad_edge_mesh_filter(*args, **kwargs):
    """Procedural interface for ConditionalSubdivisionQuadEdgeMeshFilter"""
    import itk
    instance = itk.ConditionalSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def conditional_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConditionalSubdivisionQuadEdgeMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.ConditionalSubdivisionQuadEdgeMeshFilter.values()[0]
    else:
        filter_object = itk.ConditionalSubdivisionQuadEdgeMeshFilter

    conditional_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



