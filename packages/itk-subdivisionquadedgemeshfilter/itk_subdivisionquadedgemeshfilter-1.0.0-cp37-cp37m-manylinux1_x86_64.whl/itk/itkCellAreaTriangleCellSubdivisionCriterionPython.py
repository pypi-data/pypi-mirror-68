# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkCellAreaTriangleCellSubdivisionCriterionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkCellAreaTriangleCellSubdivisionCriterionPython', [dirname(__file__)])
        except ImportError:
            import _itkCellAreaTriangleCellSubdivisionCriterionPython
            return _itkCellAreaTriangleCellSubdivisionCriterionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkCellAreaTriangleCellSubdivisionCriterionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkCellAreaTriangleCellSubdivisionCriterionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkCellAreaTriangleCellSubdivisionCriterionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkQuadEdgeMeshSubdivisionCriterionPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import itkQuadEdgeMeshBasePython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkQuadEdgeCellTraitsInfoPython
import itkQuadEdgeMeshPointPython
import itkPointPython
import itkQuadEdgeMeshLineCellPython
import itkArrayPython
import itkMapContainerPython
import itkImagePython
import itkRGBPixelPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkRGBAPixelPython

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_New():
  return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()


def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_New():
  return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()


def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_New():
  return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()


def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_New():
  return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()


def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_New():
  return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()


def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_New():
  return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()


def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_New():
  return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()


def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_New():
  return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 self) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_swigregister
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 *":
    """itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 self) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_swigregister
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 *":
    """itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 self) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_swigregister
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 *":
    """itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 self) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_swigregister
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 *":
    """itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 self) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_swigregister
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 *":
    """itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 self) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_swigregister
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 *":
    """itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 self) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_swigregister
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 *":
    """itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast(obj)

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3(itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3):
    """Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer":
        """__New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer":
        """Clone(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 self) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Clone(self)


    def GetMaximumArea(self) -> "float":
        """GetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 self) -> float"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_GetMaximumArea(self)


    def SetMaximumArea(self, _arg: 'float const') -> "void":
        """SetMaximumArea(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 self, float const _arg)"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_SetMaximumArea(self, _arg)

    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

    def cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 *":
        """cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3"""
        return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.Clone = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Clone, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.GetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_GetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.SetMaximumArea = new_instancemethod(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_SetMaximumArea, None, itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_swigregister = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_swigregister
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__() -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer":
    """itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Pointer"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__()

def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast(obj: 'itkLightObject') -> "itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 *":
    """itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast(itkLightObject obj) -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3"""
    return _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast(obj)



