# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkQuadEdgeMeshSubdivisionCriterionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkQuadEdgeMeshSubdivisionCriterionPython', [dirname(__file__)])
        except ImportError:
            import _itkQuadEdgeMeshSubdivisionCriterionPython
            return _itkQuadEdgeMeshSubdivisionCriterionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkQuadEdgeMeshSubdivisionCriterionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkQuadEdgeMeshSubdivisionCriterionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkQuadEdgeMeshSubdivisionCriterionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import pyBasePython
import ITKCommonBasePython
import itkQuadEdgeMeshBasePython
import itkQuadEdgeMeshPointPython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkVectorPython
import itkFixedArrayPython
import itkQuadEdgeMeshLineCellPython
import itkArrayPython
import itkQuadEdgeCellTraitsInfoPython
import itkMapContainerPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkRGBPixelPython

def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New()


def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3.New()


def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3.New()


def itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3.New()


def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3.New()


def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3.New()


def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_New():
  return itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3.New()


def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New()


def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2.New()


def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2.New()


def itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2.New()


def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2.New()


def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2.New()


def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_New():
  return itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2.New()

class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 self, itkQuadEdgeMeshD2 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2)
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2)

def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 self, itkQuadEdgeMeshD3 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3)
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3)

def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 self, itkQuadEdgeMeshD2 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2)
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2)

def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 self, itkQuadEdgeMeshD3 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3)
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3)

def itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleEdgeD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 self, itkQuadEdgeMeshD2 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2)
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2)

def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 self, itkQuadEdgeMeshD3 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3)
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3)

def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 self, itkQuadEdgeMeshD2 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2)
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2)

def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 self, itkQuadEdgeMeshD3 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3)
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3)

def itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleEdgeD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 self, itkQuadEdgeMeshD2 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2)
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2)

def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 self, itkQuadEdgeMeshD3 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3)
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3)

def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 self, itkQuadEdgeMeshD2 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2)
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2)

def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > &') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 self, itkQuadEdgeMeshD3 mesh, std::list< itkGeometricalQuadEdgeULULBBF *,std::allocator< itkGeometricalQuadEdgeULULBBF * > > & edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3)
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3)

def itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleEdgeD3_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD2', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 self, itkQuadEdgeMeshD2 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_Compute, None, itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2)
itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_swigregister
itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_swigregister(itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2)

def itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2 *":
    """itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2_cast(obj)

class itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Compute(self, mesh: 'itkQuadEdgeMeshD3', edgeList: 'listUL') -> "void":
        """Compute(itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 self, itkQuadEdgeMeshD3 mesh, listUL edgeList)"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_Compute(self, mesh, edgeList)

    __swig_destroy__ = _itkQuadEdgeMeshSubdivisionCriterionPython.delete_itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3

    def cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 *":
        """cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3"""
        return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3

        Create a new object of the class itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3.Compute = new_instancemethod(_itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_Compute, None, itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3)
itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_swigregister = _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_swigregister
itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_swigregister(itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3)

def itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_cast(obj: 'itkLightObject') -> "itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3 *":
    """itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_cast(itkLightObject obj) -> itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3"""
    return _itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3_cast(obj)



