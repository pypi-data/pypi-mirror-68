Metadata-Version: 2.1
Name: monitoring2
Version: 1.3.8
Summary: Библиотека для работы с системой мониторинг 2.0
Home-page: https://pypi.org/manage/project/monitoring2/release/
Author: Dmitry Dimonoff
Author-email: mr.dimonoff@gmail.com
License: UNKNOWN
Description: Данный модуль используется для работы с системой мониторига 2.0 (*`monitoring2`*), личным кабинетом 1-ofd.ru (*`prodRf`*) и GrayLog (*`grayLog`*).
        ---
        Зашифровать пароль:
          monitoring2.crypt(pas), где monitoring2 - название модуля
        ---
        ### ***`monitoring2`***
          Модуль предназанчен для работы с мониторингом 2.0
        **Инициализация** monitoring2(login, password, url = 'http://taxplayer.ensyco.local', crpt = False), где crpt - зашифрованый пароль
        +  **login** - Авторизация. Запускается автоматически при инициализации объекта, но можно запустить принудительно.
        +  **seek_by_inn(inn, rows = 50, page = 1)** - Поиск организации по ИНН, ОГРН
        +  **seek_by_orgId(orgId)** - Поиск организации по id
        +  **seek_by_contract(contract)** - Поиск организации по номеру договора
        +  **get_all_kkt(org_id, page = 1, rows = 10000, sidx = 'fns_ecr_id', sord = 'desc')** - Поиск всех ККТ организации по id организации
        +  **seek_kkm(kkm)** - Поиск ККТ по id, РНМ, ФН
        +  **seek_kkm_by_id(id)** - Поиск ККТ по id. Выгружается более полная информация
        +  **seek_transaction(transaction)** - Поиск транзакции по id
        +  **create_report(form)** - Планирование отчёта
        +  **get_report_info(uuid)** - Информация о ранее запланированном отчёте
        +  **download_report(uuid, file)** - Скачивание ранее запланированного отчёта. Отчёт будет созан с именем file
        +  **cancel_report(uuid)** - Отмена ранее запланированного отчёта
        +  **ctrl(org_id ,ctrl_login)** - Привязываание учётной записи ctrl к ЛК
        +  **user_by_mail(mail)** - Поиск пользователя по почте
        +  **user_by_id(id)** - Поиск пользователя по id
        +  **change_tennant(org_id, tennant_id)** - Смена теннанта организации по id
        +  **check_promo(promo_id)** - Проверка КА по id или полному коду
        +  **change_agent_code(kkmId, serviceId, agentCode)** - Получение кодов агента по id ККТ (заполняется переменная self.agentCodes)
        +  **get_agent_code(kkm_id)** - Получение кодов агента по id ККТ
        +  **add_capability_to_org(org_id, capability)** - Добавление эксклюзивного права организации по id
        ---
        ### ***`prodRf`***
          Модуль предназначен для работы с ЛК прод РФ
        **Инициализация** prodRf(login , password , URL = 'https://api.1-ofd.ru', crpt = False), где crpt - зашифрованый пароль
        +  **login** - Авторизация. Запускается автоматически при инициализации объекта, но можно запустить принудительно.
        +  **org_info** - Получение информации о организации.
        +  **all_orgs_info** - Получение информации о доступных пользователю организациях.
        +  **switch_org(org_id)** - Переключение на организацию с org_id.
        +  **all_user** - Получение списка пользователей.
        +  **create_user(email)** - Создание нового пользователя с полными правами.
        +  **restore_password(email)** - Восстановление пароля пользователя.
        +  **logout** - Выход из ЛК
        +  **all_kkt** - Кассы организаций
        +  **api_version** - Версия API
        +  **all_retail_places** - Получение списка всех доступных торговых точек
        +  **retail_place_info(tt_id)** - Получение информации о торговой точке по id
        +  **kkm_info(kkm_id)** - Получение данных по ККТ с данным идентификатором
        +  **kkm_delete(kkm_id)** - Удаление ККТ с данным идентификатором (не работает)
        +  **kkm_transactions(kkm_id, fiscalDriveNumber, kwargs)** - Получение списка операций по ККТ с данным идентификатором
        		kwargs = {'shiftNumber': '', 'fromDate': '', 'toDate': '', 'transactionTypes': '', 'pageSize': '', 'page': 'fiscalDriveNumber', '':''}
        		shiftNumber - номер смены, необязательный
        		fromDate - начальная дата, необязательный  unix * 1000
        		toDate - конечная дата, необязательный  unix * 1000
        		transactionTypes - тип операций, необязательный(TICKET, 
        			CLOSE_SHIFT, OPEN_SHIFT, FISCAL_REPORT, CLOSE_ARCHIVE, RECEIPT_CORRECTION, 
        			CURRENT_STATE_REPORT, FISCAL_REPORT_CORRECTION, BSO, BSO_CORRECTION), можно указывать через запятую
        		pageSize - размер страницы, необязательный
        		page - номер страницы, необязательный
        		fiscalDriveNumber - номер ФН, не обязательный
        +	**kkm_export_transactions(self, kkm_id, kwargs, file_name = False)** - Экспорт операций по ККТ с данным идентификатором
        		kwargs = {'shiftNumber': '', 'fromDate': '', 'toDate': '', 'transactionTypes': '', 'pageSize': '', 'page': 'fiscalDriveNumber', '':''}
        		shiftNumber - номер смены, необязательный
        		fromDate - начальная дата, необязательный  unix в мс
        		toDate - конечная дата, необязательный  unix в мс
        		transactionTypes - тип операций, необязательный 
        			(TICKET, CLOSE_SHIFT, OPEN_SHIFT, FISCAL_REPORT, CLOSE_ARCHIVE, RECEIPT_CORRECTION, 
        			CURRENT_STATE_REPORT, FISCAL_REPORT_CORRECTION, BSO, BSO_CORRECTION), можно указывать через запятую
        		pageSize - размер страницы, необязательный
        		page - номер страницы, необязательный
        		fiscalDriveNumber - номер ФН, не обязательный
        		file_name = False - путь и имя файла, не обязательный
        +  **ticket(transactionId)** - Просмотр чека по определенной транзакции
        +  **transaction(transactionId)** - Просмотр чека по определенной транзакции
        +  **kkms_count** - Получение количества ККТ
        +  **fiscal_kkms** - Получение действующих ККТ (по которым есть хотя бы одна транзакция)
        +  **fiscal_drive_numbers(kkmRegId)** - Получение списка фискальных накопителей по определенному регистрационному номеру ККТ
        +  **kkms_stats** - Получение общей информации (количество ККТ, ККТ онлайн, количество торговых точек, количество групп ККТ и т.д.) по всем кассам налогоплательщика
        +  **process_fiscal_report(report_id)** - Функция обработки отчёта о регистрации (для админки), требует логина в админку.
        +  **set_tariff(kkmId, tariffId)** - Установка тарифа по id tariffId для ККТ с id kkmId
        +  **activate_by_promo(kkmId, promo, agentCode = '' )** - Активация ТОЛЬКО ПРОМОтарифа
        +  **activate(self, kkmId, agentCode = '')** - Активация тарифа (НЕ промотарифа)
        +  **document_upload(name, file_name)** - Выгрузка документа name - название документа в ЛК, file_name - файл, поддерживаемые форматы в self.file_extention_allowed
        ---
        ### ***`grayLog`***
          Модуль предназначен для работы с GrayLog
        **Инициализация** grayLog(login , password , host = '10.1.102.24', crpt = False), где crpt - зашифрованый пароль
        +  **login** - Авторизация. Запускается автоматически при инициализации объекта, но можно запустить принудительно.
        +  **user** - Получение данных о пользователе
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
