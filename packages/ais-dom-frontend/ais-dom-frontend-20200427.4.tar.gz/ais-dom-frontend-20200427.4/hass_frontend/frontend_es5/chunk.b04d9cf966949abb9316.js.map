{"version":3,"sources":["webpack:///./src/panels/lovelace/cards/hui-ais-list-card.js"],"names":["ListCard","HTMLElement","_this","_classCallCheck","this","_super","call","attachShadow","mode","config","entity","Error","root","shadowRoot","lastChild","removeChild","cardConfig","card","document","createElement","content","style","iconColor","icon_color","delIconHide","show_delete_icon","accent","textContent","concat","id","header","title","appendChild","_config","hass","selectedId","states","state","feed","attributes","display","rowLimit","row_limit","Object","keys","length","rows","mediaSource","media_source","undefined","cardContent","entry","mediaSourceInfo","audio_type","selectedClass","Number","thumbnail","getElementById","innerHTML","playTracks","querySelectorAll","delTracks","forEach","track","addEventListener","callService","getAttribute","customElements","define"],"mappings":"q8DAAMA,sPAAiBC,+BACrB,SAAAD,IAAc,IAAAE,EAAA,mGAAAC,CAAAC,KAAAJ,IACZE,EAAAG,EAAAC,KAAAF,OACKG,aAAa,CAAEC,KAAM,SAFdN,iDAKJO,GACR,IAAKA,EAAOC,OACV,MAAM,IAAIC,MAAM,2BAGlB,IAAMC,EAAOR,KAAKS,WACdD,EAAKE,WAAWF,EAAKG,YAAYH,EAAKE,WAE1C,IAAME,EAAaP,EACbQ,EAAOC,SAASC,cAAc,WAC9BC,EAAUF,SAASC,cAAc,OACjCE,EAAQH,SAASC,cAAc,SAC/BG,EAAYN,EAAWO,YAAc,QACrCC,GAC4B,IAAhCR,EAAWS,iBAA4B,GAAK,gBAExCC,EAAS,qCAEfL,EAAMM,YAAN,mgBAAAC,OAmBcN,EAnBd,gVAAAM,OA+B6CF,EA/B7C,qCAAAE,OAgCwBF,EAhCxB,2JAAAE,OADuB,uBACvB,qCAAAA,OADuB,uBACvB,kRAAAA,OAHkB,uBAGlB,mcAAAA,OAmEQJ,EAnER,4OA+EAJ,EAAQS,GAAK,YACbZ,EAAKa,OAASd,EAAWe,MACzBd,EAAKe,YAAYZ,GACjBH,EAAKe,YAAYX,GACjBT,EAAKoB,YAAYf,GACjBb,KAAK6B,QAAUjB,wCA2Ff,OAAO,6BAxFAkB,GACP,IAAMzB,EAASL,KAAK6B,QACdrB,EAAOR,KAAKS,WACZsB,EAAaD,EAAKE,OAAO3B,EAAOC,QAAQ2B,MAC9C,GAAIH,EAAKE,OAAO3B,EAAOC,QAAS,CAC9B,IAAM4B,EAAOJ,EAAKE,OAAO3B,EAAOC,QAAQ6B,WACxCnC,KAAKiB,MAAMmB,QAAU,QACrB,IAAMC,EAAWhC,EAAOiC,UACpBjC,EAAOiC,UACPC,OAAOC,KAAKN,GAAMO,OAClBC,EAAO,EACLC,EAActC,EAAOuC,aAE3B,QAAaC,IAATX,GAAsBK,OAAOC,KAAKN,GAAMO,OAAS,EAAG,CACtD,IAAIK,EAAc,GAClB,IAAK,IAAMC,KAASb,EAClB,GAAIa,KAASb,EAAM,CACjB,GAAIQ,GAAQL,EAAU,MACtB,IAAMW,EAAkBd,EAAKa,GAAOE,YAAcN,EAC9CO,EAAgB,GAChBC,OAAOpB,KAAgBW,IACzBQ,EAAgB,aAElBJ,GACE,yLAAAtB,OAGIU,EAAKa,GAAOK,UAHhB,kEAMAF,EANA,wEAAA1B,OAQqDkB,EARrD,yBAAAlB,OAQiFmB,EARjF,oKAAAnB,OAUoFkB,EAVpF,yBAAAlB,OAUgHmB,EAVhH,qLAAAnB,OAcmCkB,EAdnC,yBAAAlB,OAc+DmB,EAd/D,wWAAAnB,OAiBuDU,EAAKa,GAAOpB,MAjBnE,kVAAAH,OAqBkBwB,EArBlB,mKA4BAN,EAINlC,EAAKE,UAAUoB,KAAOA,EACtBtB,EAAK6C,eAAe,aAAaC,UAAYR,OAE7C9C,KAAKiB,MAAMmB,QAAU,YAGvBpC,KAAKiB,MAAMmB,QAAU,OAGvB,IAAMmB,EAAa/C,EAAKgD,iBAAiB,SACnCC,EAAYjD,EAAKgD,iBAAiB,cACxCD,EAAWG,QAAQ,SAACC,GAClBA,EAAMC,iBAAiB,QAAS,WAC9B9B,EAAK+B,YAAY,YAAa,aAAc,CAC1CpC,GAAIkC,EAAMG,aAAa,WACvBlB,aAAce,EAAMG,aAAa,2BAMvCL,EAAUC,QAAQ,SAACC,GACjBA,EAAMC,iBAAiB,QAAS,WAC9B9B,EAAK+B,YAAY,YAAa,eAAgB,CAC5CpC,GAAIkC,EAAMG,aAAa,WACvBlB,aAAce,EAAMG,aAAa,gEAW3CC,eAAeC,OAAO,oBAAqBpE","file":"chunk.b04d9cf966949abb9316.js","sourcesContent":["class ListCard extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n  }\n\n  setConfig(config) {\n    if (!config.entity) {\n      throw new Error(\"Please define an entity\");\n    }\n\n    const root = this.shadowRoot;\n    if (root.lastChild) root.removeChild(root.lastChild);\n\n    const cardConfig = config;\n    const card = document.createElement(\"ha-card\");\n    const content = document.createElement(\"div\");\n    const style = document.createElement(\"style\");\n    const iconColor = cardConfig.icon_color || \"white\";\n    const delIconHide =\n      cardConfig.show_delete_icon === true ? \"\" : \"display:none;\";\n    const flagColor = \"var(--primary-color)\";\n    const accent = \"var(--paper-card-background-color)\";\n    const accentSelected = \"var(--primary-color)\";\n    style.textContent = `\n        .fanart_view {\n          width:100%;\n          overflow:hidden;\n          margin-left: auto;\n          margin-right: auto;\n          margin-bottom: 5px;\n          background-repeat:no-repeat;\n          background-size:auto 100%;\n          position:relative;\n        }\n        .fanart_view ha-icon.play {\n          top: 3px;\n          margin-right: -5%;\n          right:0;\n          z-index: 2;\n          width: 15%;\n          height: 15%;\n          position:absolute;\n          color:${iconColor};\n          cursor: pointer;\n        }\n        .fanart_svg_view {\n          overflow:visible;\n          width:55%;\n          margin-top:1%;\n          margin-left:2.5%;\n          alignment-baseline:text-after-edge;\n        }\n        .fanart_fan_view {\n          width:100%;\n          background:linear-gradient(to right, ${accent} 48%,\n          transparent 70%,${accent} 100%);\n          margin:auto;\n        }\n        .fanart_fan_view_selected {\n          width:100%;\n          background:linear-gradient(to right, ${accentSelected} 48%,\n          transparent 70%,${accentSelected} 100%);\n          margin:auto;\n        }\n        .fanart_flag_view {\n          z-index: 1;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n          margin-top: 1px;\n          margin-right: 1px;\n          right: 0;\n          fill:${flagColor};\n        }\n        .fanart_flag_view svg{\n          float:right;\n          width: 90%;\n          height: 100%;\n          margin:0;\n          filter: drop-shadow( -1px 1px 1px rgba(0,0,0,.5));\n          cursor: pointer;\n        }\n        div.delete {\n          width: 20px;\n          height: 20px;\n          position: fixed;\n          padding-left: 4px;\n          z-index: 99999;\n        }\n        div.delete ha-icon {\n          ${delIconHide};\n          cursor: pointer;\n          width: 12px;\n        }\n        div.delete:hover ha-icon{\n          color: red;\n        }\n        div#container{\n          background: var(--primary-background-color);\n        }\n      `;\n\n    content.id = \"container\";\n    card.header = cardConfig.title;\n    card.appendChild(content);\n    card.appendChild(style);\n    root.appendChild(card);\n    this._config = cardConfig;\n  }\n\n  set hass(hass) {\n    const config = this._config;\n    const root = this.shadowRoot;\n    const selectedId = hass.states[config.entity].state;\n    if (hass.states[config.entity]) {\n      const feed = hass.states[config.entity].attributes;\n      this.style.display = \"block\";\n      const rowLimit = config.row_limit\n        ? config.row_limit\n        : Object.keys(feed).length;\n      let rows = 0;\n      const mediaSource = config.media_source;\n\n      if (feed !== undefined && Object.keys(feed).length > 0) {\n        let cardContent = \"\";\n        for (const entry in feed) {\n          if (entry in feed) {\n            if (rows >= rowLimit) break;\n            const mediaSourceInfo = feed[entry].audio_type || mediaSource;\n            let selectedClass = \"\";\n            if (Number(selectedId) === rows) {\n              selectedClass = \"_selected\";\n            }\n            cardContent +=\n              `\n            <div class=\"fanart_view playItem\"\n              style=\"margin-top: 0px; background-size: 54% auto;background-position:100% 35%; background-image:url(\n                ${feed[entry].thumbnail}\n              )\">\n              <div class=\"fanart_fan_view` +\n              selectedClass +\n              `\">\n                  <ha-icon icon=\"mdi:play\" class=\"play\" data-id=\"${rows}\" data-media-source=\"${mediaSource}\"></ha-icon>\n                  <div class=\"fanart_flag_view\">\n                    <svg class=\"play\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\" data-id=\"${rows}\" data-media-source=\"${mediaSource}\">\n                        <polygon points=\"100 30,90 0,100 0\"></polygon>\n                    </svg>\n                  </div>\n                  <div class=\"delete\" data-id=\"${rows}\" data-media-source=\"${mediaSource}\" style=\"cursor: pointer; \"><ha-icon class=\"delete\" icon=\"mdi:close\"></ha-icon></div>\n                  <svg class=\"fanart_svg_view\" viewBox=\"0 -20 200 100\">\n                    <foreignObject width=\"200\" height=\"80\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\">\n                        <span xmlns=\"http://www.w3.org/1999/xhtml\">${feed[entry].title}</span>\n                    </foreignObject>\n                    <foreignObject width=\"200\" height=\"80\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\">\n                        <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font-size:smaller; bottom: 5px; position: absolute;\">\n                        <span>${mediaSourceInfo}</span>\n                        </div>\n                    </foreignObject>\n                  </svg>\n              </div>\n            </div>\n          `;\n            ++rows;\n          }\n        }\n\n        root.lastChild.hass = hass;\n        root.getElementById(\"container\").innerHTML = cardContent;\n      } else {\n        this.style.display = \"none\";\n      }\n    } else {\n      this.style.display = \"none\";\n    }\n    //\n    const playTracks = root.querySelectorAll(\".play\");\n    const delTracks = root.querySelectorAll(\"div.delete\");\n    playTracks.forEach((track) => {\n      track.addEventListener(\"click\", () => {\n        hass.callService(\"ais_cloud\", \"play_audio\", {\n          id: track.getAttribute(\"data-id\"),\n          media_source: track.getAttribute(\"data-media-source\"),\n        });\n        // track.classList.add(\"clicked\");\n      });\n    });\n\n    delTracks.forEach((track) => {\n      track.addEventListener(\"click\", () => {\n        hass.callService(\"ais_cloud\", \"delete_audio\", {\n          id: track.getAttribute(\"data-id\"),\n          media_source: track.getAttribute(\"data-media-source\"),\n        });\n      });\n    });\n  }\n\n  getCardSize() {\n    return 1;\n  }\n}\n\ncustomElements.define(\"hui-ais-list-card\", ListCard);\n"],"sourceRoot":""}