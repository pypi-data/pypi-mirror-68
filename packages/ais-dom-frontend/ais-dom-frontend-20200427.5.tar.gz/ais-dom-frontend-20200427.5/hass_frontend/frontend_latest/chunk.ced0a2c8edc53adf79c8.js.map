{"version":3,"sources":["webpack:///./src/panels/developer-tools/logs/error-log-card.ts","webpack:///./src/data/error_log.ts","webpack:///./src/panels/lovelace/cards/hui-safe-mode-card.ts"],"names":["ErrorLogCard","_LitElement","[object Object]","args","super","_initialize","this","property","html","_errorLog","changedProps","_this$hass","_get","_getPrototypeOf","prototype","call","hass","config","safe_mode","_refreshErrorLog","css","async","localize","log","callApi","fetchErrorLog","LitElement","customElements","define","HuiSafeModeCard","_decorate","customElement","F","d","kind","decorators","key","value","_config","static"],"mappings":"20DAaMA,0rMAAN,MAAMA,UAANC,EAAsCC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,gBAAhCN,+BACHO,kEAEAA,+EAED,WACE,OAAOC,8BAA+BF,KAAKG,6DAG7C,SAAuBC,GAAc,IAAAC,EACnCC,EAAAC,EAVEb,EAUFc,WAAA,eAAAR,MAAAS,KAAAT,KAAmBI,IAEnB,QAAAC,EAAIL,KAAKU,YAAT,IAAAL,OAAA,EAAIA,EAAWM,OAAOC,YACpBZ,KAAKa,8DAIT,WACE,OAAOC;;;;;;;;;;;;;;;;oDAmBTC,iBACEf,KAAKG,UAAYH,KAAKU,KAAKM,SACzB,kDAEF,MAAMC,OCpDoBP,IAC5BA,EAAKQ,QAAgB,MAAO,aDmDRC,CAAcnB,KAAKU,MACrCV,KAAKG,UACHc,GAAOjB,KAAKU,KAAKM,SAAS,qDA3CLI,KA+C3BC,eAAeC,OAAO,iBAAkB5B,w6CE5CjC,IAAM6B,sqMAAbC,CAAA,CADCC,YAAc,uBACf,SAAA1B,EAAAJ,GAAA,OAAA+B,EADA,cAAA/B,EACwEC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,QAAxE2B,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACG5B,eADH6B,IAAA,OAAAC,WAAA,IAAAH,KAAA,SAAAE,IAAA,cAAAC,MAGE,WACE,OAAO,IAJX,CAAAH,KAAA,SAAAE,IAAA,YAAAC,MAOE,SAAiBC,MAPnB,CAAAJ,KAAA,SAAAE,IAAA,SAAAC,MAWE,WACE,OAAO7B;;kBAEOF,KAAKU,KAAMM,SACnB;;;YAIEhB,KAAKU,KAAMM,SACX;;gCAGoBhB,KAAKU;;QAvBrC,CAAAkB,KAAA,MAAAK,QAAA,EAAAH,IAAA,SAAAC,MA4BE,WACE,OAAOjB;;;;;;;;WA7B0BM","file":"chunk.ced0a2c8edc53adf79c8.js","sourcesContent":["import \"@material/mwc-button\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fetchErrorLog } from \"../../../data/error_log\";\nimport { HomeAssistant } from \"../../../types\";\n\nclass ErrorLogCard extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _errorLog?: string;\n\n  protected render(): TemplateResult {\n    return html` <div class=\"error-log\">${this._errorLog}</div> `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    if (this.hass?.config.safe_mode) {\n      this._refreshErrorLog();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error-log-intro {\n        text-align: center;\n        margin: 16px;\n      }\n\n      paper-icon-button {\n        float: right;\n      }\n\n      .error-log {\n        @apply --paper-font-code)\n          clear: both;\n        white-space: pre-wrap;\n        margin: 16px;\n      }\n    `;\n  }\n\n  private async _refreshErrorLog(): Promise<void> {\n    this._errorLog = this.hass.localize(\n      \"ui.panel.developer-tools.tabs.logs.loading_log\"\n    );\n    const log = await fetchErrorLog(this.hass!);\n    this._errorLog =\n      log || this.hass.localize(\"ui.panel.developer-tools.tabs.logs.no_errors\");\n  }\n}\n\ncustomElements.define(\"error-log-card\", ErrorLogCard);\n","import { HomeAssistant } from \"../types\";\n\nexport const fetchErrorLog = (hass: HomeAssistant) =>\n  hass.callApi<string>(\"GET\", \"error_log\");\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"../../developer-tools/logs/error-log-card\";\nimport { LovelaceCard } from \"../types\";\n\n@customElement(\"hui-safe-mode-card\")\nexport class HuiSafeModeCard extends LitElement implements LovelaceCard {\n  @property() public hass?: HomeAssistant;\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(_config: any): void {\n    // No config necessary.\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .header=${this.hass!.localize(\n          \"ui.panel.lovelace.cards.safe-mode.header\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass!.localize(\n            \"ui.panel.lovelace.cards.safe-mode.description\"\n          )}\n        </div>\n        <error-log-card .hass=${this.hass}></error-log-card>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        --ha-card-header-color: var(--primary-color);\n      }\n      error-log-card {\n        display: block;\n        padding-bottom: 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-safe-mode-card\": HuiSafeModeCard;\n  }\n}\n"],"sourceRoot":""}