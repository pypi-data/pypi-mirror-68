# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import models_pb2 as models__pb2
from . import relaying_pb2 as relaying__pb2


class RelayingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartResponder = channel.unary_unary(
        '/Relaying/StartResponder',
        request_serializer=relaying__pb2.StartMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.StopResponder = channel.unary_unary(
        '/Relaying/StopResponder',
        request_serializer=relaying__pb2.StopMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.GetResponderOutput = channel.unary_unary(
        '/Relaying/GetResponderOutput',
        request_serializer=relaying__pb2.OutputRequest.SerializeToString,
        response_deserializer=relaying__pb2.OutputResponse.FromString,
        )
    self.StartMitm6 = channel.unary_unary(
        '/Relaying/StartMitm6',
        request_serializer=relaying__pb2.StartMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.StopMitm6 = channel.unary_unary(
        '/Relaying/StopMitm6',
        request_serializer=relaying__pb2.StopMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.GetMitm6Output = channel.unary_unary(
        '/Relaying/GetMitm6Output',
        request_serializer=relaying__pb2.OutputRequest.SerializeToString,
        response_deserializer=relaying__pb2.OutputResponse.FromString,
        )
    self.StartRelaying = channel.unary_unary(
        '/Relaying/StartRelaying',
        request_serializer=relaying__pb2.StartMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.StopRelaying = channel.unary_unary(
        '/Relaying/StopRelaying',
        request_serializer=relaying__pb2.StopMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.GetRelayingOutput = channel.unary_unary(
        '/Relaying/GetRelayingOutput',
        request_serializer=relaying__pb2.OutputRequest.SerializeToString,
        response_deserializer=relaying__pb2.OutputResponse.FromString,
        )
    self.StartAll = channel.unary_unary(
        '/Relaying/StartAll',
        request_serializer=relaying__pb2.StartMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.StopAll = channel.unary_unary(
        '/Relaying/StopAll',
        request_serializer=relaying__pb2.StopMessage.SerializeToString,
        response_deserializer=relaying__pb2.Response.FromString,
        )
    self.GetStatus = channel.unary_unary(
        '/Relaying/GetStatus',
        request_serializer=relaying__pb2.RelayingRequest.SerializeToString,
        response_deserializer=relaying__pb2.RelayingStatus.FromString,
        )
    self.AddRelayingTarget = channel.unary_unary(
        '/Relaying/AddRelayingTarget',
        request_serializer=models__pb2.RelayingTarget.SerializeToString,
        response_deserializer=models__pb2.RelayingTarget.FromString,
        )


class RelayingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartResponder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopResponder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetResponderOutput(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartMitm6(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopMitm6(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMitm6Output(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRelaying(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRelaying(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRelayingOutput(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddRelayingTarget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RelayingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartResponder': grpc.unary_unary_rpc_method_handler(
          servicer.StartResponder,
          request_deserializer=relaying__pb2.StartMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'StopResponder': grpc.unary_unary_rpc_method_handler(
          servicer.StopResponder,
          request_deserializer=relaying__pb2.StopMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'GetResponderOutput': grpc.unary_unary_rpc_method_handler(
          servicer.GetResponderOutput,
          request_deserializer=relaying__pb2.OutputRequest.FromString,
          response_serializer=relaying__pb2.OutputResponse.SerializeToString,
      ),
      'StartMitm6': grpc.unary_unary_rpc_method_handler(
          servicer.StartMitm6,
          request_deserializer=relaying__pb2.StartMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'StopMitm6': grpc.unary_unary_rpc_method_handler(
          servicer.StopMitm6,
          request_deserializer=relaying__pb2.StopMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'GetMitm6Output': grpc.unary_unary_rpc_method_handler(
          servicer.GetMitm6Output,
          request_deserializer=relaying__pb2.OutputRequest.FromString,
          response_serializer=relaying__pb2.OutputResponse.SerializeToString,
      ),
      'StartRelaying': grpc.unary_unary_rpc_method_handler(
          servicer.StartRelaying,
          request_deserializer=relaying__pb2.StartMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'StopRelaying': grpc.unary_unary_rpc_method_handler(
          servicer.StopRelaying,
          request_deserializer=relaying__pb2.StopMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'GetRelayingOutput': grpc.unary_unary_rpc_method_handler(
          servicer.GetRelayingOutput,
          request_deserializer=relaying__pb2.OutputRequest.FromString,
          response_serializer=relaying__pb2.OutputResponse.SerializeToString,
      ),
      'StartAll': grpc.unary_unary_rpc_method_handler(
          servicer.StartAll,
          request_deserializer=relaying__pb2.StartMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'StopAll': grpc.unary_unary_rpc_method_handler(
          servicer.StopAll,
          request_deserializer=relaying__pb2.StopMessage.FromString,
          response_serializer=relaying__pb2.Response.SerializeToString,
      ),
      'GetStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetStatus,
          request_deserializer=relaying__pb2.RelayingRequest.FromString,
          response_serializer=relaying__pb2.RelayingStatus.SerializeToString,
      ),
      'AddRelayingTarget': grpc.unary_unary_rpc_method_handler(
          servicer.AddRelayingTarget,
          request_deserializer=models__pb2.RelayingTarget.FromString,
          response_serializer=models__pb2.RelayingTarget.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Relaying', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
