# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import bloodhound_pb2 as bloodhound__pb2
from . import models_pb2 as models__pb2


class BloodHoundStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.listDomainAdminGroups = channel.unary_unary(
        '/BloodHound/listDomainAdminGroups',
        request_serializer=models__pb2.Pagination.SerializeToString,
        response_deserializer=models__pb2.GroupList.FromString,
        )
    self.findLocalAdminsForUser = channel.unary_unary(
        '/BloodHound/findLocalAdminsForUser',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundResult.FromString,
        )
    self.findPath = channel.unary_unary(
        '/BloodHound/findPath',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundResult.FromString,
        )
    self.findPathToDomainAdmin = channel.unary_unary(
        '/BloodHound/findPathToDomainAdmin',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundResult.FromString,
        )
    self.findAllPathsToDomainAdmin = channel.unary_unary(
        '/BloodHound/findAllPathsToDomainAdmin',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundResult.FromString,
        )
    self.findPathsToDAfromCreds = channel.unary_unary(
        '/BloodHound/findPathsToDAfromCreds',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundResult.FromString,
        )
    self.lootLocalAdmins = channel.unary_unary(
        '/BloodHound/lootLocalAdmins',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=models__pb2.LootList.FromString,
        )
    self.pwnPath = channel.unary_unary(
        '/BloodHound/pwnPath',
        request_serializer=bloodhound__pb2.BloodHoundRequest.SerializeToString,
        response_deserializer=bloodhound__pb2.BloodHoundPath.FromString,
        )
    self.findNodes = channel.unary_unary(
        '/BloodHound/findNodes',
        request_serializer=models__pb2.Pagination.SerializeToString,
        response_deserializer=bloodhound__pb2.NodeList.FromString,
        )
    self.reloadGraphData = channel.unary_unary(
        '/BloodHound/reloadGraphData',
        request_serializer=models__pb2.Scan.SerializeToString,
        response_deserializer=models__pb2.EmptyMessage.FromString,
        )
    self.getGraphStats = channel.unary_unary(
        '/BloodHound/getGraphStats',
        request_serializer=models__pb2.Scan.SerializeToString,
        response_deserializer=bloodhound__pb2.GraphStats.FromString,
        )


class BloodHoundServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def listDomainAdminGroups(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findLocalAdminsForUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findPath(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findPathToDomainAdmin(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findAllPathsToDomainAdmin(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findPathsToDAfromCreds(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def lootLocalAdmins(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def pwnPath(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findNodes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def reloadGraphData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getGraphStats(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BloodHoundServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'listDomainAdminGroups': grpc.unary_unary_rpc_method_handler(
          servicer.listDomainAdminGroups,
          request_deserializer=models__pb2.Pagination.FromString,
          response_serializer=models__pb2.GroupList.SerializeToString,
      ),
      'findLocalAdminsForUser': grpc.unary_unary_rpc_method_handler(
          servicer.findLocalAdminsForUser,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundResult.SerializeToString,
      ),
      'findPath': grpc.unary_unary_rpc_method_handler(
          servicer.findPath,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundResult.SerializeToString,
      ),
      'findPathToDomainAdmin': grpc.unary_unary_rpc_method_handler(
          servicer.findPathToDomainAdmin,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundResult.SerializeToString,
      ),
      'findAllPathsToDomainAdmin': grpc.unary_unary_rpc_method_handler(
          servicer.findAllPathsToDomainAdmin,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundResult.SerializeToString,
      ),
      'findPathsToDAfromCreds': grpc.unary_unary_rpc_method_handler(
          servicer.findPathsToDAfromCreds,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundResult.SerializeToString,
      ),
      'lootLocalAdmins': grpc.unary_unary_rpc_method_handler(
          servicer.lootLocalAdmins,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=models__pb2.LootList.SerializeToString,
      ),
      'pwnPath': grpc.unary_unary_rpc_method_handler(
          servicer.pwnPath,
          request_deserializer=bloodhound__pb2.BloodHoundRequest.FromString,
          response_serializer=bloodhound__pb2.BloodHoundPath.SerializeToString,
      ),
      'findNodes': grpc.unary_unary_rpc_method_handler(
          servicer.findNodes,
          request_deserializer=models__pb2.Pagination.FromString,
          response_serializer=bloodhound__pb2.NodeList.SerializeToString,
      ),
      'reloadGraphData': grpc.unary_unary_rpc_method_handler(
          servicer.reloadGraphData,
          request_deserializer=models__pb2.Scan.FromString,
          response_serializer=models__pb2.EmptyMessage.SerializeToString,
      ),
      'getGraphStats': grpc.unary_unary_rpc_method_handler(
          servicer.getGraphStats,
          request_deserializer=models__pb2.Scan.FromString,
          response_serializer=bloodhound__pb2.GraphStats.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'BloodHound', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
