# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import exploitation_pb2 as exploitation__pb2
from . import models_pb2 as models__pb2


class ExploitServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PerformExploit = channel.unary_unary(
        '/ExploitService/PerformExploit',
        request_serializer=exploitation__pb2.ExploitRequest.SerializeToString,
        response_deserializer=models__pb2.Exploit.FromString,
        )
    self.PerformLoot = channel.unary_unary(
        '/ExploitService/PerformLoot',
        request_serializer=exploitation__pb2.LootRequest.SerializeToString,
        response_deserializer=models__pb2.Loot.FromString,
        )
    self.PerformMultipleLoot = channel.unary_unary(
        '/ExploitService/PerformMultipleLoot',
        request_serializer=exploitation__pb2.LootRequest.SerializeToString,
        response_deserializer=models__pb2.LootList.FromString,
        )
    self.CheckAccess = channel.unary_unary(
        '/ExploitService/CheckAccess',
        request_serializer=exploitation__pb2.AccessRequest.SerializeToString,
        response_deserializer=models__pb2.Access.FromString,
        )
    self.CheckMultipleAccess = channel.unary_unary(
        '/ExploitService/CheckMultipleAccess',
        request_serializer=exploitation__pb2.AccessRequest.SerializeToString,
        response_deserializer=models__pb2.AccessList.FromString,
        )
    self.ListLootModules = channel.unary_unary(
        '/ExploitService/ListLootModules',
        request_serializer=models__pb2.EmptyRequest.SerializeToString,
        response_deserializer=models__pb2.LootModuleList.FromString,
        )
    self.ListLoginModules = channel.unary_unary(
        '/ExploitService/ListLoginModules',
        request_serializer=models__pb2.EmptyRequest.SerializeToString,
        response_deserializer=models__pb2.LoginModuleList.FromString,
        )
    self.CancelLoot = channel.unary_unary(
        '/ExploitService/CancelLoot',
        request_serializer=exploitation__pb2.CancelRequest.SerializeToString,
        response_deserializer=models__pb2.EmptyMessage.FromString,
        )
    self.CancelExploit = channel.unary_unary(
        '/ExploitService/CancelExploit',
        request_serializer=exploitation__pb2.CancelRequest.SerializeToString,
        response_deserializer=models__pb2.EmptyMessage.FromString,
        )


class ExploitServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PerformExploit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PerformLoot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PerformMultipleLoot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckAccess(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckMultipleAccess(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListLootModules(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListLoginModules(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelLoot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelExploit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExploitServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PerformExploit': grpc.unary_unary_rpc_method_handler(
          servicer.PerformExploit,
          request_deserializer=exploitation__pb2.ExploitRequest.FromString,
          response_serializer=models__pb2.Exploit.SerializeToString,
      ),
      'PerformLoot': grpc.unary_unary_rpc_method_handler(
          servicer.PerformLoot,
          request_deserializer=exploitation__pb2.LootRequest.FromString,
          response_serializer=models__pb2.Loot.SerializeToString,
      ),
      'PerformMultipleLoot': grpc.unary_unary_rpc_method_handler(
          servicer.PerformMultipleLoot,
          request_deserializer=exploitation__pb2.LootRequest.FromString,
          response_serializer=models__pb2.LootList.SerializeToString,
      ),
      'CheckAccess': grpc.unary_unary_rpc_method_handler(
          servicer.CheckAccess,
          request_deserializer=exploitation__pb2.AccessRequest.FromString,
          response_serializer=models__pb2.Access.SerializeToString,
      ),
      'CheckMultipleAccess': grpc.unary_unary_rpc_method_handler(
          servicer.CheckMultipleAccess,
          request_deserializer=exploitation__pb2.AccessRequest.FromString,
          response_serializer=models__pb2.AccessList.SerializeToString,
      ),
      'ListLootModules': grpc.unary_unary_rpc_method_handler(
          servicer.ListLootModules,
          request_deserializer=models__pb2.EmptyRequest.FromString,
          response_serializer=models__pb2.LootModuleList.SerializeToString,
      ),
      'ListLoginModules': grpc.unary_unary_rpc_method_handler(
          servicer.ListLoginModules,
          request_deserializer=models__pb2.EmptyRequest.FromString,
          response_serializer=models__pb2.LoginModuleList.SerializeToString,
      ),
      'CancelLoot': grpc.unary_unary_rpc_method_handler(
          servicer.CancelLoot,
          request_deserializer=exploitation__pb2.CancelRequest.FromString,
          response_serializer=models__pb2.EmptyMessage.SerializeToString,
      ),
      'CancelExploit': grpc.unary_unary_rpc_method_handler(
          servicer.CancelExploit,
          request_deserializer=exploitation__pb2.CancelRequest.FromString,
          response_serializer=models__pb2.EmptyMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ExploitService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
