# PointValues CoreConfig for inicheck
# NOTE: fields are automatically assigned to the PointValues class, be mindful with names when adding new items.

[point_values]
database:
default = None,
type = Filename,
description = If using sqlite database this is the path to the sqlite database. The base path must exist but the .db
              file will be created if it does not already exist.

log_level:
default = info,
options = [info debug],
type = string,
description = Log level.

overwrite:
default = True,
type = bool,
description = Overwrite database results if there are existing records.

host:
default = None,
type = string,
description = Database host if using snowav sql database.

port:
default = None,
type = string,
description = Database port if using snowav sql database.

user:
default = None,
type = password,
description = Database username if using snowav sql database.

password:
default = None,
type = password,
description = Database password if using snowav sql database.

csv_output:
type = bool,
default = False,
description = Output csv results in location specified by csv_location.

csv_output_dir:
type = CriticalDirectory,
default = None,
description = Location to output csv results.

[basin]
topo:
default = None,
type = CriticalFilename,
description = topo.nc file created by basin_setup for the basin.

properties:
type = password list,
options = [all depth density swe_z lwc temp_surface temp_lower temp_bulk depth_lower_layer h20_sat R_n H L_v_E G M
           delta_Q evap_z melt swi_z coldcont air_temp cloud_factor net_solar storm_days precip percent_snow
           snow_density thermal vapor_pressure wind_speed],
default = [all],
description = Snowav definitions for AWSM input and output fields to use.

locations_csv:
type = CriticalFilename,
default = None,
description = csv file with model indices or utm coordinates for the locations.

directory:
type = directory,
default = None,
description = AWSM run directory with daily folder formats. This should end in
              ../<basin>/<ops>/<wy>/<ops>/runs

start_date:
type = datetimeorderedpair,
default = None,
description = Start date to load data in a format that pandas.to_datetime() can parse. If left blank all of the files
              in the directory will be loaded.

end_date:
type = datetimeorderedpair,
default = None,
description = End date to load data in a format that pandas.to_datetime() can parse. If left blank all of the files in
             the directory will be loaded.

# inicheck recipes
[point_values_recipe]
trigger:
has_section = point_values
point_values:
apply_defaults = True

[basin_recipe]
trigger:
has_section = basin
basin:
apply_defaults = True
