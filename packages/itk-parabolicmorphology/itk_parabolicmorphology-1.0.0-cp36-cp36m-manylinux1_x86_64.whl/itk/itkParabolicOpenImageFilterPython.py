# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkParabolicOpenImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkParabolicOpenImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkParabolicOpenImageFilterPython
            return _itkParabolicOpenImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkParabolicOpenImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkParabolicOpenImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkParabolicOpenImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import ITKCommonBasePython
import pyBasePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterCommonPython
import itkImagePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkParabolicOpenImageFilterID3ID3_New():
  return itkParabolicOpenImageFilterID3ID3.New()


def itkParabolicOpenImageFilterID3ID3_Superclass_New():
  return itkParabolicOpenImageFilterID3ID3_Superclass.New()


def itkParabolicOpenImageFilterID2ID2_New():
  return itkParabolicOpenImageFilterID2ID2.New()


def itkParabolicOpenImageFilterID2ID2_Superclass_New():
  return itkParabolicOpenImageFilterID2ID2_Superclass.New()


def itkParabolicOpenImageFilterIF3IF3_New():
  return itkParabolicOpenImageFilterIF3IF3.New()


def itkParabolicOpenImageFilterIF3IF3_Superclass_New():
  return itkParabolicOpenImageFilterIF3IF3_Superclass.New()


def itkParabolicOpenImageFilterIF2IF2_New():
  return itkParabolicOpenImageFilterIF2IF2.New()


def itkParabolicOpenImageFilterIF2IF2_Superclass_New():
  return itkParabolicOpenImageFilterIF2IF2_Superclass.New()


def itkParabolicOpenImageFilterIUS3IUS3_New():
  return itkParabolicOpenImageFilterIUS3IUS3.New()


def itkParabolicOpenImageFilterIUS3IUS3_Superclass_New():
  return itkParabolicOpenImageFilterIUS3IUS3_Superclass.New()


def itkParabolicOpenImageFilterIUS2IUS2_New():
  return itkParabolicOpenImageFilterIUS2IUS2.New()


def itkParabolicOpenImageFilterIUS2IUS2_Superclass_New():
  return itkParabolicOpenImageFilterIUS2IUS2_Superclass.New()


def itkParabolicOpenImageFilterIUC3IUC3_New():
  return itkParabolicOpenImageFilterIUC3IUC3.New()


def itkParabolicOpenImageFilterIUC3IUC3_Superclass_New():
  return itkParabolicOpenImageFilterIUC3IUC3_Superclass.New()


def itkParabolicOpenImageFilterIUC2IUC2_New():
  return itkParabolicOpenImageFilterIUC2IUC2.New()


def itkParabolicOpenImageFilterIUC2IUC2_Superclass_New():
  return itkParabolicOpenImageFilterIUC2IUC2_Superclass.New()


def itkParabolicOpenImageFilterISS3ISS3_New():
  return itkParabolicOpenImageFilterISS3ISS3.New()


def itkParabolicOpenImageFilterISS3ISS3_Superclass_New():
  return itkParabolicOpenImageFilterISS3ISS3_Superclass.New()


def itkParabolicOpenImageFilterISS2ISS2_New():
  return itkParabolicOpenImageFilterISS2ISS2.New()


def itkParabolicOpenImageFilterISS2ISS2_Superclass_New():
  return itkParabolicOpenImageFilterISS2ISS2_Superclass.New()

class itkParabolicOpenImageFilterID2ID2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkParabolicOpenImageFilterID2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterID2ID2_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterID2ID2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterID2ID2_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterID2ID2_Superclass self) -> itkParabolicOpenImageFilterID2ID2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterID2ID2_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterID2ID2_Superclass self, itkFixedArrayD2 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD2 const &":
        """GetScale(itkParabolicOpenImageFilterID2ID2_Superclass self) -> itkFixedArrayD2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterID2ID2_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterID2ID2_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterID2ID2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterID2ID2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterID2ID2_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterID2ID2_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterID2ID2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterID2ID2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterID2ID2_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterID2ID2_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterID2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterID2ID2_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterID2ID2_Superclass

        Create a new object of the class itkParabolicOpenImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterID2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterID2ID2_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_Clone, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetScale, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetScale, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterID2ID2_Superclass)
itkParabolicOpenImageFilterID2ID2_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_swigregister
itkParabolicOpenImageFilterID2ID2_Superclass_swigregister(itkParabolicOpenImageFilterID2ID2_Superclass)

def itkParabolicOpenImageFilterID2ID2_Superclass___New_orig__() -> "itkParabolicOpenImageFilterID2ID2_Superclass_Pointer":
    """itkParabolicOpenImageFilterID2ID2_Superclass___New_orig__() -> itkParabolicOpenImageFilterID2ID2_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass___New_orig__()

def itkParabolicOpenImageFilterID2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID2ID2_Superclass *":
    """itkParabolicOpenImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterID2ID2_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Superclass_cast(obj)

class itkParabolicOpenImageFilterID3ID3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkParabolicOpenImageFilterID3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterID3ID3_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterID3ID3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterID3ID3_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterID3ID3_Superclass self) -> itkParabolicOpenImageFilterID3ID3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterID3ID3_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterID3ID3_Superclass self, itkFixedArrayD3 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD3 const &":
        """GetScale(itkParabolicOpenImageFilterID3ID3_Superclass self) -> itkFixedArrayD3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterID3ID3_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterID3ID3_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterID3ID3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterID3ID3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterID3ID3_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterID3ID3_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterID3ID3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterID3ID3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterID3ID3_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterID3ID3_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterID3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterID3ID3_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterID3ID3_Superclass

        Create a new object of the class itkParabolicOpenImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterID3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterID3ID3_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_Clone, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetScale, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetScale, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterID3ID3_Superclass)
itkParabolicOpenImageFilterID3ID3_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_swigregister
itkParabolicOpenImageFilterID3ID3_Superclass_swigregister(itkParabolicOpenImageFilterID3ID3_Superclass)

def itkParabolicOpenImageFilterID3ID3_Superclass___New_orig__() -> "itkParabolicOpenImageFilterID3ID3_Superclass_Pointer":
    """itkParabolicOpenImageFilterID3ID3_Superclass___New_orig__() -> itkParabolicOpenImageFilterID3ID3_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass___New_orig__()

def itkParabolicOpenImageFilterID3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID3ID3_Superclass *":
    """itkParabolicOpenImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterID3ID3_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Superclass_cast(obj)

class itkParabolicOpenImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkParabolicOpenImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIF2IF2_Superclass self) -> itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIF2IF2_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIF2IF2_Superclass self, itkFixedArrayD2 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD2 const &":
        """GetScale(itkParabolicOpenImageFilterIF2IF2_Superclass self) -> itkFixedArrayD2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIF2IF2_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIF2IF2_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIF2IF2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIF2IF2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIF2IF2_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIF2IF2_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIF2IF2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIF2IF2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIF2IF2_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIF2IF2_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF2IF2_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIF2IF2_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_Clone, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetScale, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetScale, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIF2IF2_Superclass)
itkParabolicOpenImageFilterIF2IF2_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_swigregister
itkParabolicOpenImageFilterIF2IF2_Superclass_swigregister(itkParabolicOpenImageFilterIF2IF2_Superclass)

def itkParabolicOpenImageFilterIF2IF2_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer":
    """itkParabolicOpenImageFilterIF2IF2_Superclass___New_orig__() -> itkParabolicOpenImageFilterIF2IF2_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass___New_orig__()

def itkParabolicOpenImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF2IF2_Superclass *":
    """itkParabolicOpenImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF2IF2_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Superclass_cast(obj)

class itkParabolicOpenImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkParabolicOpenImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIF3IF3_Superclass self) -> itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIF3IF3_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIF3IF3_Superclass self, itkFixedArrayD3 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD3 const &":
        """GetScale(itkParabolicOpenImageFilterIF3IF3_Superclass self) -> itkFixedArrayD3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIF3IF3_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIF3IF3_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIF3IF3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIF3IF3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIF3IF3_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIF3IF3_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIF3IF3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIF3IF3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIF3IF3_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIF3IF3_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF3IF3_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIF3IF3_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_Clone, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetScale, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetScale, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIF3IF3_Superclass)
itkParabolicOpenImageFilterIF3IF3_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_swigregister
itkParabolicOpenImageFilterIF3IF3_Superclass_swigregister(itkParabolicOpenImageFilterIF3IF3_Superclass)

def itkParabolicOpenImageFilterIF3IF3_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer":
    """itkParabolicOpenImageFilterIF3IF3_Superclass___New_orig__() -> itkParabolicOpenImageFilterIF3IF3_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass___New_orig__()

def itkParabolicOpenImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF3IF3_Superclass *":
    """itkParabolicOpenImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF3IF3_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Superclass_cast(obj)

class itkParabolicOpenImageFilterISS2ISS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkParabolicOpenImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterISS2ISS2_Superclass self) -> itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterISS2ISS2_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterISS2ISS2_Superclass self, itkFixedArrayD2 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD2 const &":
        """GetScale(itkParabolicOpenImageFilterISS2ISS2_Superclass self) -> itkFixedArrayD2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterISS2ISS2_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterISS2ISS2_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterISS2ISS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterISS2ISS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterISS2ISS2_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterISS2ISS2_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterISS2ISS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterISS2ISS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterISS2ISS2_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterISS2ISS2_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS2ISS2_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterISS2ISS2_Superclass

        Create a new object of the class itkParabolicOpenImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_Clone, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetScale, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetScale, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterISS2ISS2_Superclass)
itkParabolicOpenImageFilterISS2ISS2_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_swigregister
itkParabolicOpenImageFilterISS2ISS2_Superclass_swigregister(itkParabolicOpenImageFilterISS2ISS2_Superclass)

def itkParabolicOpenImageFilterISS2ISS2_Superclass___New_orig__() -> "itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer":
    """itkParabolicOpenImageFilterISS2ISS2_Superclass___New_orig__() -> itkParabolicOpenImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass___New_orig__()

def itkParabolicOpenImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS2ISS2_Superclass *":
    """itkParabolicOpenImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS2ISS2_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Superclass_cast(obj)

class itkParabolicOpenImageFilterISS3ISS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkParabolicOpenImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterISS3ISS3_Superclass self) -> itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterISS3ISS3_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterISS3ISS3_Superclass self, itkFixedArrayD3 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD3 const &":
        """GetScale(itkParabolicOpenImageFilterISS3ISS3_Superclass self) -> itkFixedArrayD3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterISS3ISS3_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterISS3ISS3_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterISS3ISS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterISS3ISS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterISS3ISS3_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterISS3ISS3_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterISS3ISS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterISS3ISS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterISS3ISS3_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterISS3ISS3_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS3ISS3_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterISS3ISS3_Superclass

        Create a new object of the class itkParabolicOpenImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_Clone, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetScale, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetScale, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterISS3ISS3_Superclass)
itkParabolicOpenImageFilterISS3ISS3_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_swigregister
itkParabolicOpenImageFilterISS3ISS3_Superclass_swigregister(itkParabolicOpenImageFilterISS3ISS3_Superclass)

def itkParabolicOpenImageFilterISS3ISS3_Superclass___New_orig__() -> "itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer":
    """itkParabolicOpenImageFilterISS3ISS3_Superclass___New_orig__() -> itkParabolicOpenImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass___New_orig__()

def itkParabolicOpenImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS3ISS3_Superclass *":
    """itkParabolicOpenImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS3ISS3_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Superclass_cast(obj)

class itkParabolicOpenImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkParabolicOpenImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIUC2IUC2_Superclass self) -> itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIUC2IUC2_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIUC2IUC2_Superclass self, itkFixedArrayD2 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD2 const &":
        """GetScale(itkParabolicOpenImageFilterIUC2IUC2_Superclass self) -> itkFixedArrayD2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIUC2IUC2_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIUC2IUC2_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIUC2IUC2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIUC2IUC2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIUC2IUC2_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIUC2IUC2_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIUC2IUC2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIUC2IUC2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIUC2IUC2_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIUC2IUC2_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC2IUC2_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_Clone, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetScale, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetScale, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUC2IUC2_Superclass)
itkParabolicOpenImageFilterIUC2IUC2_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_swigregister
itkParabolicOpenImageFilterIUC2IUC2_Superclass_swigregister(itkParabolicOpenImageFilterIUC2IUC2_Superclass)

def itkParabolicOpenImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer":
    """itkParabolicOpenImageFilterIUC2IUC2_Superclass___New_orig__() -> itkParabolicOpenImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass___New_orig__()

def itkParabolicOpenImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC2IUC2_Superclass *":
    """itkParabolicOpenImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC2IUC2_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Superclass_cast(obj)

class itkParabolicOpenImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkParabolicOpenImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIUC3IUC3_Superclass self) -> itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIUC3IUC3_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIUC3IUC3_Superclass self, itkFixedArrayD3 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD3 const &":
        """GetScale(itkParabolicOpenImageFilterIUC3IUC3_Superclass self) -> itkFixedArrayD3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIUC3IUC3_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIUC3IUC3_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIUC3IUC3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIUC3IUC3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIUC3IUC3_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIUC3IUC3_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIUC3IUC3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIUC3IUC3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIUC3IUC3_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIUC3IUC3_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC3IUC3_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_Clone, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetScale, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetScale, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUC3IUC3_Superclass)
itkParabolicOpenImageFilterIUC3IUC3_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_swigregister
itkParabolicOpenImageFilterIUC3IUC3_Superclass_swigregister(itkParabolicOpenImageFilterIUC3IUC3_Superclass)

def itkParabolicOpenImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer":
    """itkParabolicOpenImageFilterIUC3IUC3_Superclass___New_orig__() -> itkParabolicOpenImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass___New_orig__()

def itkParabolicOpenImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC3IUC3_Superclass *":
    """itkParabolicOpenImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC3IUC3_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Superclass_cast(obj)

class itkParabolicOpenImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkParabolicOpenImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIUS2IUS2_Superclass self) -> itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIUS2IUS2_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIUS2IUS2_Superclass self, itkFixedArrayD2 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD2 const &":
        """GetScale(itkParabolicOpenImageFilterIUS2IUS2_Superclass self) -> itkFixedArrayD2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIUS2IUS2_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIUS2IUS2_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIUS2IUS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIUS2IUS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIUS2IUS2_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIUS2IUS2_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIUS2IUS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIUS2IUS2_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIUS2IUS2_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIUS2IUS2_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS2IUS2_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_Clone, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetScale, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetScale, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUS2IUS2_Superclass)
itkParabolicOpenImageFilterIUS2IUS2_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_swigregister
itkParabolicOpenImageFilterIUS2IUS2_Superclass_swigregister(itkParabolicOpenImageFilterIUS2IUS2_Superclass)

def itkParabolicOpenImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer":
    """itkParabolicOpenImageFilterIUS2IUS2_Superclass___New_orig__() -> itkParabolicOpenImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass___New_orig__()

def itkParabolicOpenImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS2IUS2_Superclass *":
    """itkParabolicOpenImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS2IUS2_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Superclass_cast(obj)

class itkParabolicOpenImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkParabolicOpenImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkParabolicOpenImageFilterIUS3IUS3_Superclass self) -> itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_Clone(self)


    def SetScale(self, *args) -> "void":
        """
        SetScale(itkParabolicOpenImageFilterIUS3IUS3_Superclass self, double scale)
        SetScale(itkParabolicOpenImageFilterIUS3IUS3_Superclass self, itkFixedArrayD3 scale)
        """
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetScale(self, *args)


    def GetScale(self) -> "itkFixedArrayD3 const &":
        """GetScale(itkParabolicOpenImageFilterIUS3IUS3_Superclass self) -> itkFixedArrayD3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetScale(self)


    def SetUseImageSpacing(self, B: 'bool') -> "void":
        """SetUseImageSpacing(itkParabolicOpenImageFilterIUS3IUS3_Superclass self, bool B)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetUseImageSpacing(self, B)


    def GetUseImageSpacing(self) -> "bool":
        """GetUseImageSpacing(itkParabolicOpenImageFilterIUS3IUS3_Superclass self) -> bool"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetUseImageSpacing(self)


    def UseImageSpacingOn(self) -> "void":
        """UseImageSpacingOn(itkParabolicOpenImageFilterIUS3IUS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_UseImageSpacingOn(self)


    def UseImageSpacingOff(self) -> "void":
        """UseImageSpacingOff(itkParabolicOpenImageFilterIUS3IUS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_UseImageSpacingOff(self)


    def SetSafeBorder(self, _arg: 'bool const') -> "void":
        """SetSafeBorder(itkParabolicOpenImageFilterIUS3IUS3_Superclass self, bool const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetSafeBorder(self, _arg)


    def GetSafeBorder(self) -> "bool const &":
        """GetSafeBorder(itkParabolicOpenImageFilterIUS3IUS3_Superclass self) -> bool const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetSafeBorder(self)


    def SafeBorderOn(self) -> "void":
        """SafeBorderOn(itkParabolicOpenImageFilterIUS3IUS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SafeBorderOn(self)


    def SafeBorderOff(self) -> "void":
        """SafeBorderOff(itkParabolicOpenImageFilterIUS3IUS3_Superclass self)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SafeBorderOff(self)

    ParabolicAlgorithm_NOCHOICE = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_NOCHOICE
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    ParabolicAlgorithm_INTERSECTION = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_INTERSECTION

    def SetParabolicAlgorithm(self, _arg: 'int const') -> "void":
        """SetParabolicAlgorithm(itkParabolicOpenImageFilterIUS3IUS3_Superclass self, int const _arg)"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetParabolicAlgorithm(self, _arg)


    def GetParabolicAlgorithm(self) -> "int const &":
        """GetParabolicAlgorithm(itkParabolicOpenImageFilterIUS3IUS3_Superclass self) -> int const &"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetParabolicAlgorithm(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS3IUS3_Superclass"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkParabolicOpenImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_Clone, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetScale, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.GetScale = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetScale, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetUseImageSpacing, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.GetUseImageSpacing = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetUseImageSpacing, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.UseImageSpacingOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_UseImageSpacingOn, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.UseImageSpacingOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_UseImageSpacingOff, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetSafeBorder, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.GetSafeBorder = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetSafeBorder, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SafeBorderOn = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SafeBorderOn, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SafeBorderOff = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SafeBorderOff, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.SetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_SetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass.GetParabolicAlgorithm = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_GetParabolicAlgorithm, None, itkParabolicOpenImageFilterIUS3IUS3_Superclass)
itkParabolicOpenImageFilterIUS3IUS3_Superclass_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_swigregister
itkParabolicOpenImageFilterIUS3IUS3_Superclass_swigregister(itkParabolicOpenImageFilterIUS3IUS3_Superclass)

def itkParabolicOpenImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer":
    """itkParabolicOpenImageFilterIUS3IUS3_Superclass___New_orig__() -> itkParabolicOpenImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass___New_orig__()

def itkParabolicOpenImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS3IUS3_Superclass *":
    """itkParabolicOpenImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS3IUS3_Superclass"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Superclass_cast(obj)

class itkParabolicOpenImageFilterID2ID2(itkParabolicOpenImageFilterID2ID2_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterID2ID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterID2ID2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterID2ID2_Pointer":
        """Clone(itkParabolicOpenImageFilterID2ID2 self) -> itkParabolicOpenImageFilterID2ID2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterID2ID2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterID2ID2

        Create a new object of the class itkParabolicOpenImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterID2ID2.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_Clone, None, itkParabolicOpenImageFilterID2ID2)
itkParabolicOpenImageFilterID2ID2_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_swigregister
itkParabolicOpenImageFilterID2ID2_swigregister(itkParabolicOpenImageFilterID2ID2)

def itkParabolicOpenImageFilterID2ID2___New_orig__() -> "itkParabolicOpenImageFilterID2ID2_Pointer":
    """itkParabolicOpenImageFilterID2ID2___New_orig__() -> itkParabolicOpenImageFilterID2ID2_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2___New_orig__()

def itkParabolicOpenImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID2ID2 *":
    """itkParabolicOpenImageFilterID2ID2_cast(itkLightObject obj) -> itkParabolicOpenImageFilterID2ID2"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID2ID2_cast(obj)

class itkParabolicOpenImageFilterID3ID3(itkParabolicOpenImageFilterID3ID3_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterID3ID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterID3ID3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterID3ID3_Pointer":
        """Clone(itkParabolicOpenImageFilterID3ID3 self) -> itkParabolicOpenImageFilterID3ID3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterID3ID3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterID3ID3

        Create a new object of the class itkParabolicOpenImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterID3ID3.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_Clone, None, itkParabolicOpenImageFilterID3ID3)
itkParabolicOpenImageFilterID3ID3_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_swigregister
itkParabolicOpenImageFilterID3ID3_swigregister(itkParabolicOpenImageFilterID3ID3)

def itkParabolicOpenImageFilterID3ID3___New_orig__() -> "itkParabolicOpenImageFilterID3ID3_Pointer":
    """itkParabolicOpenImageFilterID3ID3___New_orig__() -> itkParabolicOpenImageFilterID3ID3_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3___New_orig__()

def itkParabolicOpenImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterID3ID3 *":
    """itkParabolicOpenImageFilterID3ID3_cast(itkLightObject obj) -> itkParabolicOpenImageFilterID3ID3"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterID3ID3_cast(obj)

class itkParabolicOpenImageFilterIF2IF2(itkParabolicOpenImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIF2IF2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIF2IF2_Pointer":
        """Clone(itkParabolicOpenImageFilterIF2IF2 self) -> itkParabolicOpenImageFilterIF2IF2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF2IF2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIF2IF2

        Create a new object of the class itkParabolicOpenImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIF2IF2.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_Clone, None, itkParabolicOpenImageFilterIF2IF2)
itkParabolicOpenImageFilterIF2IF2_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_swigregister
itkParabolicOpenImageFilterIF2IF2_swigregister(itkParabolicOpenImageFilterIF2IF2)

def itkParabolicOpenImageFilterIF2IF2___New_orig__() -> "itkParabolicOpenImageFilterIF2IF2_Pointer":
    """itkParabolicOpenImageFilterIF2IF2___New_orig__() -> itkParabolicOpenImageFilterIF2IF2_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2___New_orig__()

def itkParabolicOpenImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF2IF2 *":
    """itkParabolicOpenImageFilterIF2IF2_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF2IF2"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF2IF2_cast(obj)

class itkParabolicOpenImageFilterIF3IF3(itkParabolicOpenImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIF3IF3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIF3IF3_Pointer":
        """Clone(itkParabolicOpenImageFilterIF3IF3 self) -> itkParabolicOpenImageFilterIF3IF3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF3IF3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIF3IF3

        Create a new object of the class itkParabolicOpenImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIF3IF3.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_Clone, None, itkParabolicOpenImageFilterIF3IF3)
itkParabolicOpenImageFilterIF3IF3_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_swigregister
itkParabolicOpenImageFilterIF3IF3_swigregister(itkParabolicOpenImageFilterIF3IF3)

def itkParabolicOpenImageFilterIF3IF3___New_orig__() -> "itkParabolicOpenImageFilterIF3IF3_Pointer":
    """itkParabolicOpenImageFilterIF3IF3___New_orig__() -> itkParabolicOpenImageFilterIF3IF3_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3___New_orig__()

def itkParabolicOpenImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIF3IF3 *":
    """itkParabolicOpenImageFilterIF3IF3_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIF3IF3"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIF3IF3_cast(obj)

class itkParabolicOpenImageFilterISS2ISS2(itkParabolicOpenImageFilterISS2ISS2_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterISS2ISS2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterISS2ISS2_Pointer":
        """Clone(itkParabolicOpenImageFilterISS2ISS2 self) -> itkParabolicOpenImageFilterISS2ISS2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS2ISS2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterISS2ISS2

        Create a new object of the class itkParabolicOpenImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterISS2ISS2.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_Clone, None, itkParabolicOpenImageFilterISS2ISS2)
itkParabolicOpenImageFilterISS2ISS2_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_swigregister
itkParabolicOpenImageFilterISS2ISS2_swigregister(itkParabolicOpenImageFilterISS2ISS2)

def itkParabolicOpenImageFilterISS2ISS2___New_orig__() -> "itkParabolicOpenImageFilterISS2ISS2_Pointer":
    """itkParabolicOpenImageFilterISS2ISS2___New_orig__() -> itkParabolicOpenImageFilterISS2ISS2_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2___New_orig__()

def itkParabolicOpenImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS2ISS2 *":
    """itkParabolicOpenImageFilterISS2ISS2_cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS2ISS2"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS2ISS2_cast(obj)

class itkParabolicOpenImageFilterISS3ISS3(itkParabolicOpenImageFilterISS3ISS3_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterISS3ISS3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterISS3ISS3_Pointer":
        """Clone(itkParabolicOpenImageFilterISS3ISS3 self) -> itkParabolicOpenImageFilterISS3ISS3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS3ISS3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterISS3ISS3

        Create a new object of the class itkParabolicOpenImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterISS3ISS3.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_Clone, None, itkParabolicOpenImageFilterISS3ISS3)
itkParabolicOpenImageFilterISS3ISS3_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_swigregister
itkParabolicOpenImageFilterISS3ISS3_swigregister(itkParabolicOpenImageFilterISS3ISS3)

def itkParabolicOpenImageFilterISS3ISS3___New_orig__() -> "itkParabolicOpenImageFilterISS3ISS3_Pointer":
    """itkParabolicOpenImageFilterISS3ISS3___New_orig__() -> itkParabolicOpenImageFilterISS3ISS3_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3___New_orig__()

def itkParabolicOpenImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterISS3ISS3 *":
    """itkParabolicOpenImageFilterISS3ISS3_cast(itkLightObject obj) -> itkParabolicOpenImageFilterISS3ISS3"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterISS3ISS3_cast(obj)

class itkParabolicOpenImageFilterIUC2IUC2(itkParabolicOpenImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUC2IUC2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUC2IUC2_Pointer":
        """Clone(itkParabolicOpenImageFilterIUC2IUC2 self) -> itkParabolicOpenImageFilterIUC2IUC2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC2IUC2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUC2IUC2

        Create a new object of the class itkParabolicOpenImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUC2IUC2.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_Clone, None, itkParabolicOpenImageFilterIUC2IUC2)
itkParabolicOpenImageFilterIUC2IUC2_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_swigregister
itkParabolicOpenImageFilterIUC2IUC2_swigregister(itkParabolicOpenImageFilterIUC2IUC2)

def itkParabolicOpenImageFilterIUC2IUC2___New_orig__() -> "itkParabolicOpenImageFilterIUC2IUC2_Pointer":
    """itkParabolicOpenImageFilterIUC2IUC2___New_orig__() -> itkParabolicOpenImageFilterIUC2IUC2_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2___New_orig__()

def itkParabolicOpenImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC2IUC2 *":
    """itkParabolicOpenImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC2IUC2"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC2IUC2_cast(obj)

class itkParabolicOpenImageFilterIUC3IUC3(itkParabolicOpenImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUC3IUC3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUC3IUC3_Pointer":
        """Clone(itkParabolicOpenImageFilterIUC3IUC3 self) -> itkParabolicOpenImageFilterIUC3IUC3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC3IUC3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUC3IUC3

        Create a new object of the class itkParabolicOpenImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUC3IUC3.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_Clone, None, itkParabolicOpenImageFilterIUC3IUC3)
itkParabolicOpenImageFilterIUC3IUC3_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_swigregister
itkParabolicOpenImageFilterIUC3IUC3_swigregister(itkParabolicOpenImageFilterIUC3IUC3)

def itkParabolicOpenImageFilterIUC3IUC3___New_orig__() -> "itkParabolicOpenImageFilterIUC3IUC3_Pointer":
    """itkParabolicOpenImageFilterIUC3IUC3___New_orig__() -> itkParabolicOpenImageFilterIUC3IUC3_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3___New_orig__()

def itkParabolicOpenImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUC3IUC3 *":
    """itkParabolicOpenImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUC3IUC3"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUC3IUC3_cast(obj)

class itkParabolicOpenImageFilterIUS2IUS2(itkParabolicOpenImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUS2IUS2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUS2IUS2_Pointer":
        """Clone(itkParabolicOpenImageFilterIUS2IUS2 self) -> itkParabolicOpenImageFilterIUS2IUS2_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS2IUS2"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUS2IUS2

        Create a new object of the class itkParabolicOpenImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUS2IUS2.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_Clone, None, itkParabolicOpenImageFilterIUS2IUS2)
itkParabolicOpenImageFilterIUS2IUS2_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_swigregister
itkParabolicOpenImageFilterIUS2IUS2_swigregister(itkParabolicOpenImageFilterIUS2IUS2)

def itkParabolicOpenImageFilterIUS2IUS2___New_orig__() -> "itkParabolicOpenImageFilterIUS2IUS2_Pointer":
    """itkParabolicOpenImageFilterIUS2IUS2___New_orig__() -> itkParabolicOpenImageFilterIUS2IUS2_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2___New_orig__()

def itkParabolicOpenImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS2IUS2 *":
    """itkParabolicOpenImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS2IUS2"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS2IUS2_cast(obj)

class itkParabolicOpenImageFilterIUS3IUS3(itkParabolicOpenImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkParabolicOpenImageFilterIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkParabolicOpenImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkParabolicOpenImageFilterIUS3IUS3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkParabolicOpenImageFilterIUS3IUS3_Pointer":
        """Clone(itkParabolicOpenImageFilterIUS3IUS3 self) -> itkParabolicOpenImageFilterIUS3IUS3_Pointer"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkParabolicOpenImageFilterPython.delete_itkParabolicOpenImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS3IUS3"""
        return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkParabolicOpenImageFilterIUS3IUS3

        Create a new object of the class itkParabolicOpenImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicOpenImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkParabolicOpenImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkParabolicOpenImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkParabolicOpenImageFilterIUS3IUS3.Clone = new_instancemethod(_itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_Clone, None, itkParabolicOpenImageFilterIUS3IUS3)
itkParabolicOpenImageFilterIUS3IUS3_swigregister = _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_swigregister
itkParabolicOpenImageFilterIUS3IUS3_swigregister(itkParabolicOpenImageFilterIUS3IUS3)

def itkParabolicOpenImageFilterIUS3IUS3___New_orig__() -> "itkParabolicOpenImageFilterIUS3IUS3_Pointer":
    """itkParabolicOpenImageFilterIUS3IUS3___New_orig__() -> itkParabolicOpenImageFilterIUS3IUS3_Pointer"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3___New_orig__()

def itkParabolicOpenImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkParabolicOpenImageFilterIUS3IUS3 *":
    """itkParabolicOpenImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkParabolicOpenImageFilterIUS3IUS3"""
    return _itkParabolicOpenImageFilterPython.itkParabolicOpenImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def parabolic_open_close_safe_border_image_filter(*args, **kwargs):
    """Procedural interface for ParabolicOpenCloseSafeBorderImageFilter"""
    import itk
    instance = itk.ParabolicOpenCloseSafeBorderImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def parabolic_open_close_safe_border_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ParabolicOpenCloseSafeBorderImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ParabolicOpenCloseSafeBorderImageFilter.values()[0]
    else:
        filter_object = itk.ParabolicOpenCloseSafeBorderImageFilter

    parabolic_open_close_safe_border_image_filter.__doc__ = filter_object.__doc__
    parabolic_open_close_safe_border_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    parabolic_open_close_safe_border_image_filter.__doc__ += "Available Keyword Arguments:\n"
    parabolic_open_close_safe_border_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def parabolic_open_image_filter(*args, **kwargs):
    """Procedural interface for ParabolicOpenImageFilter"""
    import itk
    instance = itk.ParabolicOpenImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def parabolic_open_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ParabolicOpenImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ParabolicOpenImageFilter.values()[0]
    else:
        filter_object = itk.ParabolicOpenImageFilter

    parabolic_open_image_filter.__doc__ = filter_object.__doc__
    parabolic_open_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    parabolic_open_image_filter.__doc__ += "Available Keyword Arguments:\n"
    parabolic_open_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



