- hosts: all
  name: Autoconverted job legacy-grenade-dsvm-sahara from old job gate-grenade-dsvm-sahara-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          RUN_HEAT_INTEGRATION_TESTS=False
          TEMPEST_PLUGINS+=' ../heat-tempest-plugin ../sahara-tests'
          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PROJECTS="openstack/grenade $PROJECTS"
          export PROJECTS="openstack/sahara $PROJECTS"
          export PROJECTS="openstack/python-saharaclient $PROJECTS"
          export PROJECTS="openstack/heat-tempest-plugin $PROJECTS"
          export PROJECTS="openstack/python-heatclient $PROJECTS"
          export PROJECTS="openstack/sahara-tests $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-ambari $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-cdh $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-mapr $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-spark $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-storm $PROJECTS"
          export PROJECTS="openstack/sahara-plugin-vanilla $PROJECTS"
          export PYTHONUNBUFFERED=true
          export GRENADE_PLUGINRC="enable_grenade_plugin sahara https://opendev.org/openstack/sahara"
          export GRENADE_PLUGINRC+=$'\n'"enable_grenade_plugin heat https://opendev.org/openstack/heat"

          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX="sahara_tempest_plugin.tests.api"
          export DEVSTACK_GATE_GRENADE=pullup
          export DEVSTACK_GATE_USE_PYTHON3=True
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
