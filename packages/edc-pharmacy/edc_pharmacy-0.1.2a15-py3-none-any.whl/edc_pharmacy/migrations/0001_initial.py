# Generated by Django 2.0 on 2018-01-04 12:00

import _socket
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_revision.revision_field
import edc_model_fields.fields.hostname_modification_field
import edc_model_fields.fields.userfield
import edc_model_fields.fields.uuid_auto_field
import edc_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subject_identifier",
                    models.CharField(max_length=50, verbose_name="Subject Identifier"),
                ),
                (
                    "timepoint_status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("feedback", "Feedback"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=15,
                    ),
                ),
                (
                    "timepoint_opened_datetime",
                    models.DateTimeField(
                        editable=False,
                        help_text="the original calculated model's datetime, updated in the signal",
                        null=True,
                    ),
                ),
                (
                    "timepoint_closed_datetime",
                    models.DateTimeField(editable=False, null=True),
                ),
                (
                    "visit_schedule_name",
                    models.CharField(
                        editable=False,
                        help_text='the name of the visit schedule used to find the "schedule"',
                        max_length=25,
                    ),
                ),
                ("schedule_name", models.CharField(editable=False, max_length=25)),
                (
                    "visit_code",
                    models.CharField(editable=False, max_length=25, null=True),
                ),
                (
                    "visit_code_sequence",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)",
                        null=True,
                        verbose_name="Sequence",
                    ),
                ),
                (
                    "timepoint",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="timepoint from schedule",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "timepoint_datetime",
                    models.DateTimeField(
                        help_text="Unadjusted datetime calculated from visit schedule",
                        null=True,
                    ),
                ),
                (
                    "appt_close_datetime",
                    models.DateTimeField(
                        help_text="timepoint_datetime adjusted according to the nearest available datetime for this facility",
                        null=True,
                    ),
                ),
                (
                    "facility_name",
                    models.CharField(
                        help_text="set by model that creates appointments, e.g. Enrollment",
                        max_length=25,
                    ),
                ),
                (
                    "appt_datetime",
                    models.DateTimeField(
                        db_index=True, verbose_name="Appointment date and time"
                    ),
                ),
                (
                    "appt_type",
                    models.CharField(
                        choices=[
                            ("clinic", "In clinic"),
                            ("home", "At home"),
                            ("hospital", "In hospital"),
                            ("telephone", "By telephone"),
                        ],
                        default="clinic",
                        help_text="Default for subject may be edited Subject Configuration.",
                        max_length=20,
                        verbose_name="Appointment type",
                    ),
                ),
                (
                    "appt_status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("incomplete", "Incomplete"),
                            ("done", "Done"),
                            ("cancelled", "Cancelled"),
                        ],
                        db_index=True,
                        default="new",
                        help_text="If the visit has already begun, only 'in progress' or 'incomplete' are valid options",
                        max_length=25,
                        verbose_name="Status",
                    ),
                ),
                (
                    "appt_reason",
                    models.CharField(
                        choices=[
                            ("scheduled", "Routine / Scheduled"),
                            ("unscheduled", "Unscheduled"),
                        ],
                        max_length=25,
                        verbose_name="Reason for appointment",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True, max_length=250, verbose_name="Comment"
                    ),
                ),
                ("is_confirmed", models.BooleanField(default=False, editable=False)),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default="",
                        editable=False,
                        help_text="a field used for quick search",
                        max_length=250,
                        null=True,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="DispensedItem",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subject_identifier",
                    models.CharField(max_length=50, verbose_name="Subject Identifier"),
                ),
                (
                    "dispensed_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("dispensed", models.DecimalField(decimal_places=1, max_digits=6)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("dispensed", "Dispensed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="New",
                        max_length=25,
                        verbose_name="Dispensed",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="DosageGuideline",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("medication_name", models.CharField(max_length=25)),
                (
                    "dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="dose per frequency if NOT considering weight",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "dose_per_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="dose per frequency if considering weight",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "dose_units",
                    models.CharField(
                        choices=[
                            ("mg", "mg"),
                            ("ml", "ml"),
                            ("g", "g"),
                            ("OTHER", "Other ..."),
                            ("N/A", "Not applicable"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "dose_frequency_factor",
                    models.DecimalField(
                        decimal_places=1,
                        default=1,
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(1.0)],
                    ),
                ),
                (
                    "dose_frequency_units",
                    models.CharField(
                        choices=[
                            ("hr", "per hour"),
                            ("day", "per day"),
                            ("single", "single dose"),
                            ("OTHER", "Other ..."),
                            ("N/A", "Not applicable"),
                        ],
                        default="day",
                        max_length=10,
                        verbose_name="per",
                    ),
                ),
                (
                    "subject_weight_factor",
                    models.DecimalField(
                        decimal_places=1,
                        default=1,
                        help_text="factor to convert weight to kg",
                        max_digits=6,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medication",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=35)),
                ("strength", models.DecimalField(decimal_places=1, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[
                            ("mg", "mg"),
                            ("ml", "ml"),
                            ("g", "g"),
                            ("OTHER", "Other ..."),
                            ("N/A", "Not applicable"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "formulation",
                    models.CharField(
                        choices=[
                            ("11", "Tablet"),
                            ("12", "Capsule"),
                            ("13", "Vial"),
                            ("14", "Liquid"),
                            ("15", "Powder"),
                            ("16", "Suspension"),
                            ("17", "Gel"),
                            ("18", "Oil"),
                            ("19", "Lotion"),
                            ("20", "Cream"),
                            ("21", "Patch"),
                            ("OTHER", "Other"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "route",
                    models.CharField(
                        choices=[
                            ("10", "Intramuscular"),
                            ("20", "Intravenous"),
                            ("30", "Oral"),
                            ("40", "Topical"),
                            ("50", "Subcutaneous"),
                            ("60", "Intravaginal"),
                            ("70", "Rectal"),
                            ("OTHER", "Other"),
                        ],
                        max_length=25,
                    ),
                ),
                ("notes", models.TextField(blank=True, max_length=250, null=True)),
            ],
            options={"verbose_name_plural": "Medication"},
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subject_identifier",
                    models.CharField(max_length=50, verbose_name="Subject Identifier"),
                ),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default="",
                        editable=False,
                        help_text="a field used for quick search",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "report_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("partial", "Partially filled"),
                            ("filled", "Filled"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="New",
                        max_length=25,
                    ),
                ),
                ("rando_sid", models.CharField(max_length=25, null=True)),
                ("rando_arm", models.CharField(max_length=25, null=True)),
                (
                    "weight_in_kgs",
                    models.DecimalField(decimal_places=1, max_digits=6, null=True),
                ),
                ("clinician_initials", models.CharField(max_length=3, null=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Private notes for pharmacist only",
                        max_length=250,
                        null=True,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="PrescriptionItem",
            fields=[
                (
                    "created",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=edc_utils.date.get_utcnow),
                ),
                (
                    "user_created",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    edc_model_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    edc_model_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    edc_model_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Leave blank to auto-calculate",
                        max_digits=6,
                        null=True,
                    ),
                ),
                ("calculate_dose", models.BooleanField(default=True)),
                (
                    "frequency",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "frequency_units",
                    models.CharField(
                        choices=[
                            ("hr", "times per hour"),
                            ("day", "times per day"),
                            ("single", "single dose"),
                            ("OTHER", "Other ..."),
                            ("N/A", "Not applicable"),
                        ],
                        default="day",
                        max_length=10,
                        verbose_name="per",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="start")),
                (
                    "end_date",
                    models.DateField(help_text="inclusive", verbose_name="end"),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Leave blank to auto-calculate",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "remaining",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Leave blank to auto-calculate",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional information for patient",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("verified", models.BooleanField(default=False)),
                ("verified_datetime", models.DateTimeField(blank=True, null=True)),
                ("as_string", models.CharField(editable=False, max_length=150)),
                (
                    "dosage_guideline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.DosageGuideline",
                    ),
                ),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.Medication",
                    ),
                ),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.Prescription",
                    ),
                ),
            ],
            options={
                "ordering": ("-modified", "-created"),
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.AlterUniqueTogether(
            name="medication",
            unique_together={("name", "strength", "units", "formulation")},
        ),
        migrations.AlterUniqueTogether(
            name="dosageguideline", unique_together={("medication_name", "dose_units")}
        ),
        migrations.AddField(
            model_name="dispenseditem",
            name="prescription",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.Prescription",
            ),
        ),
        migrations.AddField(
            model_name="dispenseditem",
            name="prescription_item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.PrescriptionItem",
            ),
        ),
    ]
