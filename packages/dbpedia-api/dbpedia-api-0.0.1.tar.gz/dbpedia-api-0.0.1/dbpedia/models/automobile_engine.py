# coding: utf-8

"""
    DBpedia

    This is the API of the DBpedia Ontology  # noqa: E501

    The version of the OpenAPI document: v0.0.1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dbpedia.configuration import Configuration


class AutomobileEngine(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'head_alloy': 'list[object]',
        'piston_stroke': 'list[object]',
        'note': 'list[str]',
        'configuration': 'list[object]',
        'cooling_system': 'list[object]',
        'fuel_system': 'list[object]',
        'oil_system': 'list[object]',
        'description': 'list[str]',
        'start_year_of_insertion': 'list[str]',
        'type': 'list[str]',
        'fuel_consumption': 'list[str]',
        'automobile_model': 'list[str]',
        'acceleration': 'list[object]',
        'diameter': 'list[object]',
        'redline': 'list[float]',
        'displacement': 'list[object]',
        'id': 'str',
        'height': 'list[object]',
        'length': 'list[object]',
        'weight': 'list[object]',
        'label': 'list[str]',
        'end_year_of_insertion': 'list[str]',
        'torque_output': 'list[object]',
        'power_output': 'list[object]',
        'valvetrain': 'list[object]',
        'compression_ratio': 'list[str]',
        'top_speed': 'list[object]',
        'fuel_type': 'list[object]',
        'width': 'list[object]',
        'block_alloy': 'list[object]',
        'co2_emission': 'list[object]',
        'cylinder_bore': 'list[object]'
    }

    attribute_map = {
        'head_alloy': 'headAlloy',
        'piston_stroke': 'pistonStroke',
        'note': 'note',
        'configuration': 'configuration',
        'cooling_system': 'coolingSystem',
        'fuel_system': 'fuelSystem',
        'oil_system': 'oilSystem',
        'description': 'description',
        'start_year_of_insertion': 'startYearOfInsertion',
        'type': 'type',
        'fuel_consumption': 'fuelConsumption',
        'automobile_model': 'automobileModel',
        'acceleration': 'acceleration',
        'diameter': 'diameter',
        'redline': 'redline',
        'displacement': 'displacement',
        'id': 'id',
        'height': 'height',
        'length': 'length',
        'weight': 'weight',
        'label': 'label',
        'end_year_of_insertion': 'endYearOfInsertion',
        'torque_output': 'torqueOutput',
        'power_output': 'powerOutput',
        'valvetrain': 'valvetrain',
        'compression_ratio': 'compressionRatio',
        'top_speed': 'topSpeed',
        'fuel_type': 'fuelType',
        'width': 'width',
        'block_alloy': 'blockAlloy',
        'co2_emission': 'co2Emission',
        'cylinder_bore': 'cylinderBore'
    }

    def __init__(self, head_alloy=None, piston_stroke=None, note=None, configuration=None, cooling_system=None, fuel_system=None, oil_system=None, description=None, start_year_of_insertion=None, type=None, fuel_consumption=None, automobile_model=None, acceleration=None, diameter=None, redline=None, displacement=None, id=None, height=None, length=None, weight=None, label=None, end_year_of_insertion=None, torque_output=None, power_output=None, valvetrain=None, compression_ratio=None, top_speed=None, fuel_type=None, width=None, block_alloy=None, co2_emission=None, cylinder_bore=None, local_vars_configuration=None):  # noqa: E501
        """AutomobileEngine - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._head_alloy = None
        self._piston_stroke = None
        self._note = None
        self._configuration = None
        self._cooling_system = None
        self._fuel_system = None
        self._oil_system = None
        self._description = None
        self._start_year_of_insertion = None
        self._type = None
        self._fuel_consumption = None
        self._automobile_model = None
        self._acceleration = None
        self._diameter = None
        self._redline = None
        self._displacement = None
        self._id = None
        self._height = None
        self._length = None
        self._weight = None
        self._label = None
        self._end_year_of_insertion = None
        self._torque_output = None
        self._power_output = None
        self._valvetrain = None
        self._compression_ratio = None
        self._top_speed = None
        self._fuel_type = None
        self._width = None
        self._block_alloy = None
        self._co2_emission = None
        self._cylinder_bore = None
        self.discriminator = None

        self.head_alloy = head_alloy
        self.piston_stroke = piston_stroke
        self.note = note
        self.configuration = configuration
        self.cooling_system = cooling_system
        self.fuel_system = fuel_system
        self.oil_system = oil_system
        self.description = description
        self.start_year_of_insertion = start_year_of_insertion
        self.type = type
        self.fuel_consumption = fuel_consumption
        self.automobile_model = automobile_model
        self.acceleration = acceleration
        self.diameter = diameter
        self.redline = redline
        self.displacement = displacement
        if id is not None:
            self.id = id
        self.height = height
        self.length = length
        self.weight = weight
        self.label = label
        self.end_year_of_insertion = end_year_of_insertion
        self.torque_output = torque_output
        self.power_output = power_output
        self.valvetrain = valvetrain
        self.compression_ratio = compression_ratio
        self.top_speed = top_speed
        self.fuel_type = fuel_type
        self.width = width
        self.block_alloy = block_alloy
        self.co2_emission = co2_emission
        self.cylinder_bore = cylinder_bore

    @property
    def head_alloy(self):
        """Gets the head_alloy of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The head_alloy of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._head_alloy

    @head_alloy.setter
    def head_alloy(self, head_alloy):
        """Sets the head_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :param head_alloy: The head_alloy of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._head_alloy = head_alloy

    @property
    def piston_stroke(self):
        """Gets the piston_stroke of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The piston_stroke of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._piston_stroke

    @piston_stroke.setter
    def piston_stroke(self, piston_stroke):
        """Sets the piston_stroke of this AutomobileEngine.

        Description not available  # noqa: E501

        :param piston_stroke: The piston_stroke of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._piston_stroke = piston_stroke

    @property
    def note(self):
        """Gets the note of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The note of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this AutomobileEngine.

        Description not available  # noqa: E501

        :param note: The note of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._note = note

    @property
    def configuration(self):
        """Gets the configuration of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The configuration of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this AutomobileEngine.

        Description not available  # noqa: E501

        :param configuration: The configuration of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._configuration = configuration

    @property
    def cooling_system(self):
        """Gets the cooling_system of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The cooling_system of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._cooling_system

    @cooling_system.setter
    def cooling_system(self, cooling_system):
        """Sets the cooling_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param cooling_system: The cooling_system of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._cooling_system = cooling_system

    @property
    def fuel_system(self):
        """Gets the fuel_system of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The fuel_system of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._fuel_system

    @fuel_system.setter
    def fuel_system(self, fuel_system):
        """Sets the fuel_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_system: The fuel_system of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._fuel_system = fuel_system

    @property
    def oil_system(self):
        """Gets the oil_system of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The oil_system of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._oil_system

    @oil_system.setter
    def oil_system(self, oil_system):
        """Sets the oil_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param oil_system: The oil_system of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._oil_system = oil_system

    @property
    def description(self):
        """Gets the description of this AutomobileEngine.  # noqa: E501

        small description  # noqa: E501

        :return: The description of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AutomobileEngine.

        small description  # noqa: E501

        :param description: The description of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._description = description

    @property
    def start_year_of_insertion(self):
        """Gets the start_year_of_insertion of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The start_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._start_year_of_insertion

    @start_year_of_insertion.setter
    def start_year_of_insertion(self, start_year_of_insertion):
        """Sets the start_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :param start_year_of_insertion: The start_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._start_year_of_insertion = start_year_of_insertion

    @property
    def type(self):
        """Gets the type of this AutomobileEngine.  # noqa: E501

        type of the resource  # noqa: E501

        :return: The type of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AutomobileEngine.

        type of the resource  # noqa: E501

        :param type: The type of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._type = type

    @property
    def fuel_consumption(self):
        """Gets the fuel_consumption of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The fuel_consumption of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._fuel_consumption

    @fuel_consumption.setter
    def fuel_consumption(self, fuel_consumption):
        """Sets the fuel_consumption of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_consumption: The fuel_consumption of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._fuel_consumption = fuel_consumption

    @property
    def automobile_model(self):
        """Gets the automobile_model of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The automobile_model of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._automobile_model

    @automobile_model.setter
    def automobile_model(self, automobile_model):
        """Sets the automobile_model of this AutomobileEngine.

        Description not available  # noqa: E501

        :param automobile_model: The automobile_model of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._automobile_model = automobile_model

    @property
    def acceleration(self):
        """Gets the acceleration of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The acceleration of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._acceleration

    @acceleration.setter
    def acceleration(self, acceleration):
        """Sets the acceleration of this AutomobileEngine.

        Description not available  # noqa: E501

        :param acceleration: The acceleration of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._acceleration = acceleration

    @property
    def diameter(self):
        """Gets the diameter of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The diameter of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._diameter

    @diameter.setter
    def diameter(self, diameter):
        """Sets the diameter of this AutomobileEngine.

        Description not available  # noqa: E501

        :param diameter: The diameter of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._diameter = diameter

    @property
    def redline(self):
        """Gets the redline of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The redline of this AutomobileEngine.  # noqa: E501
        :rtype: list[float]
        """
        return self._redline

    @redline.setter
    def redline(self, redline):
        """Sets the redline of this AutomobileEngine.

        Description not available  # noqa: E501

        :param redline: The redline of this AutomobileEngine.  # noqa: E501
        :type: list[float]
        """

        self._redline = redline

    @property
    def displacement(self):
        """Gets the displacement of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The displacement of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._displacement

    @displacement.setter
    def displacement(self, displacement):
        """Sets the displacement of this AutomobileEngine.

        Description not available  # noqa: E501

        :param displacement: The displacement of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._displacement = displacement

    @property
    def id(self):
        """Gets the id of this AutomobileEngine.  # noqa: E501

        identifier  # noqa: E501

        :return: The id of this AutomobileEngine.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AutomobileEngine.

        identifier  # noqa: E501

        :param id: The id of this AutomobileEngine.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def height(self):
        """Gets the height of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The height of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this AutomobileEngine.

        Description not available  # noqa: E501

        :param height: The height of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._height = height

    @property
    def length(self):
        """Gets the length of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The length of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this AutomobileEngine.

        Description not available  # noqa: E501

        :param length: The length of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._length = length

    @property
    def weight(self):
        """Gets the weight of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The weight of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this AutomobileEngine.

        Description not available  # noqa: E501

        :param weight: The weight of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._weight = weight

    @property
    def label(self):
        """Gets the label of this AutomobileEngine.  # noqa: E501

        short description of the resource  # noqa: E501

        :return: The label of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AutomobileEngine.

        short description of the resource  # noqa: E501

        :param label: The label of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._label = label

    @property
    def end_year_of_insertion(self):
        """Gets the end_year_of_insertion of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The end_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._end_year_of_insertion

    @end_year_of_insertion.setter
    def end_year_of_insertion(self, end_year_of_insertion):
        """Sets the end_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :param end_year_of_insertion: The end_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._end_year_of_insertion = end_year_of_insertion

    @property
    def torque_output(self):
        """Gets the torque_output of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The torque_output of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._torque_output

    @torque_output.setter
    def torque_output(self, torque_output):
        """Sets the torque_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :param torque_output: The torque_output of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._torque_output = torque_output

    @property
    def power_output(self):
        """Gets the power_output of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The power_output of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._power_output

    @power_output.setter
    def power_output(self, power_output):
        """Sets the power_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :param power_output: The power_output of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._power_output = power_output

    @property
    def valvetrain(self):
        """Gets the valvetrain of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The valvetrain of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._valvetrain

    @valvetrain.setter
    def valvetrain(self, valvetrain):
        """Sets the valvetrain of this AutomobileEngine.

        Description not available  # noqa: E501

        :param valvetrain: The valvetrain of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._valvetrain = valvetrain

    @property
    def compression_ratio(self):
        """Gets the compression_ratio of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The compression_ratio of this AutomobileEngine.  # noqa: E501
        :rtype: list[str]
        """
        return self._compression_ratio

    @compression_ratio.setter
    def compression_ratio(self, compression_ratio):
        """Sets the compression_ratio of this AutomobileEngine.

        Description not available  # noqa: E501

        :param compression_ratio: The compression_ratio of this AutomobileEngine.  # noqa: E501
        :type: list[str]
        """

        self._compression_ratio = compression_ratio

    @property
    def top_speed(self):
        """Gets the top_speed of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The top_speed of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._top_speed

    @top_speed.setter
    def top_speed(self, top_speed):
        """Sets the top_speed of this AutomobileEngine.

        Description not available  # noqa: E501

        :param top_speed: The top_speed of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._top_speed = top_speed

    @property
    def fuel_type(self):
        """Gets the fuel_type of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The fuel_type of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type):
        """Sets the fuel_type of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_type: The fuel_type of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._fuel_type = fuel_type

    @property
    def width(self):
        """Gets the width of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The width of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this AutomobileEngine.

        Description not available  # noqa: E501

        :param width: The width of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._width = width

    @property
    def block_alloy(self):
        """Gets the block_alloy of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The block_alloy of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._block_alloy

    @block_alloy.setter
    def block_alloy(self, block_alloy):
        """Sets the block_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :param block_alloy: The block_alloy of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._block_alloy = block_alloy

    @property
    def co2_emission(self):
        """Gets the co2_emission of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The co2_emission of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._co2_emission

    @co2_emission.setter
    def co2_emission(self, co2_emission):
        """Sets the co2_emission of this AutomobileEngine.

        Description not available  # noqa: E501

        :param co2_emission: The co2_emission of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._co2_emission = co2_emission

    @property
    def cylinder_bore(self):
        """Gets the cylinder_bore of this AutomobileEngine.  # noqa: E501

        Description not available  # noqa: E501

        :return: The cylinder_bore of this AutomobileEngine.  # noqa: E501
        :rtype: list[object]
        """
        return self._cylinder_bore

    @cylinder_bore.setter
    def cylinder_bore(self, cylinder_bore):
        """Sets the cylinder_bore of this AutomobileEngine.

        Description not available  # noqa: E501

        :param cylinder_bore: The cylinder_bore of this AutomobileEngine.  # noqa: E501
        :type: list[object]
        """

        self._cylinder_bore = cylinder_bore

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AutomobileEngine):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AutomobileEngine):
            return True

        return self.to_dict() != other.to_dict()
