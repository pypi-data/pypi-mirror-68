# coding: utf-8

"""
    DBpedia

    This is the API of the DBpedia Ontology  # noqa: E501

    The version of the OpenAPI document: v0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dbpedia
from dbpedia.models.single import Single  # noqa: E501
from dbpedia.rest import ApiException

class TestSingle(unittest.TestCase):
    """Single unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Single
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dbpedia.models.single.Single()  # noqa: E501
        if include_optional :
            return Single(
                previous_work = [
                    None
                    ], 
                artist = [
                    None
                    ], 
                translator = [
                    None
                    ], 
                alternative_title = [
                    '0'
                    ], 
                description = [
                    '0'
                    ], 
                subsequent_work = [
                    None
                    ], 
                chief_editor = [
                    None
                    ], 
                music_composer = [
                    None
                    ], 
                type = [
                    '0'
                    ], 
                musical_band = [
                    None
                    ], 
                musical_artist = [
                    None
                    ], 
                main_character = [
                    None
                    ], 
                b_side = [
                    '0'
                    ], 
                record_date = [
                    '0'
                    ], 
                id = '0', 
                based_on = [
                    None
                    ], 
                certification_date = [
                    '0'
                    ], 
                recorded_in = [
                    None
                    ], 
                release_date = [
                    '0'
                    ], 
                a_side = [
                    '0'
                    ], 
                composer = [
                    None
                    ], 
                author = [
                    None
                    ], 
                runtime = [
                    None
                    ], 
                production_company = [
                    None
                    ], 
                label = [
                    '0'
                    ], 
                original_language = [
                    None
                    ], 
                certification = [
                    '0'
                    ], 
                license = [
                    None
                    ], 
                subject_term = [
                    '0'
                    ], 
                musical_key = [
                    '0'
                    ], 
                original_title = [
                    '0'
                    ], 
                producer = [
                    None
                    ], 
                starring = [
                    None
                    ], 
                completion_date = [
                    '0'
                    ], 
                writer = [
                    None
                    ], 
                music_type = [
                    None
                    ]
            )
        else :
            return Single(
        )

    def testSingle(self):
        """Test Single"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
