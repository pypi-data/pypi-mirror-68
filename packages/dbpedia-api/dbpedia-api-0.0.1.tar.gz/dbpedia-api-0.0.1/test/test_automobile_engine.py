# coding: utf-8

"""
    DBpedia

    This is the API of the DBpedia Ontology  # noqa: E501

    The version of the OpenAPI document: v0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dbpedia
from dbpedia.models.automobile_engine import AutomobileEngine  # noqa: E501
from dbpedia.rest import ApiException

class TestAutomobileEngine(unittest.TestCase):
    """AutomobileEngine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AutomobileEngine
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dbpedia.models.automobile_engine.AutomobileEngine()  # noqa: E501
        if include_optional :
            return AutomobileEngine(
                head_alloy = [
                    None
                    ], 
                piston_stroke = [
                    None
                    ], 
                note = [
                    '0'
                    ], 
                configuration = [
                    None
                    ], 
                cooling_system = [
                    None
                    ], 
                fuel_system = [
                    None
                    ], 
                oil_system = [
                    None
                    ], 
                description = [
                    '0'
                    ], 
                start_year_of_insertion = [
                    '0'
                    ], 
                type = [
                    '0'
                    ], 
                fuel_consumption = [
                    '0'
                    ], 
                automobile_model = [
                    '0'
                    ], 
                acceleration = [
                    None
                    ], 
                diameter = [
                    None
                    ], 
                redline = [
                    1.337
                    ], 
                displacement = [
                    None
                    ], 
                id = '0', 
                height = [
                    None
                    ], 
                length = [
                    None
                    ], 
                weight = [
                    None
                    ], 
                label = [
                    '0'
                    ], 
                end_year_of_insertion = [
                    '0'
                    ], 
                torque_output = [
                    None
                    ], 
                power_output = [
                    None
                    ], 
                valvetrain = [
                    None
                    ], 
                compression_ratio = [
                    '0'
                    ], 
                top_speed = [
                    None
                    ], 
                fuel_type = [
                    None
                    ], 
                width = [
                    None
                    ], 
                block_alloy = [
                    None
                    ], 
                co2_emission = [
                    None
                    ], 
                cylinder_bore = [
                    None
                    ]
            )
        else :
            return AutomobileEngine(
        )

    def testAutomobileEngine(self):
        """Test AutomobileEngine"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
