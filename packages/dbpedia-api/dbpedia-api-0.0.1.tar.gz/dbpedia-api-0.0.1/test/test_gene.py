# coding: utf-8

"""
    DBpedia

    This is the API of the DBpedia Ontology  # noqa: E501

    The version of the OpenAPI document: v0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dbpedia
from dbpedia.models.gene import Gene  # noqa: E501
from dbpedia.rest import ApiException

class TestGene(unittest.TestCase):
    """Gene unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Gene
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dbpedia.models.gene.Gene()  # noqa: E501
        if include_optional :
            return Gene(
                entrezgene = [
                    '0'
                    ], 
                symbol = [
                    '0'
                    ], 
                gene_location = [
                    None
                    ], 
                description = [
                    '0'
                    ], 
                label = [
                    '0'
                    ], 
                type = [
                    '0'
                    ], 
                ensembl = [
                    '0'
                    ], 
                refseqprotein = [
                    '0'
                    ], 
                omim = [
                    56
                    ], 
                refseqmrna = [
                    '0'
                    ], 
                hgncid = [
                    '0'
                    ], 
                mgiid = [
                    '0'
                    ], 
                ec_number = [
                    '0'
                    ], 
                orthologous_gene = [
                    None
                    ], 
                id = '0', 
                uniprot = [
                    '0'
                    ]
            )
        else :
            return Gene(
        )

    def testGene(self):
        """Test Gene"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
