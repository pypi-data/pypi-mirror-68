# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pi_hole_influx']

package_data = \
{'': ['*']}

install_requires = \
['dynaconf>=2.2.2,<3.0.0', 'influxdb>=5.2.3,<6.0.0', 'sdnotify>=0.3.2,<0.4.0']

entry_points = \
{'console_scripts': ['pi-hole-influx = pi_hole_influx:main']}

setup_kwargs = {
    'name': 'pi-hole-influx',
    'version': '0.1.0a1',
    'description': 'A python daemon to send Pi-Hole stats for Grafana to InfluxDB',
    'long_description': '# Pi-hole-Influx\n\n[![Build Status](https://travis-ci.org/janw/pi-hole-influx.svg?branch=master)](https://travis-ci.org/janw/pi-hole-influx)\n[![Maintainability](https://api.codeclimate.com/v1/badges/cfe71020e6505ca65cfc/maintainability)](https://codeclimate.com/github/janw/pi-hole-influx/maintainability)\n[![Coverage Status](https://coveralls.io/repos/github/janw/pi-hole-influx/badge.svg?branch=master)](https://coveralls.io/github/janw/pi-hole-influx?branch=master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nA simple daemonized script to report Pi-Hole stats to an InfluxDB, ready to be displayed via Grafana.\n\n**Heads-up: the configuration options changed fundamentally in recent versions. Please read up on the current state below.**\n\n![Example Grafana Dashboard](.readme-assets/dashboard.png)\n\n## Setup (Using Docker)\n\n* To use docker for running the daemon, use the following command:\n\n  ```bash\n  docker run \\\n    -e PIHOLE_INFLUXDB_HOST="myhostname" \\\n    -e PIHOLE_INFLUXDB_PORT="8086" \\\n    -e PIHOLE_INFLUXDB_USERNAME="myusername" \\\n    -e PIHOLE_INFLUXDB_PASSWORD="mysupersecretpassword" \\\n    -e PIHOLE_INFLUXDB_DATABASE="pihole" \\\n    -e PIHOLE_INSTANCES="localhost=http://127.0.0.1/admin/api.php" \\\n    registry.gitlab.com/janw/pi-hole-influx\n  ```\n\n* For running it on a Raspberry Pi (arm v7 arch), use the dedicated `armv7` image tag:\n\n  ```bash\n  docker run \\\n    -e PIHOLE_INFLUXDB_HOST="myhostname" \\\n    -e PIHOLE_INFLUXDB_USERNAME="myusername" \\\n    -e PIHOLE_INFLUXDB_PASSWORD="mysupersecretpassword" \\\n    --network host \\\n    registry.gitlab.com/janw/pi-hole-influx:armv7\n  ```\n\nThe following values are the defaults and will be used if not set:\n\n* `PIHOLE_INFLUXDB_PORT="8086"`\n* `PIHOLE_INFLUXDB_HOST="127.0.0.1"`\n* `PIHOLE_INFLUXDB_DATABASE="pihole"`\n* `PIHOLE_INSTANCES="localhost=http://127.0.0.1/admin/api.php"`\n\n`PIHOLE_INSTANCES` contains the Pi-hole instances that are to be reported. Multiple instances can given in a dict-like boxed syntax, known as [Inline Tables in TOML](https://github.com/toml-lang/toml#inline-table):\n\n```bash\nPIHOLE_INSTANCES="{first_one="http://127.0.0.1/admin/api.php",second_pihole="http://192.168.42.79/admin/api.php"[,…]}"\n```\n\nNote that instances are prefixed by a custom name.\n\n## Docker-compose example\n\nIf you want to run the daemon through Docker-compose, you might appreciate the configuration example below.\n\n```yaml\nversion: "2"\nservices:\n  piholeinflux:\n    image: registry.gitlab.com/janw/pi-hole-influx\n    container_name: piholeinflux\n    restart: unless-stopped\n    environment:\n\n      # Replace details with your InfluxDB\'s hostname and credentials\n      PIHOLE_INFLUXDB_HOST: "10.10.10.1"\n      PIHOLE_INFLUXDB_PORT: "8086"\n      PIHOLE_INFLUXDB_USERNAME: "pihole"\n      PIHOLE_INFLUXDB_PASSWORD: "pihole"\n      PIHOLE_INFLUXDB_DATABASE: "pihole"\n\n      # Replace with your Pi-Hole\'s address including path to API below\n      PIHOLE_INSTANCES: "pihole=http://10.10.0.10/admin/api.php"\n\n    # OPTIONAL: Instead of the aobove environment variables,\n    #           use a custom copy of the user.toml config file.\n    volumes:\n      - ./custom/config.toml:/user.toml\n```\n\n## Setup (Traditional Way)\n\nAs Pi-hole (as the name suggests) is built specifically with the Raspberry Pi in mind (and I run it on there as well), the following steps assume an instance of Pi-hole on Raspbian Strech Lite, with no additional modifications so far. Piholestatus will be configured to run on the same Pi.\n\nFirst install the necessary packages via apt as Raspbian Lite does have neither git nor pip installed.\n\n```bash\nsudo apt update\nsudo apt install git python3-pip -y\n```\n\nNow clone the repo, install the Python dependencies, and make sure to copy and adjust the example configuation file to match your setup.\n\n```bash\n# Install package via pip\npip3 install pi-hole-influx\n\n# Download config.example and modify it (should be self-explanatory)\nwget -O user.toml https://raw.githubusercontent.com/janw/pi-hole-influx/master/user.toml.example\nvi user.toml\n```\n\nBefore starting the daemon for the first time, symlink the systemd service into place, reload, and enable the service.\n\n```bash\nsudo ln -s /home/pi/pi-hole-influx/piholeinflux.service /etc/systemd/system/\nsudo systemctl --system daemon-reload\nsudo systemctl enable piholeinflux.service\n```\n\nNow you\'re ready to start the daemon. Wait a few seconds to check its status.\n\n```bash\nsudo systemctl start piholeinflux.service\nsudo systemctl status piholeinflux.service\n```\n\nThe status should look as follows. Note the `Status:` line showing the last time, the daemon reported to InfluxDB:\n\n```text\n● piholeinflux.service - Pi-hole-Influx - Send Pi-hole statistics to InfluxDB for visualization\n   Loaded: loaded (/home/pi/pi-hole-influx/piholeinflux.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2018-06-22 19:03:56 UTC; 10min ago\n     Docs: https://github.com/janw/pi-hole-influx\n Main PID: 21329 (python)\n   Status: "Reported to InfluxDB at 2018-06-22 19:14:09 +0000"\n   CGroup: /system.slice/piholeinflux.service\n           └─21329 /usr/bin/python /home/pi/pi-hole-influx/piholeinflux.py\n```\n\n## Set up a Grafana Dashboard\n\nThe example dashboard seen [at the top](#pi-hole-influx) uses the collected data and displays it in concise and sensible graphs and single stats. The dashboard can be imported into your Grafana instance from the `dashboard.json` file included in the repo, or by using ID `6603` to [import it from Grafana\'s Dashboard Directory](https://grafana.com/dashboards/6603).\n\n## Attributions\n\nThe script originally [created by Jon Hayward](https://fattylewis.com/Graphing-pi-hole-stats/), adapted to work with InfluxDB [by /u/tollsjo in December 2016](https://github.com/sco01/piholestatus), and [improved and extended by @johnappletree](https://github.com/johnappletree/piholestatus). "If I have seen further it is by standing on the shoulders of giants". 🤓\n',
    'author': 'Jan Willhaus',
    'author_email': 'mail@janwillhaus.de',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.5,<4.0',
}


setup(**setup_kwargs)
