{
  "test_application_api_magics.py::test_version": true,
  "test_baseline.py::test_basecor_multivariate_pchip": true,
  "test_baseline.py::test_basecor_sequential_pchip": true,
  "test_concatenate.py::test_concatenate_1D_along_axis0": true,
  "test_concatenate.py::test_concatenate_along_axis1": true,
  "test_dataset/test_ndarray.py::test_ndarray_complex": true,
  "test_dataset/test_ndarray.py::test_ndarray_copy_of_ndarray": true,
  "test_dataset/test_ndarray.py::test_ndarray_deepcopy_of_ndarray": true,
  "test_dataset/test_ndarray.py::test_ndarray_init_complex_with_a_ndarray": true,
  "test_dataset/test_ndarray.py::test_ndarray_init_complex_with_copy_of_ndarray": true,
  "test_dataset/test_ndarray.py::test_ndarray_init_complex_with_mask": true,
  "test_dataset/test_ndarray.py::test_ndarray_init_quaternion": true,
  "test_dataset/test_ndarray.py::test_ndarray_len_and_sizes_cplx": true,
  "test_dataset/test_ndarray.py::test_ndarray_ndarraycplx_fixture": true,
  "test_dataset/test_ndarray.py::test_ndarray_ndarraycplx_fixture2": true,
  "test_dataset/test_ndarray.py::test_ndarray_quaternion_fixture": true,
  "test_dataset/test_ndarray.py::test_ndarray_real_imag": true,
  "test_dataset/test_ndarray.py::test_ndarray_real_imag_quaternion": true,
  "test_dataset/test_ndarray.py::test_ndarray_set_with_complex": true,
  "test_dataset/test_ndarray.py::test_ndarray_slicing_byindex_cplx": true,
  "test_dataset/test_ndarray.py::test_ndarray_slicing_byindex_quaternion": true,
  "test_dataset/test_ndarray.py::test_ndarray_squeeze": true,
  "test_dataset/test_ndarray.py::test_ndarray_str_representation_for_complex": true,
  "test_dataset/test_ndarray.py::test_ndarray_swapaxes_quaternion": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[II]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[IR]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[RI]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[abs]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[absolute]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[conj]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[conjugate]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[cumprod]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[imag]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[part]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[prod]": true,
  "test_dataset/test_ndcoords.py::test_coord_not_implemented[set_complex]": true,
  "test_dataset/test_ndcoords.py::test_coords_multicoord_for_a_single_dim": true,
  "test_dataset/test_ndcoordset.py::test_coordrange": true,
  "test_dataset/test_ndcoordset.py::test_range": true,
  "test_dataset/test_nddataset.py::test_nddataset_plusminus": true,
  "test_dataset/test_nddataset.py::test_nddataset_set_coordinates_withna": true,
  "test_dataset/test_ndio.py::test_save1D_load": true,
  "test_dataset/test_ndio.py::test_save2D_load": true,
  "test_dataset/test_ndio.py::test_save_and_load_mydataset": true,
  "test_dataset/test_ndmath.py::test_": true,
  "test_dataset/test_ndmath.py::test_nddataset_divide_uncertainties": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[arctan2-x1, x2, [, out, where, casting, \\u2026])    Element-wise arc tangent of x1/x2 choosing the quadrant correctly.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[equal-x1, x2, [, out, where, casting, \\u2026])    Return ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[fmax-x1, x2, [, out, where, casting, \\u2026])    Element-wise maximum of array elements.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[fmin-x1, x2, [, out, where, casting, \\u2026])    Element-wise minimum of array elements.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[greater-x1, x2, [, out, where, casting, \\u2026])    Return the truth value of ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[greater_equal-x1, x2, [, out, where, \\u2026])    Return the truth value of ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[heaviside-x1, x2, [, out, where, casting, \\u2026])    Compute the Heaviside step function.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[ldexp-x1, x2, [, out, where, casting, \\u2026])    Returns x1 * 2**x2, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[less-x1, x2, [, out, where, casting, \\u2026])    Return the truth value of ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[less_equal-x1, x2, [, out, where, casting, \\u2026])    Return the truth value of ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[logical_and-x1, x2, [, out, where, \\u2026])    Compute the truth value of x1 AND x2 element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[logical_or-x1, x2, [, out, where, casting, \\u2026])    Compute the truth value of x1 OR x2 element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[logical_xor-x1, x2, [, out, where, \\u2026])    Compute the truth value of x1 XOR x2, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[maximum-x1, x2, [, out, where, casting, \\u2026])    Element-wise maximum of array elements.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[minimum-x1, x2, [, out, where, casting, \\u2026])    Element-wise minimum of array elements.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[not_equal-x1, x2, [, out, where, casting, \\u2026])    Return ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_binary_ufuncs_simple_data[power-x1, x2, [, out, where, casting, \\u2026])    First array elements raised to powers from second array, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[max-NDDataset-None-kwargs0]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[max-restype1-None-kwargs1]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.around-NDDataset-args32-kwargs32]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.clip-NDDataset-args31-kwargs31]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.max-restype0-None-kwargs0]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.max-restype11-None-kwargs11]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.mean-NDDataset-None-kwargs13]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.round-NDDataset-args33-kwargs33]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.std-NDDataset-None-kwargs14]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.sum-NDDataset-None-kwargs12]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[np.var-NDDataset-None-kwargs15]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[sum-NDDataset-None-kwargs11]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions[sum-restype10-None-kwargs10]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions_with_masked[amax-NDDataset-None-kwargs0]": true,
  "test_dataset/test_ndmath.py::test_ndmath_non_ufunc_functions_with_masked[max-NDDataset-None-kwargs2]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[absolute-x, /[, out, where, casting, order, \\u2026])\\tCalculate the absolute value element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arccos-x, /[, out, where, casting, order, \\u2026])\\tTrigonometric inverse cosine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arccosh-x, /[, out, where, casting, order, \\u2026])\\tInverse hyperbolic cosine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arcsin-x, /[, out, where, casting, order, \\u2026])\\tInverse sine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arcsinh-x, /[, out, where, casting, order, \\u2026])\\tInverse hyperbolic sine element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arctan-x, /[, out, where, casting, order, \\u2026])\\tTrigonometric inverse tangent, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[arctanh-x, /[, out, where, casting, order, \\u2026])\\tInverse hyperbolic tangent element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[cbrt-x, /[, out, where, casting, order, \\u2026])\\tReturn the cube-root of an array, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[ceil-x, /[, out, where, casting, order, \\u2026])\\tReturn the ceiling of the input, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[conj-x, /[, out, where, casting, order, \\u2026])\\tReturn the complex conjugate, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[cos-x, /[, out, where, casting, order, \\u2026])\\tCosine element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[cosh-x, /[, out, where, casting, order, \\u2026])\\tHyperbolic cosine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[deg2rad-x, /[, out, where, casting, order, \\u2026])\\tConvert angles from degrees to radians.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[exp-x, /[, out, where, casting, order, \\u2026])\\tCalculate the exponential of all elements in the input array.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[exp2-x, /[, out, where, casting, order, \\u2026])\\tCalculate 2**p for all p in the input array.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[expm1-x, /[, out, where, casting, order, \\u2026])\\tCalculate exp]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[fabs-x, /[, out, where, casting, order, \\u2026])\\tCompute the absolute values element-wise.0]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[fabs-x, /[, out, where, casting, order, \\u2026])\\tCompute the absolute values element-wise.1]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[floor-x, /[, out, where, casting, order, \\u2026])\\tReturn the floor of the input, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[isfinite-x, /[, out, where, casting, order, \\u2026])\\tTest element-wise for finiteness ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[isinf-x, /[, out, where, casting, order, \\u2026])\\tTest element-wise for positive or negative infinity.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[isnan-x, /[, out, where, casting, order, \\u2026])\\tTest element-wise for NaN and return result as a boolean array.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[isnat-x, [, out, where, casting, order, \\u2026])    Test element-wise for NaT ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[log-x, /[, out, where, casting, order, \\u2026])\\tNatural logarithm, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[log10-x, /[, out, where, casting, order, \\u2026])\\tReturn the base 10 logarithm of the input array, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[log1p-x, /[, out, where, casting, order, \\u2026])\\tReturn the natural logarithm of one plus the input array, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[log2-x, /[, out, where, casting, order, \\u2026])\\tBase-2 logarithm of x.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[logical_not-x, /[, out, where, casting, \\u2026])\\tCompute the truth value of NOT x element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[negative-x, /[, out, where, casting, order, \\u2026])\\tNumerical negative, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[positive-x, /[, out, where, casting, order, \\u2026])\\tNumerical positive, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[rad2deg-x, /[, out, where, casting, order, \\u2026])\\tConvert angles from radians to degrees.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[reciprocal-x, /[, out, where, casting, \\u2026])\\tReturn the reciprocal of the argument, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[rint-x, /[, out, where, casting, order, \\u2026])\\tRound elements of the array to the nearest integer.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[sign-x, /[, out, where, casting, order, \\u2026])\\tReturns an element-wise indication of the sign of a number.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[signbit-x, /[, out, where, casting, order, \\u2026])\\tReturns element-wise True where signbit is set ]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[sin-x, /[, out, where, casting, order, \\u2026])\\tTrigonometric sine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[sinh-x, /[, out, where, casting, order, \\u2026])\\tHyperbolic sine, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[spacing-x, /[, out, where, casting, order, \\u2026])\\tReturn the distance between x and the nearest adjacent number.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[sqrt-x, /[, out, where, casting, order, \\u2026])\\tReturn the non-negative square-root of an array, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[square-x, /[, out, where, casting, order, \\u2026])\\tReturn the element-wise square of the input.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[tan-x, /[, out, where, casting, order, \\u2026])\\tCompute tangent element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[tanh-x, /[, out, where, casting, order, \\u2026])\\tCompute hyperbolic tangent element-wise.]": true,
  "test_dataset/test_ndmath.py::test_ndmath_unary_ufuncs_simple_data[trunc-x, /[, out, where, casting, order, \\u2026])\\tReturn the truncated value of the input, element-wise.]": true,
  "test_dataset/test_ndmath.py::test_uncertainty_unit_conversion_operators[__truediv__-result_units3]": true,
  "test_interpolate.py::test_align": true,
  "test_nddataset.py": true,
  "test_nmr_apodization.py::test_nmr_em_calculated_Hz": true,
  "test_nmr_apodization.py::test_nmr_em_calculated_applied": true,
  "test_nmr_apodization.py::test_nmr_em_calculated_inplace": true,
  "test_nmr_apodization.py::test_nmr_em_calculated_notapplied": true,
  "test_nmr_apodization.py::test_nmr_em_nothing_calculated": true,
  "test_nmr_apodization_2D.py::test_nmr_2D_em_": true,
  "test_plotters/test_1D.py::test_1D": true,
  "test_py_in_docs.py::test_example[../docs/user/examples/fitting/~plot_lstsq_2D.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/examples_temporary_deactivated/analysis/plot_2D_iris.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/examples_temporary_deactivated/analysis/plot_efa_keller_massart.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/examples_temporary_deactivated/fitting/plot_lstsq_2D.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/examples_temporary_deactivated/nddataset/plot_baseline_correction.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/tutorials/nmr/~_nmr.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/userguide/dataset/MCR_ALS.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/userguide/nmr/7_nmr.py]": true,
  "test_py_in_docs.py::test_example[../docs/user/userguide/nmr/~_nmr.py]": true,
  "test_units.py::test_matplotlib": true,
  "test_utils/test_py_in_docs.py::test_example[../docs/user/userguide/dataset/2_ndpanel.py]": true,
  "test_utils/test_py_in_docs.py::test_example[../docs/user/userguide/dataset/6_maths.py]": true,
  "test_utils/test_py_in_docs.py::test_example[../docs/user\\\\tutorials\\\\nmr\\\\1_nmr-Copy1.py]": true,
  "test_utils/test_py_in_docs.py::test_example[../docs/user\\\\tutorials\\\\nmr\\\\1_nmr.py]": true,
  "test_utils/test_py_in_docs.py::test_example[../docs/user\\\\tutorials\\\\tuto_agir\\\\tuto1_agir.py]": true
}