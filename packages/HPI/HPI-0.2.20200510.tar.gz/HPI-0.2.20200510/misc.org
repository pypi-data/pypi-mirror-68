Various thoughts on organizing

* Importing external models
- First alternative:
  @lru_cache()
  def hypexport():
      ... import_file

 # doesn't really work either..
 # hypexport = import_file(Path(paths.hypexport.repo) / 'model.py')

 + TODO check pytest friendliness if some paths are missing? Wonder if still easier to control by manually excluding...
 - not mypy/pylint friendly at all?

- Second alternative:
  symlinks in mycfg and direct import?

  + mypy/pylint friendly
  ? keeping a symlink to model.py is not much worse than hardcoding path. so it's ok I guess

* Thoughts on organizing imports
- First way:
  import mycfg.hypexport_model as hypexport
  works, but mycfg is scattered across the repository?

Second way:
  from . import mycfg?
  doesn't seem to work with subpackages?
  right, perhaps symlinking is a good idea after all?...

Third way:
  import mycfg.repos.hypexport.model as hypexport
  works, but MYPYPATH doesn't seem to be happy...
  ok, --namespace-packages solves it..

